{
	"id": "3d8e105fc3e81ce620172d1223aad3da",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/YeeterStrategy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n// External Libraries\n// import {ReentrancyGuard} from \"openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\";\n\n// Intefaces\nimport {IAllo} from \"allo/contracts/core/interfaces/IAllo.sol\";\nimport {IRegistry} from \"allo/contracts/core/interfaces/IRegistry.sol\";\n\n// Core Contracts\nimport {BaseStrategy} from \"allo/contracts/strategies/BaseStrategy.sol\";\n\ncontract YeeterStrategy is BaseStrategy {\n    error INPUT_LENGTH_MISMATCH();\n    error NOOP();\n\n    constructor(address _allo, string memory _name) BaseStrategy(_allo, _name) {}\n\n    function initialize(uint256 _poolId, bytes memory _data) external virtual override {\n        __BaseStrategy_init(_poolId);\n        emit Initialized(_poolId, _data);\n    }\n\n    /// @notice Withdraw funds stuck on contract\n    /// @param _token Token address\n    /// @param _recipient Address to send the funds to\n    /// @param _amount Amount to withdraw\n    function withdraw(address _token, address _recipient, uint256 _amount) external onlyPoolManager(msg.sender) {\n        _transferAmount(_token, _recipient, _amount);\n    }\n\n    receive() external payable {}\n\n    /// @notice Allocate Yeeter funds to recipients\n    /// @param _data Array of recipientAddress , Array of amounts and the token address to allocate the funds to\n    function _allocate(bytes memory _data, address _sender) internal virtual override onlyPoolManager(_sender) {\n        // Decode the data\n        (address[] memory _recipientIds, uint256[] memory _amounts, address _token) =\n            abi.decode(_data, (address[], uint256[], address));\n\n        uint256 payoutLength = _recipientIds.length;\n\n        // Assert at least one recipient\n        if (payoutLength == 0) {\n            revert INPUT_LENGTH_MISMATCH();\n        }\n\n        // Assert recipient and amounts length are equal\n        if (payoutLength != _amounts.length) {\n            revert INPUT_LENGTH_MISMATCH();\n        }\n\n        // Transfer the funds to the recipient\n        for (uint256 i; i < payoutLength;) {\n            uint256 _amount = _amounts[i];\n            address _recipientId = _recipientIds[i];\n\n            _transferAmount(_token, _recipientId, _amount);\n            emit Allocated(_recipientId, _amount, _token, _sender);\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    // Not used in this Strategy\n    function _distribute(address[] memory, bytes memory, address) internal virtual override {\n        revert NOOP();\n    }\n\n    function _getRecipientStatus(address) internal view virtual override returns (Status) {\n        revert NOOP();\n    }\n\n    function _isValidAllocator(address) internal view virtual override returns (bool) {\n        revert NOOP();\n    }\n\n    function _registerRecipient(bytes memory, address) internal virtual override returns (address) {\n        revert NOOP();\n    }\n\n    function _getPayout(address, bytes memory) internal view virtual override returns (PayoutSummary memory) {\n        revert NOOP();\n    }\n}\n"
			},
			"lib/allo-v2/contracts/strategies/BaseStrategy.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.19;\n\n// Interfaces\nimport \"../core/interfaces/IStrategy.sol\";\n\n// Libraries\nimport {Transfer} from \"../core/libraries/Transfer.sol\";\nimport {Errors} from \"../core/libraries/Errors.sol\";\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title BaseStrategy Contract\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice This contract is the base contract for all strategies\n/// @dev This contract is implemented by all strategies.\nabstract contract BaseStrategy is IStrategy, Transfer, Errors {\n    /// ==========================\n    /// === Storage Variables ====\n    /// ==========================\n\n    IAllo internal immutable allo;\n    bytes32 internal immutable strategyId;\n    bool internal poolActive;\n    uint256 internal poolId;\n    uint256 internal poolAmount;\n\n    /// ====================================\n    /// ========== Constructor =============\n    /// ====================================\n\n    /// @notice Constructor to set the Allo contract and \"strategyId'.\n    /// @param _allo Address of the Allo contract.\n    /// @param _name Name of the strategy\n    constructor(address _allo, string memory _name) {\n        allo = IAllo(_allo);\n        strategyId = keccak256(abi.encode(_name));\n    }\n\n    /// ====================================\n    /// =========== Modifiers ==============\n    /// ====================================\n\n    /// @notice Modifier to check if the 'msg.sender' is the Allo contract.\n    /// @dev Reverts if the 'msg.sender' is not the Allo contract.\n    modifier onlyAllo() {\n        _checkOnlyAllo();\n        _;\n    }\n\n    /// @notice Modifier to check if the '_sender' is a pool manager.\n    /// @dev Reverts if the '_sender' is not a pool manager.\n    /// @param _sender The address to check if they are a pool manager\n    modifier onlyPoolManager(address _sender) {\n        _checkOnlyPoolManager(_sender);\n        _;\n    }\n\n    /// @notice Modifier to check if the pool is active.\n    /// @dev Reverts if the pool is not active.\n    modifier onlyActivePool() {\n        _checkOnlyActivePool();\n        _;\n    }\n\n    /// @notice Modifier to check if the pool is inactive.\n    /// @dev Reverts if the pool is active.\n    modifier onlyInactivePool() {\n        _checkInactivePool();\n        _;\n    }\n\n    /// @notice Modifier to check if the pool is initialized.\n    /// @dev Reverts if the pool is not initialized.\n    modifier onlyInitialized() {\n        _checkOnlyInitialized();\n        _;\n    }\n\n    /// ================================\n    /// =========== Views ==============\n    /// ================================\n\n    /// @notice Getter for the 'Allo' contract.\n    /// @return The Allo contract\n    function getAllo() external view override returns (IAllo) {\n        return allo;\n    }\n\n    /// @notice Getter for the 'poolId'.\n    /// @return The ID of the pool\n    function getPoolId() external view override returns (uint256) {\n        return poolId;\n    }\n\n    /// @notice Getter for the 'strategyId'.\n    /// @return The ID of the strategy\n    function getStrategyId() external view override returns (bytes32) {\n        return strategyId;\n    }\n\n    /// @notice Getter for the 'poolAmount'.\n    /// @return The balance of the pool\n    function getPoolAmount() external view virtual override returns (uint256) {\n        return poolAmount;\n    }\n\n    /// @notice Getter for whether or not the pool is active.\n    /// @return 'true' if the pool is active, otherwise 'false'\n    function isPoolActive() external view override returns (bool) {\n        return _isPoolActive();\n    }\n\n    /// @notice Getter for the status of a recipient.\n    /// @param _recipientId The ID of the recipient\n    /// @return The status of the recipient\n    function getRecipientStatus(address _recipientId) external view virtual returns (Status) {\n        return _getRecipientStatus(_recipientId);\n    }\n\n    /// ====================================\n    /// =========== Functions ==============\n    /// ====================================\n\n    /// @notice Initializes the 'Basetrategy'.\n    /// @dev Will revert if the poolId is invalid or already initialized\n    /// @param _poolId ID of the pool\n    function __BaseStrategy_init(uint256 _poolId) internal virtual onlyAllo {\n        // check if pool ID is not initialized already, if it is, revert\n        if (poolId != 0) revert ALREADY_INITIALIZED();\n\n        // check if pool ID is valid and not zero (0), if it is, revert\n        if (_poolId == 0) revert INVALID();\n        poolId = _poolId;\n    }\n\n    /// @notice Increases the pool amount.\n    /// @dev Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\n    /// @param _amount The amount to increase the pool by\n    function increasePoolAmount(uint256 _amount) external override onlyAllo {\n        _beforeIncreasePoolAmount(_amount);\n        poolAmount += _amount;\n        _afterIncreasePoolAmount(_amount);\n    }\n\n    /// @notice Registers a recipient.\n    /// @dev Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the\n    ///      strategy implementation. Only 'Allo' contract can call this when it is initialized.\n    /// @param _data The data to use to register the recipient\n    /// @param _sender The address of the sender\n    /// @return recipientId The recipientId\n    function registerRecipient(bytes memory _data, address _sender)\n        external\n        payable\n        onlyAllo\n        onlyInitialized\n        returns (address recipientId)\n    {\n        _beforeRegisterRecipient(_data, _sender);\n        recipientId = _registerRecipient(_data, _sender);\n        _afterRegisterRecipient(_data, _sender);\n    }\n\n    /// @notice Allocates to a recipient.\n    /// @dev The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can\n    ///      call this when it is initialized.\n    /// @param _data The data to use to allocate to the recipient\n    /// @param _sender The address of the sender\n    function allocate(bytes memory _data, address _sender) external payable onlyAllo onlyInitialized {\n        _beforeAllocate(_data, _sender);\n        _allocate(_data, _sender);\n        _afterAllocate(_data, _sender);\n    }\n\n    /// @notice Distributes funds (tokens) to recipients.\n    /// @dev The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can\n    ///      call this when it is initialized.\n    /// @param _recipientIds The IDs of the recipients\n    /// @param _data The data to use to distribute to the recipients\n    /// @param _sender The address of the sender\n    function distribute(address[] memory _recipientIds, bytes memory _data, address _sender)\n        external\n        onlyAllo\n        onlyInitialized\n    {\n        _beforeDistribute(_recipientIds, _data, _sender);\n        _distribute(_recipientIds, _data, _sender);\n        _afterDistribute(_recipientIds, _data, _sender);\n    }\n\n    /// @notice Gets the payout summary for recipients.\n    /// @dev The encoded '_data' will be determined by the strategy implementation.\n    /// @param _recipientIds The IDs of the recipients\n    /// @param _data The data to use to get the payout summary for the recipients\n    /// @return The payout summary for the recipients\n    function getPayouts(address[] memory _recipientIds, bytes[] memory _data)\n        external\n        view\n        virtual\n        override\n        returns (PayoutSummary[] memory)\n    {\n        uint256 recipientLength = _recipientIds.length;\n        // check if the length of the recipient IDs and data arrays are equal, if they are not, revert\n        if (recipientLength != _data.length) revert ARRAY_MISMATCH();\n\n        PayoutSummary[] memory payouts = new PayoutSummary[](recipientLength);\n        for (uint256 i; i < recipientLength;) {\n            payouts[i] = _getPayout(_recipientIds[i], _data[i]);\n            unchecked {\n                i++;\n            }\n        }\n        return payouts;\n    }\n\n    /// @notice Checks if the '_allocator' is a valid allocator.\n    /// @dev How the allocator is determined is up to the strategy implementation.\n    /// @param _allocator The address to check if it is a valid allocator for the strategy.\n    /// @return 'true' if the address is a valid allocator, 'false' otherwise\n    function isValidAllocator(address _allocator) external view virtual override returns (bool) {\n        return _isValidAllocator(_allocator);\n    }\n\n    /// ====================================\n    /// ============ Internal ==============\n    /// ====================================\n\n    /// @notice Checks if the 'msg.sender' is the Allo contract.\n    /// @dev Reverts if the 'msg.sender' is not the Allo contract.\n    function _checkOnlyAllo() internal view {\n        if (msg.sender != address(allo)) revert UNAUTHORIZED();\n    }\n\n    /// @notice Checks if the '_sender' is a pool manager.\n    /// @dev Reverts if the '_sender' is not a pool manager.\n    /// @param _sender The address to check if they are a pool manager\n    function _checkOnlyPoolManager(address _sender) internal view {\n        if (!allo.isPoolManager(poolId, _sender)) revert UNAUTHORIZED();\n    }\n\n    /// @notice Checks if the pool is active.\n    /// @dev Reverts if the pool is not active.\n    function _checkOnlyActivePool() internal view {\n        if (!poolActive) revert POOL_INACTIVE();\n    }\n\n    /// @notice Checks if the pool is inactive.\n    /// @dev Reverts if the pool is active.\n    function _checkInactivePool() internal view {\n        if (poolActive) revert POOL_ACTIVE();\n    }\n\n    /// @notice Checks if the pool is initialized.\n    /// @dev Reverts if the pool is not initialized.\n    function _checkOnlyInitialized() internal view {\n        if (poolId == 0) revert NOT_INITIALIZED();\n    }\n\n    /// @notice Set the pool to active or inactive status.\n    /// @dev This will emit a 'PoolActive()' event. Used by the strategy implementation.\n    /// @param _active The status to set, 'true' means active, 'false' means inactive\n    function _setPoolActive(bool _active) internal {\n        poolActive = _active;\n        emit PoolActive(_active);\n    }\n\n    /// @notice Checks if the pool is active.\n    /// @dev Used by the strategy implementation.\n    /// @return 'true' if the pool is active, otherwise 'false'\n    function _isPoolActive() internal view virtual returns (bool) {\n        return poolActive;\n    }\n\n    /// @notice Checks if the allocator is valid\n    /// @param _allocator The allocator address\n    /// @return 'true' if the allocator is valid, otherwise 'false'\n    function _isValidAllocator(address _allocator) internal view virtual returns (bool);\n\n    /// @notice This will register a recipient, set their status (and any other strategy specific values), and\n    ///         return the ID of the recipient.\n    /// @dev Able to change status all the way up to Accepted, or to Pending and if there are more steps, additional\n    ///      functions should be added to allow the owner to check this. The owner could also check attestations directly\n    ///      and then Accept for instance.\n    /// @param _data The data to use to register the recipient\n    /// @param _sender The address of the sender\n    /// @return The ID of the recipient\n    function _registerRecipient(bytes memory _data, address _sender) internal virtual returns (address);\n\n    /// @notice This will allocate to a recipient.\n    /// @dev The encoded '_data' will be determined by the strategy implementation.\n    /// @param _data The data to use to allocate to the recipient\n    /// @param _sender The address of the sender\n    function _allocate(bytes memory _data, address _sender) internal virtual;\n\n    /// @notice This will distribute funds (tokens) to recipients.\n    /// @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\n    /// this contract will need to track the amount paid already, so that it doesn't double pay.\n    /// @param _recipientIds The ids of the recipients to distribute to\n    /// @param _data Data required will depend on the strategy implementation\n    /// @param _sender The address of the sender\n    function _distribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal virtual;\n\n    /// @notice This will get the payout summary for a recipient.\n    /// @dev The encoded '_data' will be determined by the strategy implementation.\n    /// @param _recipientId The ID of the recipient\n    /// @param _data The data to use to get the payout summary for the recipient\n    /// @return The payout summary for the recipient\n    function _getPayout(address _recipientId, bytes memory _data)\n        internal\n        view\n        virtual\n        returns (PayoutSummary memory);\n\n    /// @notice This will get the status of a recipient.\n    /// @param _recipientId The ID of the recipient\n    /// @return The status of the recipient\n    function _getRecipientStatus(address _recipientId) internal view virtual returns (Status);\n\n    /// ===================================\n    /// ============== Hooks ==============\n    /// ===================================\n\n    /// @notice Hook called before increasing the pool amount.\n    /// @param _amount The amount to increase the pool by\n    function _beforeIncreasePoolAmount(uint256 _amount) internal virtual {}\n\n    /// @notice Hook called after increasing the pool amount.\n    /// @param _amount The amount to increase the pool by\n    function _afterIncreasePoolAmount(uint256 _amount) internal virtual {}\n\n    /// @notice Hook called before registering a recipient.\n    /// @param _data The data to use to register the recipient\n    /// @param _sender The address of the sender\n    function _beforeRegisterRecipient(bytes memory _data, address _sender) internal virtual {}\n\n    /// @notice Hook called after registering a recipient.\n    /// @param _data The data to use to register the recipient\n    /// @param _sender The address of the sender\n    function _afterRegisterRecipient(bytes memory _data, address _sender) internal virtual {}\n\n    /// @notice Hook called before allocating to a recipient.\n    /// @param _data The data to use to allocate to the recipient\n    /// @param _sender The address of the sender\n    function _beforeAllocate(bytes memory _data, address _sender) internal virtual {}\n\n    /// @notice Hook called after allocating to a recipient.\n    /// @param _data The data to use to allocate to the recipient\n    /// @param _sender The address of the sender\n    function _afterAllocate(bytes memory _data, address _sender) internal virtual {}\n\n    /// @notice Hook called before distributing funds (tokens) to recipients.\n    /// @param _recipientIds The IDs of the recipients\n    /// @param _data The data to use to distribute to the recipients\n    /// @param _sender The address of the sender\n    function _beforeDistribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal virtual {}\n\n    /// @notice Hook called after distributing funds (tokens) to recipients.\n    /// @param _recipientIds The IDs of the recipients\n    /// @param _data The data to use to distribute to the recipients\n    /// @param _sender The address of the sender\n    function _afterDistribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal virtual {}\n}\n"
			},
			"lib/allo-v2/contracts/core/interfaces/IRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n// Internal Libraries\nimport {Metadata} from \"../libraries/Metadata.sol\";\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title IRegistry Interface\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice Interface for the Registry contract and exposes all functions needed to use the Registry\n///         within the Allo protocol.\n/// @dev The Registry Interface is used to interact with the Allo protocol and create profiles\n///      that can be used to interact with the Allo protocol. The Registry is the main contract\n///      that all other contracts interact with to get the 'Profile' information needed to\n///      interact with the Allo protocol. The Registry is also used to create new profiles\n///      and update existing profiles. The Registry is also used to add and remove members\n///      from a profile. The Registry will not always be used in a strategy and will depend on\n///      the strategy being used.\ninterface IRegistry {\n    /// ======================\n    /// ======= Structs ======\n    /// ======================\n\n    /// @dev The Profile struct that all profiles are based from\n    struct Profile {\n        bytes32 id;\n        uint256 nonce;\n        string name;\n        Metadata metadata;\n        address owner;\n        address anchor;\n    }\n\n    /// ======================\n    /// ======= Events =======\n    /// ======================\n\n    /// @dev Emitted when a profile is created. This will return your anchor address.\n    event ProfileCreated(\n        bytes32 indexed profileId, uint256 nonce, string name, Metadata metadata, address owner, address anchor\n    );\n\n    /// @dev Emitted when a profile name is updated. This will update the anchor when the name is updated and return it.\n    event ProfileNameUpdated(bytes32 indexed profileId, string name, address anchor);\n\n    /// @dev Emitted when a profile's metadata is updated.\n    event ProfileMetadataUpdated(bytes32 indexed profileId, Metadata metadata);\n\n    /// @dev Emitted when a profile owner is updated.\n    event ProfileOwnerUpdated(bytes32 indexed profileId, address owner);\n\n    /// @dev Emitted when a profile pending owner is updated.\n    event ProfilePendingOwnerUpdated(bytes32 indexed profileId, address pendingOwner);\n\n    /// =========================\n    /// ==== View Functions =====\n    /// =========================\n\n    /// @dev Returns the 'Profile' for a '_profileId' passed\n    /// @param _profileId The 'profileId' to return the 'Profile' for\n    /// @return profile The 'Profile' for the '_profileId' passed\n    function getProfileById(bytes32 _profileId) external view returns (Profile memory profile);\n\n    /// @dev Returns the 'Profile' for an '_anchor' passed\n    /// @param _anchor The 'anchor' to return the 'Profile' for\n    /// @return profile The 'Profile' for the '_anchor' passed\n    function getProfileByAnchor(address _anchor) external view returns (Profile memory profile);\n\n    /// @dev Returns a boolean if the '_account' is a member or owner of the '_profileId' passed in\n    /// @param _profileId The 'profileId' to check if the '_account' is a member or owner of\n    /// @param _account The 'account' to check if they are a member or owner of the '_profileId' passed in\n    /// @return isOwnerOrMemberOfProfile A boolean if the '_account' is a member or owner of the '_profileId' passed in\n    function isOwnerOrMemberOfProfile(bytes32 _profileId, address _account)\n        external\n        view\n        returns (bool isOwnerOrMemberOfProfile);\n\n    /// @dev Returns a boolean if the '_account' is an owner of the '_profileId' passed in\n    /// @param _profileId The 'profileId' to check if the '_account' is an owner of\n    /// @param _owner The 'owner' to check if they are an owner of the '_profileId' passed in\n    /// @return isOwnerOfProfile A boolean if the '_account' is an owner of the '_profileId' passed in\n    function isOwnerOfProfile(bytes32 _profileId, address _owner) external view returns (bool isOwnerOfProfile);\n\n    /// @dev Returns a boolean if the '_account' is a member of the '_profileId' passed in\n    /// @param _profileId The 'profileId' to check if the '_account' is a member of\n    /// @param _member The 'member' to check if they are a member of the '_profileId' passed in\n    /// @return isMemberOfProfile A boolean if the '_account' is a member of the '_profileId' passed in\n    function isMemberOfProfile(bytes32 _profileId, address _member) external view returns (bool isMemberOfProfile);\n\n    /// ====================================\n    /// ==== External/Public Functions =====\n    /// ====================================\n\n    /// @dev Creates a new 'Profile' and returns the 'profileId' of the new profile\n    ///\n    /// Note: The 'name' and 'nonce' are used to generate the 'anchor' address\n    ///\n    /// Requirements: None, anyone can create a new profile\n    ///\n    /// @param _nonce The nonce to use to generate the 'anchor' address\n    /// @param _name The name to use to generate the 'anchor' address\n    /// @param _metadata The 'Metadata' to use to generate the 'anchor' address\n    /// @param _owner The 'owner' to use to generate the 'anchor' address\n    /// @param _members The 'members' to use to generate the 'anchor' address\n    /// @return profileId The 'profileId' of the new profile\n    function createProfile(\n        uint256 _nonce,\n        string memory _name,\n        Metadata memory _metadata,\n        address _owner,\n        address[] memory _members\n    ) external returns (bytes32 profileId);\n\n    /// @dev Updates the 'name' of the '_profileId' passed in and returns the new 'anchor' address\n    ///\n    /// Requirements: Only the 'Profile' owner can update the name\n    ///\n    /// Note: The 'name' and 'nonce' are used to generate the 'anchor' address and this will update the 'anchor'\n    ///       so please use caution. You can always recreate your 'anchor' address by updating the name back\n    ///       to the original name used to create the profile.\n    ///\n    /// @param _profileId The 'profileId' to update the name for\n    /// @param _name The new 'name' value\n    /// @return anchor The new 'anchor' address\n    function updateProfileName(bytes32 _profileId, string memory _name) external returns (address anchor);\n\n    /// @dev Updates the 'Metadata' of the '_profileId' passed in\n    ///\n    /// Requirements: Only the 'Profile' owner can update the metadata\n    ///\n    /// @param _profileId The 'profileId' to update the metadata for\n    /// @param _metadata The new 'Metadata' value\n    function updateProfileMetadata(bytes32 _profileId, Metadata memory _metadata) external;\n\n    /// @dev Updates the pending 'owner' of the '_profileId' passed in\n    ///\n    /// Requirements: Only the 'Profile' owner can update the pending owner\n    ///\n    /// @param _profileId The 'profileId' to update the pending owner for\n    /// @param _pendingOwner The new pending 'owner' value\n    function updateProfilePendingOwner(bytes32 _profileId, address _pendingOwner) external;\n\n    /// @dev Accepts the pending 'owner' of the '_profileId' passed in\n    ///\n    /// Requirements: Only the pending owner can accept the ownership\n    ///\n    /// @param _profileId The 'profileId' to accept the ownership for\n    function acceptProfileOwnership(bytes32 _profileId) external;\n\n    /// @dev Adds members to the '_profileId' passed in\n    ///\n    /// Requirements: Only the 'Profile' owner can add members\n    ///\n    /// @param _profileId The 'profileId' to add members to\n    /// @param _members The members to add to the '_profileId' passed in\n    function addMembers(bytes32 _profileId, address[] memory _members) external;\n\n    /// @dev Removes members from the '_profileId' passed in\n    ///\n    /// Requirements: Only the 'Profile' owner can remove members\n    ///\n    /// @param _profileId The 'profileId' to remove members from\n    /// @param _members The members to remove from the '_profileId' passed in\n    function removeMembers(bytes32 _profileId, address[] memory _members) external;\n\n    /// @dev Recovers funds from the contract\n    ///\n    /// Requirements: Must be the Allo owner\n    ///\n    /// @param _token The token you want to use to recover funds\n    /// @param _recipient The recipient of the recovered funds\n    function recoverFunds(address _token, address _recipient) external;\n}\n"
			},
			"lib/allo-v2/contracts/core/interfaces/IAllo.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.19;\n\n// Interfaces\nimport {IRegistry} from \"./IRegistry.sol\";\nimport {IStrategy} from \"./IStrategy.sol\";\n// Internal Libraries\nimport {Metadata} from \"../libraries/Metadata.sol\";\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title Allo Interface\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice Interface for the Allo contract. It exposes all functions needed to use the Allo protocol.\ninterface IAllo {\n    /// ======================\n    /// ======= Structs ======\n    /// ======================\n\n    /// @notice the Pool struct that all strategy pools are based from\n    struct Pool {\n        bytes32 profileId;\n        IStrategy strategy;\n        address token;\n        Metadata metadata;\n        bytes32 managerRole;\n        bytes32 adminRole;\n    }\n\n    /// ======================\n    /// ======= Events =======\n    /// ======================\n\n    /// @notice Event emitted when a new pool is created\n    /// @param poolId ID of the pool created\n    /// @param profileId ID of the profile the pool is associated with\n    /// @param strategy Address of the strategy contract\n    /// @param token Address of the token pool was funded with when created\n    /// @param amount Amount pool was funded with when created\n    /// @param metadata Pool metadata\n    event PoolCreated(\n        uint256 indexed poolId,\n        bytes32 indexed profileId,\n        IStrategy strategy,\n        address token,\n        uint256 amount,\n        Metadata metadata\n    );\n\n    /// @notice Emitted when a pools metadata is updated\n    /// @param poolId ID of the pool updated\n    /// @param metadata Pool metadata that was updated\n    event PoolMetadataUpdated(uint256 indexed poolId, Metadata metadata);\n\n    /// @notice Emitted when a pool is funded\n    /// @param poolId ID of the pool funded\n    /// @param amount Amount funded to the pool\n    /// @param fee Amount of the fee paid to the treasury\n    event PoolFunded(uint256 indexed poolId, uint256 amount, uint256 fee);\n\n    /// @notice Emitted when the base fee is paid\n    /// @param poolId ID of the pool the base fee was paid for\n    /// @param amount Amount of the base fee paid\n    event BaseFeePaid(uint256 indexed poolId, uint256 amount);\n\n    /// @notice Emitted when the treasury address is updated\n    /// @param treasury Address of the new treasury\n    event TreasuryUpdated(address treasury);\n\n    /// @notice Emitted when the percent fee is updated\n    /// @param percentFee New percentage for the fee\n    event PercentFeeUpdated(uint256 percentFee);\n\n    /// @notice Emitted when the base fee is updated\n    /// @param baseFee New base fee amount\n    event BaseFeeUpdated(uint256 baseFee);\n\n    /// @notice Emitted when the registry address is updated\n    /// @param registry Address of the new registry\n    event RegistryUpdated(address registry);\n\n    /// @notice Emitted when a strategy is approved and added to the cloneable strategies\n    /// @param strategy Address of the strategy approved\n    event StrategyApproved(address strategy);\n\n    /// @notice Emitted when a strategy is removed from the cloneable strategies\n    /// @param strategy Address of the strategy removed\n    event StrategyRemoved(address strategy);\n\n    /// ====================================\n    /// ==== External/Public Functions =====\n    /// ====================================\n\n    /// @notice Initialize the Allo contract\n    /// @param _owner Address of the owner\n    /// @param _registry Address of the registry contract\n    /// @param _treasury Address of the treasury\n    /// @param _percentFee Percentage for the fee\n    /// @param _baseFee Base fee amount\n    function initialize(\n        address _owner,\n        address _registry,\n        address payable _treasury,\n        uint256 _percentFee,\n        uint256 _baseFee\n    ) external;\n\n    /// @notice Creates a new pool (with a custom strategy)\n    /// @dev 'msg.sender' must be a member or owner of a profile to create a pool with or without a custom strategy, The encoded data\n    ///      will be specific to a given strategy requirements, reference the strategy implementation of 'initialize()'. The strategy\n    ///      address passed must not be a cloneable strategy. The strategy address passed must not be the zero address. 'msg.sender' must\n    ///      be a member or owner of the profile id passed as '_profileId'.\n    /// @param _profileId The 'profileId' of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\n    /// @param _strategy The address of the deployed custom strategy\n    /// @param _initStrategyData The data to initialize the strategy\n    /// @param _token The address of the token you want to use in your pool\n    /// @param _amount The amount of the token you want to deposit into the pool on initialization\n    /// @param _metadata The 'Metadata' of the pool, this uses our 'Meatdata.sol' struct (consistent throughout the protocol)\n    /// @param _managers The managers of the pool, and can be added/removed later by the pool admin\n    /// @return poolId The ID of the pool\n    function createPoolWithCustomStrategy(\n        bytes32 _profileId,\n        address _strategy,\n        bytes memory _initStrategyData,\n        address _token,\n        uint256 _amount,\n        Metadata memory _metadata,\n        address[] memory _managers\n    ) external payable returns (uint256 poolId);\n\n    /// @notice Creates a new pool (by cloning a cloneable strategies).\n    /// @dev 'msg.sender' must be owner or member of the profile id passed as '_profileId'.\n    /// @param _profileId The ID of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\n    /// @param _strategy The address of the strategy contract the pool will use.\n    /// @param _initStrategyData The data to initialize the strategy\n    /// @param _token The address of the token\n    /// @param _amount The amount of the token\n    /// @param _metadata The metadata of the pool\n    /// @param _managers The managers of the pool\n    /// @custom:initstrategydata The encoded data will be specific to a given strategy requirements,\n    ///    reference the strategy implementation of 'initialize()'\n    function createPool(\n        bytes32 _profileId,\n        address _strategy,\n        bytes memory _initStrategyData,\n        address _token,\n        uint256 _amount,\n        Metadata memory _metadata,\n        address[] memory _managers\n    ) external payable returns (uint256 poolId);\n\n    /// @notice Updates a pools metadata.\n    /// @dev 'msg.sender' must be a pool admin.\n    /// @param _poolId The ID of the pool to update\n    /// @param _metadata The new metadata to set\n    function updatePoolMetadata(uint256 _poolId, Metadata memory _metadata) external;\n\n    /// @notice Update the registry address.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _registry The new registry address\n    function updateRegistry(address _registry) external;\n\n    /// @notice Updates the treasury address.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _treasury The new treasury address\n    function updateTreasury(address payable _treasury) external;\n\n    /// @notice Updates the percentage for the fee.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _percentFee The new percentage for the fee\n    function updatePercentFee(uint256 _percentFee) external;\n\n    /// @notice Updates the base fee.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _baseFee The new base fee\n    function updateBaseFee(uint256 _baseFee) external;\n\n    /// @notice Adds a strategy to the cloneable strategies.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _strategy The address of the strategy to add\n    function addToCloneableStrategies(address _strategy) external;\n\n    /// @notice Removes a strategy from the cloneable strategies.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _strategy The address of the strategy to remove\n    function removeFromCloneableStrategies(address _strategy) external;\n\n    /// @notice Adds a pool manager to the pool.\n    /// @dev 'msg.sender' must be a pool admin.\n    /// @param _poolId The ID of the pool to add the manager to\n    /// @param _manager The address of the manager to add\n    function addPoolManager(uint256 _poolId, address _manager) external;\n\n    /// @notice Removes a pool manager from the pool.\n    /// @dev 'msg.sender' must be a pool admin.\n    /// @param _poolId The ID of the pool to remove the manager from\n    /// @param _manager The address of the manager to remove\n    function removePoolManager(uint256 _poolId, address _manager) external;\n\n    /// @notice Recovers funds from a pool.\n    /// @dev 'msg.sender' must be a pool admin.\n    /// @param _token The token to recover\n    /// @param _recipient The address to send the recovered funds to\n    function recoverFunds(address _token, address _recipient) external;\n\n    /// @notice Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy.\n    /// @param _poolId The ID of the pool to register the recipient for\n    function registerRecipient(uint256 _poolId, bytes memory _data) external payable returns (address);\n\n    /// @notice Registers a batch of recipients.\n    /// @param _poolIds The pool ID's to register the recipients for\n    /// @param _data The data to pass to the strategy and may be handled differently by each strategy\n    function batchRegisterRecipient(uint256[] memory _poolIds, bytes[] memory _data)\n        external\n        returns (address[] memory);\n\n    /// @notice Funds a pool.\n    /// @dev 'msg.value' must be greater than 0 if the token is the native token\n    ///       or '_amount' must be greater than 0 if the token is not the native token.\n    /// @param _poolId The ID of the pool to fund\n    /// @param _amount The amount to fund the pool with\n    function fundPool(uint256 _poolId, uint256 _amount) external payable;\n\n    /// @notice Allocates funds to a recipient.\n    /// @dev Each strategy will handle the allocation of funds differently.\n    /// @param _poolId The ID of the pool to allocate funds from\n    /// @param _data The data to pass to the strategy and may be handled differently by each strategy.\n    function allocate(uint256 _poolId, bytes memory _data) external payable;\n\n    /// @notice Allocates funds to multiple recipients.\n    /// @dev Each strategy will handle the allocation of funds differently\n    function batchAllocate(uint256[] calldata _poolIds, bytes[] memory _datas) external;\n\n    /// @notice Distributes funds to recipients and emits {Distributed} event if successful\n    /// @dev Each strategy will handle the distribution of funds differently\n    /// @param _poolId The ID of the pool to distribute from\n    /// @param _recipientIds The recipient ids to distribute to\n    /// @param _data The data to pass to the strategy and may be handled differently by each strategy\n    function distribute(uint256 _poolId, address[] memory _recipientIds, bytes memory _data) external;\n\n    /// =========================\n    /// ==== View Functions =====\n    /// =========================\n\n    /// @notice Checks if an address is a pool admin.\n    /// @param _poolId The ID of the pool to check\n    /// @param _address The address to check\n    /// @return 'true' if the '_address' is a pool admin, otherwise 'false'\n    function isPoolAdmin(uint256 _poolId, address _address) external view returns (bool);\n\n    /// @notice Checks if an address is a pool manager.\n    /// @param _poolId The ID of the pool to check\n    /// @param _address The address to check\n    /// @return 'true' if the '_address' is a pool manager, otherwise 'false'\n    function isPoolManager(uint256 _poolId, address _address) external view returns (bool);\n\n    /// @notice Checks if a strategy is cloneable (is in the cloneableStrategies mapping).\n    /// @param _strategy The address of the strategy to check\n    /// @return 'true' if the '_strategy' is cloneable, otherwise 'false'\n    function isCloneableStrategy(address _strategy) external view returns (bool);\n\n    /// @notice Returns the address of the strategy for a given 'poolId'\n    /// @param _poolId The ID of the pool to check\n    /// @return strategy The address of the strategy for the ID of the pool passed in\n    function getStrategy(uint256 _poolId) external view returns (address);\n\n    /// @notice Returns the current percent fee\n    /// @return percentFee The current percentage for the fee\n    function getPercentFee() external view returns (uint256);\n\n    /// @notice Returns the current base fee\n    /// @return baseFee The current base fee\n    function getBaseFee() external view returns (uint256);\n\n    /// @notice Returns the current treasury address\n    /// @return treasury The current treasury address\n    function getTreasury() external view returns (address payable);\n\n    /// @notice Returns the current registry address\n    /// @return registry The current registry address\n    function getRegistry() external view returns (IRegistry);\n\n    /// @notice Returns the 'Pool' struct for a given 'poolId'\n    /// @param _poolId The ID of the pool to check\n    /// @return pool The 'Pool' struct for the ID of the pool passed in\n    function getPool(uint256 _poolId) external view returns (Pool memory);\n\n    /// @notice Returns the current fee denominator\n    /// @dev 1e18 represents 100%\n    /// @return feeDenominator The current fee denominator\n    function getFeeDenominator() external view returns (uint256);\n}\n"
			},
			"lib/allo-v2/contracts/core/libraries/Errors.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.19;\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title Errors\n/// @author @thelostone-mc <aditya@gitcoin.co>, @KurtMerbeth <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>\n/// @notice Library containing all custom errors the protocol may revert with.\ncontract Errors {\n    /// ======================\n    /// ====== Generic =======\n    /// ======================\n\n    /// @notice Thrown as a general error when input / data is invalid\n    error INVALID();\n\n    /// @notice Thrown when mismatch in decoding data\n    error MISMATCH();\n\n    /// @notice Thrown when not enough funds are available\n    error NOT_ENOUGH_FUNDS();\n\n    /// @notice Thrown when user is not authorized\n    error UNAUTHORIZED();\n\n    /// @notice Thrown when address is the zero address\n    error ZERO_ADDRESS();\n\n    /// @notice Thrown when the function is not implemented\n    error NOT_IMPLEMENTED();\n\n    /// @notice Thrown when the value is non-zero\n    error NON_ZERO_VALUE();\n\n    /// ======================\n    /// ====== Registry ======\n    /// ======================\n\n    /// @dev Thrown when the nonce passed has been used or not available\n    error NONCE_NOT_AVAILABLE();\n\n    /// @dev Thrown when the 'msg.sender' is not the pending owner on ownership transfer\n    error NOT_PENDING_OWNER();\n\n    /// @dev Thrown if the anchor creation fails\n    error ANCHOR_ERROR();\n\n    /// ======================\n    /// ======== Allo ========\n    /// ======================\n\n    /// @notice Thrown when the strategy is not approved\n    error NOT_APPROVED_STRATEGY();\n\n    /// @notice Thrown when the strategy is approved and should be cloned\n    error IS_APPROVED_STRATEGY();\n\n    /// @notice Thrown when the fee is below 1e18 which is the fee percentage denominator\n    error INVALID_FEE();\n\n    /// ======================\n    /// ===== IStrategy ======\n    /// ======================\n\n    /// @notice Thrown when data is already intialized\n    error ALREADY_INITIALIZED();\n\n    /// @notice Thrown when data is yet to be initialized\n    error NOT_INITIALIZED();\n\n    /// @notice Thrown when an invalid address is used\n    error INVALID_ADDRESS();\n\n    /// @notice Thrown when a pool is inactive\n    error POOL_INACTIVE();\n\n    /// @notice Thrown when a pool is already active\n    error POOL_ACTIVE();\n\n    /// @notice Thrown when two arrays length are not equal\n    error ARRAY_MISMATCH();\n\n    /// @notice Thrown when the registration is invalid.\n    error INVALID_REGISTRATION();\n\n    /// @notice Thrown when the metadata is invalid.\n    error INVALID_METADATA();\n\n    /// @notice Thrown when the recipient is not accepted.\n    error RECIPIENT_NOT_ACCEPTED();\n\n    /// @notice Thrown when recipient is already accepted.\n    error RECIPIENT_ALREADY_ACCEPTED();\n\n    /// @notice Thrown when registration is not active.\n    error REGISTRATION_NOT_ACTIVE();\n\n    /// @notice Thrown when registration is active.\n    error REGISTRATION_ACTIVE();\n\n    /// @notice Thrown when there is an error in recipient.\n    error RECIPIENT_ERROR(address recipientId);\n\n    /// @notice Thrown when the allocation is not active.\n    error ALLOCATION_NOT_ACTIVE();\n\n    /// @notice Thrown when the allocation is not ended.\n    error ALLOCATION_NOT_ENDED();\n\n    /// @notice Thrown when the allocation is active.\n    error ALLOCATION_ACTIVE();\n}\n"
			},
			"lib/allo-v2/contracts/core/libraries/Transfer.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.19;\n\n// External Libraries\nimport {SafeTransferLib} from \"solady/utils/SafeTransferLib.sol\";\n// Internal Libraries\nimport \"./Native.sol\";\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title Transfer contract\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice A helper contract to transfer tokens within Allo protocol\n/// @dev Handles the transfer of tokens to an address\ncontract Transfer is Native {\n    /// @notice Thrown when the amount of tokens sent does not match the amount of tokens expected\n    error AMOUNT_MISMATCH();\n\n    /// @notice This holds the details for a transfer\n    struct TransferData {\n        address from;\n        address to;\n        uint256 amount;\n    }\n\n    /// @notice Transfer an amount of a token to an array of addresses\n    /// @param _token The address of the token\n    /// @param _transferData TransferData[]\n    /// @return Whether the transfer was successful or not\n    function _transferAmountsFrom(address _token, TransferData[] memory _transferData)\n        internal\n        virtual\n        returns (bool)\n    {\n        uint256 msgValue = msg.value;\n\n        for (uint256 i; i < _transferData.length;) {\n            TransferData memory transferData = _transferData[i];\n\n            if (_token == NATIVE) {\n                msgValue -= transferData.amount;\n                SafeTransferLib.safeTransferETH(transferData.to, transferData.amount);\n            } else {\n                SafeTransferLib.safeTransferFrom(_token, transferData.from, transferData.to, transferData.amount);\n            }\n\n            unchecked {\n                i++;\n            }\n        }\n\n        if (msgValue != 0) revert AMOUNT_MISMATCH();\n\n        return true;\n    }\n\n    /// @notice Transfer an amount of a token to an address\n    /// @param _token The address of the token\n    /// @param _transferData Individual TransferData\n    /// @return Whether the transfer was successful or not\n    function _transferAmountFrom(address _token, TransferData memory _transferData) internal virtual returns (bool) {\n        uint256 amount = _transferData.amount;\n        if (_token == NATIVE) {\n            // Native Token\n            if (msg.value < amount) revert AMOUNT_MISMATCH();\n\n            SafeTransferLib.safeTransferETH(_transferData.to, amount);\n        } else {\n            SafeTransferLib.safeTransferFrom(_token, _transferData.from, _transferData.to, amount);\n        }\n        return true;\n    }\n\n    /// @notice Transfer an amount of a token to an address\n    /// @param _token The token to transfer\n    /// @param _to The address to transfer to\n    /// @param _amount The amount to transfer\n    function _transferAmount(address _token, address _to, uint256 _amount) internal virtual {\n        if (_token == NATIVE) {\n            SafeTransferLib.safeTransferETH(_to, _amount);\n        } else {\n            SafeTransferLib.safeTransfer(_token, _to, _amount);\n        }\n    }\n\n    /// @notice Get the balance of a token for an account\n    /// @param _token The token to get the balance of\n    /// @param _account The account to get the balance for\n    /// @return The balance of the token for the account\n    function _getBalance(address _token, address _account) internal view returns (uint256) {\n        if (_token == NATIVE) {\n            return payable(_account).balance;\n        } else {\n            return SafeTransferLib.balanceOf(_token, _account);\n        }\n    }\n}\n"
			},
			"lib/allo-v2/contracts/core/interfaces/IStrategy.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.19;\n\n// Interfaces\nimport {IAllo} from \"./IAllo.sol\";\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title IStrategy Interface\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co> @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice BaseStrategy is the base contract that all strategies should inherit from and uses this interface.\n\ninterface IStrategy {\n    /// ======================\n    /// ======= Storage ======\n    /// ======================\n\n    /// @notice The Status enum that all recipients are based from\n    enum Status {\n        None,\n        Pending,\n        Accepted,\n        Rejected,\n        Appealed,\n        InReview,\n        Canceled\n    }\n\n    /// @notice Payout summary struct to hold the payout data\n    struct PayoutSummary {\n        address recipientAddress;\n        uint256 amount;\n    }\n\n    /// ======================\n    /// ======= Events =======\n    /// ======================\n\n    /// @notice Emitted when strategy is initialized.\n    /// @param poolId The ID of the pool\n    /// @param data The data passed to the 'initialize' function\n    event Initialized(uint256 poolId, bytes data);\n\n    /// @notice Emitted when a recipient is registered.\n    /// @param recipientId The ID of the recipient\n    /// @param data The data passed to the 'registerRecipient' function\n    /// @param sender The sender\n    event Registered(address indexed recipientId, bytes data, address sender);\n\n    /// @notice Emitted when a recipient is allocated to.\n    /// @param recipientId The ID of the recipient\n    /// @param amount The amount allocated\n    /// @param token The token allocated\n    event Allocated(address indexed recipientId, uint256 amount, address token, address sender);\n\n    /// @notice Emitted when tokens are distributed.\n    /// @param recipientId The ID of the recipient\n    /// @param recipientAddress The recipient\n    /// @param amount The amount distributed\n    /// @param sender The sender\n    event Distributed(address indexed recipientId, address recipientAddress, uint256 amount, address sender);\n\n    /// @notice Emitted when pool is set to active status.\n    /// @param active The status of the pool\n    event PoolActive(bool active);\n\n    /// ======================\n    /// ======= Views ========\n    /// ======================\n\n    /// @notice Getter for the address of the Allo contract.\n    /// @return The 'Allo' contract\n    function getAllo() external view returns (IAllo);\n\n    /// @notice Getter for the 'poolId' for this strategy.\n    /// @return The ID of the pool\n    function getPoolId() external view returns (uint256);\n\n    /// @notice Getter for the 'id' of the strategy.\n    /// @return The ID of the strategy\n    function getStrategyId() external view returns (bytes32);\n\n    /// @notice Checks whether a allocator is valid or not, will usually be true for all strategies\n    ///      and will depend on the strategy implementation.\n    /// @param _allocator The allocator to check\n    /// @return Whether the allocator is valid or not\n    function isValidAllocator(address _allocator) external view returns (bool);\n\n    /// @notice whether pool is active.\n    /// @return Whether the pool is active or not\n    function isPoolActive() external returns (bool);\n\n    /// @notice Checks the amount of tokens in the pool.\n    /// @return The balance of the pool\n    function getPoolAmount() external view returns (uint256);\n\n    /// @notice Increases the balance of the pool.\n    /// @param _amount The amount to increase the pool by\n    function increasePoolAmount(uint256 _amount) external;\n\n    /// @notice Checks the status of a recipient probably tracked in a mapping, but will depend on the implementation\n    ///      for example, the OpenSelfRegistration only maps users to bool, and then assumes Accepted for those\n    ///      since there is no need for Pending or Rejected.\n    /// @param _recipientId The ID of the recipient\n    /// @return The status of the recipient\n    function getRecipientStatus(address _recipientId) external view returns (Status);\n\n    /// @notice Checks the amount allocated to a recipient for distribution.\n    /// @dev Input the values you would send to distribute(), get the amounts each recipient in the array would receive.\n    ///      The encoded '_data' will be determined by the strategy, and will be used to determine the payout.\n    /// @param _recipientIds The IDs of the recipients\n    /// @param _data The encoded data\n    function getPayouts(address[] memory _recipientIds, bytes[] memory _data)\n        external\n        view\n        returns (PayoutSummary[] memory);\n\n    /// ======================\n    /// ===== Functions ======\n    /// ======================\n\n    /// @notice\n    /// @dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,\n    ///      use it, and then call super.initialize().\n    /// @param _poolId The ID of the pool\n    /// @param _data The encoded data\n    function initialize(uint256 _poolId, bytes memory _data) external;\n\n    /// @notice This will register a recipient, set their status (and any other strategy specific values), and\n    ///         return the ID of the recipient.\n    /// @dev Able to change status all the way up to 'Accepted', or to 'Pending' and if there are more steps, additional\n    ///      functions should be added to allow the owner to check this. The owner could also check attestations directly\n    ///      and then accept for instance. The '_data' will be determined by the strategy implementation.\n    /// @param _data The data to use to register the recipient\n    /// @param _sender The address of the sender\n    /// @return The ID of the recipient\n    function registerRecipient(bytes memory _data, address _sender) external payable returns (address);\n\n    /// @notice This will allocate to a recipient.\n    /// @dev The encoded '_data' will be determined by the strategy implementation.\n    /// @param _data The data to use to allocate to the recipient\n    /// @param _sender The address of the sender\n    function allocate(bytes memory _data, address _sender) external payable;\n\n    /// @notice This will distribute funds (tokens) to recipients.\n    /// @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\n    /// this contract will need to track the amount paid already, so that it doesn't double pay.\n    function distribute(address[] memory _recipientIds, bytes memory _data, address _sender) external;\n}\n"
			},
			"lib/allo-v2/contracts/core/libraries/Metadata.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.19;\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title Metadata\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice Metadata is used to define the metadata for the protocol that is used throughout the system.\nstruct Metadata {\n    /// @notice Protocol ID corresponding to a specific protocol (currently using IPFS = 1)\n    uint256 protocol;\n    /// @notice Pointer (hash) to fetch metadata for the specified protocol\n    string pointer;\n}\n"
			},
			"lib/allo-v2/contracts/core/libraries/Native.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.19;\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title Native token information\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice This is used to define the address of the native token for the protocol\ncontract Native {\n    /// @notice Address of the native token\n    address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n}\n"
			},
			"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)\n/// @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\n///\n/// @dev Note:\n/// - For ETH transfers, please use `forceSafeTransferETH` for gas griefing protection.\n/// - For ERC20s, this implementation won't check that a token has code,\n/// responsibility is delegated to the caller.\nlibrary SafeTransferLib {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       CUSTOM ERRORS                        */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The ETH transfer has failed.\n    error ETHTransferFailed();\n\n    /// @dev The ERC20 `transferFrom` has failed.\n    error TransferFromFailed();\n\n    /// @dev The ERC20 `transfer` has failed.\n    error TransferFailed();\n\n    /// @dev The ERC20 `approve` has failed.\n    error ApproveFailed();\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                         CONSTANTS                          */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Suggested gas stipend for contract receiving ETH\n    /// that disallows any storage writes.\n    uint256 internal constant GAS_STIPEND_NO_STORAGE_WRITES = 2300;\n\n    /// @dev Suggested gas stipend for contract receiving ETH to perform a few\n    /// storage reads and writes, but low enough to prevent griefing.\n    /// Multiply by a small constant (e.g. 2), if needed.\n    uint256 internal constant GAS_STIPEND_NO_GRIEF = 100000;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       ETH OPERATIONS                       */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Sends `amount` (in wei) ETH to `to`.\n    /// Reverts upon failure.\n    ///\n    /// Note: This implementation does NOT protect against gas griefing.\n    /// Please use `forceSafeTransferETH` for gas griefing protection.\n    function safeTransferETH(address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Transfer the ETH and check if it succeeded or not.\n            if iszero(call(gas(), to, amount, 0x00, 0x00, 0x00, 0x00)) {\n                // Store the function selector of `ETHTransferFailed()`.\n                mstore(0x00, 0xb12d13eb)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n        }\n    }\n\n    /// @dev Force sends `amount` (in wei) ETH to `to`, with a `gasStipend`.\n    /// The `gasStipend` can be set to a low enough value to prevent\n    /// storage writes or gas griefing.\n    ///\n    /// If sending via the normal procedure fails, force sends the ETH by\n    /// creating a temporary contract which uses `SELFDESTRUCT` to force send the ETH.\n    ///\n    /// Reverts if the current contract has insufficient balance.\n    function forceSafeTransferETH(address to, uint256 amount, uint256 gasStipend) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // If insufficient balance, revert.\n            if lt(selfbalance(), amount) {\n                // Store the function selector of `ETHTransferFailed()`.\n                mstore(0x00, 0xb12d13eb)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n            // Transfer the ETH and check if it succeeded or not.\n            if iszero(call(gasStipend, to, amount, 0x00, 0x00, 0x00, 0x00)) {\n                mstore(0x00, to) // Store the address in scratch space.\n                mstore8(0x0b, 0x73) // Opcode `PUSH20`.\n                mstore8(0x20, 0xff) // Opcode `SELFDESTRUCT`.\n                // We can directly use `SELFDESTRUCT` in the contract creation.\n                // Compatible with `SENDALL`: https://eips.ethereum.org/EIPS/eip-4758\n                if iszero(create(amount, 0x0b, 0x16)) {\n                    // To coerce gas estimation to provide enough gas for the `create` above.\n                    if iszero(gt(gas(), 1000000)) { revert(0x00, 0x00) }\n                }\n            }\n        }\n    }\n\n    /// @dev Force sends `amount` (in wei) ETH to `to`, with a gas stipend\n    /// equal to `GAS_STIPEND_NO_GRIEF`. This gas stipend is a reasonable default\n    /// for 99% of cases and can be overridden with the three-argument version of this\n    /// function if necessary.\n    ///\n    /// If sending via the normal procedure fails, force sends the ETH by\n    /// creating a temporary contract which uses `SELFDESTRUCT` to force send the ETH.\n    ///\n    /// Reverts if the current contract has insufficient balance.\n    function forceSafeTransferETH(address to, uint256 amount) internal {\n        // Manually inlined because the compiler doesn't inline functions with branches.\n        /// @solidity memory-safe-assembly\n        assembly {\n            // If insufficient balance, revert.\n            if lt(selfbalance(), amount) {\n                // Store the function selector of `ETHTransferFailed()`.\n                mstore(0x00, 0xb12d13eb)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n            // Transfer the ETH and check if it succeeded or not.\n            if iszero(call(GAS_STIPEND_NO_GRIEF, to, amount, 0x00, 0x00, 0x00, 0x00)) {\n                mstore(0x00, to) // Store the address in scratch space.\n                mstore8(0x0b, 0x73) // Opcode `PUSH20`.\n                mstore8(0x20, 0xff) // Opcode `SELFDESTRUCT`.\n                // We can directly use `SELFDESTRUCT` in the contract creation.\n                // Compatible with `SENDALL`: https://eips.ethereum.org/EIPS/eip-4758\n                if iszero(create(amount, 0x0b, 0x16)) {\n                    // To coerce gas estimation to provide enough gas for the `create` above.\n                    if iszero(gt(gas(), 1000000)) { revert(0x00, 0x00) }\n                }\n            }\n        }\n    }\n\n    /// @dev Sends `amount` (in wei) ETH to `to`, with a `gasStipend`.\n    /// The `gasStipend` can be set to a low enough value to prevent\n    /// storage writes or gas griefing.\n    ///\n    /// Simply use `gasleft()` for `gasStipend` if you don't need a gas stipend.\n    ///\n    /// Note: Does NOT revert upon failure.\n    /// Returns whether the transfer of ETH is successful instead.\n    function trySafeTransferETH(address to, uint256 amount, uint256 gasStipend)\n        internal\n        returns (bool success)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Transfer the ETH and check if it succeeded or not.\n            success := call(gasStipend, to, amount, 0x00, 0x00, 0x00, 0x00)\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                      ERC20 OPERATIONS                      */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Sends `amount` of ERC20 `token` from `from` to `to`.\n    /// Reverts upon failure.\n    ///\n    /// The `from` account must have at least `amount` approved for\n    /// the current contract to manage.\n    function safeTransferFrom(address token, address from, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n\n            mstore(0x60, amount) // Store the `amount` argument.\n            mstore(0x40, to) // Store the `to` argument.\n            mstore(0x2c, shl(96, from)) // Store the `from` argument.\n            // Store the function selector of `transferFrom(address,address,uint256)`.\n            mstore(0x0c, 0x23b872dd000000000000000000000000)\n\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    // Set success to whether the call reverted, if not we check it either\n                    // returned exactly 1 (can't just be non-zero data), or had no return data.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())),\n                    call(gas(), token, 0, 0x1c, 0x64, 0x00, 0x20)\n                )\n            ) {\n                // Store the function selector of `TransferFromFailed()`.\n                mstore(0x00, 0x7939f424)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n\n            mstore(0x60, 0) // Restore the zero slot to zero.\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Sends all of ERC20 `token` from `from` to `to`.\n    /// Reverts upon failure.\n    ///\n    /// The `from` account must have their entire balance approved for\n    /// the current contract to manage.\n    function safeTransferAllFrom(address token, address from, address to)\n        internal\n        returns (uint256 amount)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n\n            mstore(0x40, to) // Store the `to` argument.\n            mstore(0x2c, shl(96, from)) // Store the `from` argument.\n            // Store the function selector of `balanceOf(address)`.\n            mstore(0x0c, 0x70a08231000000000000000000000000)\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    gt(returndatasize(), 0x1f), // At least 32 bytes returned.\n                    staticcall(gas(), token, 0x1c, 0x24, 0x60, 0x20)\n                )\n            ) {\n                // Store the function selector of `TransferFromFailed()`.\n                mstore(0x00, 0x7939f424)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n\n            // Store the function selector of `transferFrom(address,address,uint256)`.\n            mstore(0x00, 0x23b872dd)\n            // The `amount` is already at 0x60. Load it for the function's return value.\n            amount := mload(0x60)\n\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    // Set success to whether the call reverted, if not we check it either\n                    // returned exactly 1 (can't just be non-zero data), or had no return data.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())),\n                    call(gas(), token, 0, 0x1c, 0x64, 0x00, 0x20)\n                )\n            ) {\n                // Store the function selector of `TransferFromFailed()`.\n                mstore(0x00, 0x7939f424)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n\n            mstore(0x60, 0) // Restore the zero slot to zero.\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Sends `amount` of ERC20 `token` from the current contract to `to`.\n    /// Reverts upon failure.\n    function safeTransfer(address token, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, to) // Store the `to` argument.\n            mstore(0x34, amount) // Store the `amount` argument.\n            // Store the function selector of `transfer(address,uint256)`.\n            mstore(0x00, 0xa9059cbb000000000000000000000000)\n\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    // Set success to whether the call reverted, if not we check it either\n                    // returned exactly 1 (can't just be non-zero data), or had no return data.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())),\n                    call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                )\n            ) {\n                // Store the function selector of `TransferFailed()`.\n                mstore(0x00, 0x90b8ec18)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n            // Restore the part of the free memory pointer that was overwritten.\n            mstore(0x34, 0)\n        }\n    }\n\n    /// @dev Sends all of ERC20 `token` from the current contract to `to`.\n    /// Reverts upon failure.\n    function safeTransferAll(address token, address to) internal returns (uint256 amount) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, 0x70a08231) // Store the function selector of `balanceOf(address)`.\n            mstore(0x20, address()) // Store the address of the current contract.\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    gt(returndatasize(), 0x1f), // At least 32 bytes returned.\n                    staticcall(gas(), token, 0x1c, 0x24, 0x34, 0x20)\n                )\n            ) {\n                // Store the function selector of `TransferFailed()`.\n                mstore(0x00, 0x90b8ec18)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n\n            mstore(0x14, to) // Store the `to` argument.\n            // The `amount` is already at 0x34. Load it for the function's return value.\n            amount := mload(0x34)\n            // Store the function selector of `transfer(address,uint256)`.\n            mstore(0x00, 0xa9059cbb000000000000000000000000)\n\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    // Set success to whether the call reverted, if not we check it either\n                    // returned exactly 1 (can't just be non-zero data), or had no return data.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())),\n                    call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                )\n            ) {\n                // Store the function selector of `TransferFailed()`.\n                mstore(0x00, 0x90b8ec18)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n            // Restore the part of the free memory pointer that was overwritten.\n            mstore(0x34, 0)\n        }\n    }\n\n    /// @dev Sets `amount` of ERC20 `token` for `to` to manage on behalf of the current contract.\n    /// Reverts upon failure.\n    function safeApprove(address token, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, to) // Store the `to` argument.\n            mstore(0x34, amount) // Store the `amount` argument.\n            // Store the function selector of `approve(address,uint256)`.\n            mstore(0x00, 0x095ea7b3000000000000000000000000)\n\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    // Set success to whether the call reverted, if not we check it either\n                    // returned exactly 1 (can't just be non-zero data), or had no return data.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())),\n                    call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                )\n            ) {\n                // Store the function selector of `ApproveFailed()`.\n                mstore(0x00, 0x3e3f8f73)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n            // Restore the part of the free memory pointer that was overwritten.\n            mstore(0x34, 0)\n        }\n    }\n\n    /// @dev Sets `amount` of ERC20 `token` for `to` to manage on behalf of the current contract.\n    /// If the initial attempt to approve fails, attempts to reset the approved amount to zero,\n    /// then retries the approval again (some tokens, e.g. USDT, requires this).\n    /// Reverts upon failure.\n    function safeApproveWithRetry(address token, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, to) // Store the `to` argument.\n            mstore(0x34, amount) // Store the `amount` argument.\n            // Store the function selector of `approve(address,uint256)`.\n            mstore(0x00, 0x095ea7b3000000000000000000000000)\n\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    // Set success to whether the call reverted, if not we check it either\n                    // returned exactly 1 (can't just be non-zero data), or had no return data.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())),\n                    call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                )\n            ) {\n                mstore(0x34, 0) // Store 0 for the `amount`.\n                mstore(0x00, 0x095ea7b3000000000000000000000000) // Store the function selector.\n                // We can ignore the result of this call. Just need to check the next call.\n                pop(call(gas(), token, 0, 0x10, 0x44, 0x00, 0x00))\n                mstore(0x34, amount) // Store back the original `amount`.\n\n                if iszero(\n                    and(\n                        or(eq(mload(0x00), 1), iszero(returndatasize())),\n                        call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                    )\n                ) {\n                    // Store the function selector of `ApproveFailed()`.\n                    mstore(0x00, 0x3e3f8f73)\n                    // Revert with (offset, size).\n                    revert(0x1c, 0x04)\n                }\n            }\n            // Restore the part of the free memory pointer that was overwritten.\n            mstore(0x34, 0)\n        }\n    }\n\n    /// @dev Returns the amount of ERC20 `token` owned by `account`.\n    /// Returns zero if the `token` does not exist.\n    function balanceOf(address token, address account) internal view returns (uint256 amount) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, account) // Store the `account` argument.\n            // Store the function selector of `balanceOf(address)`.\n            mstore(0x00, 0x70a08231000000000000000000000000)\n            amount :=\n                mul(\n                    mload(0x20),\n                    and( // The arguments of `and` are evaluated from right to left.\n                        gt(returndatasize(), 0x1f), // At least 32 bytes returned.\n                        staticcall(gas(), token, 0x10, 0x24, 0x20, 0x20)\n                    )\n                )\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/",
				"allo/=lib/allo-v2/",
				"solady/=lib/allo-v2/lib/solady/src/",
				"solmate/=lib/solmate/src/",
				"openzeppelin-contracts/=lib/openzeppelin-contracts/"
			]
		}
	},
	"output": {
		"contracts": {
			"lib/allo-v2/contracts/core/interfaces/IAllo.sol": {
				"IAllo": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BaseFeePaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseFee",
									"type": "uint256"
								}
							],
							"name": "BaseFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "percentFee",
									"type": "uint256"
								}
							],
							"name": "PercentFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "contract IStrategy",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct Metadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "PoolFunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct Metadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "PoolMetadataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "registry",
									"type": "address"
								}
							],
							"name": "RegistryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "StrategyApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "StrategyRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "treasury",
									"type": "address"
								}
							],
							"name": "TreasuryUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_manager",
									"type": "address"
								}
							],
							"name": "addPoolManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								}
							],
							"name": "addToCloneableStrategies",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_poolIds",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_datas",
									"type": "bytes[]"
								}
							],
							"name": "batchAllocate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_poolIds",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_data",
									"type": "bytes[]"
								}
							],
							"name": "batchRegisterRecipient",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_initStrategyData",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"internalType": "struct Metadata",
									"name": "_metadata",
									"type": "tuple"
								},
								{
									"internalType": "address[]",
									"name": "_managers",
									"type": "address[]"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_initStrategyData",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"internalType": "struct Metadata",
									"name": "_metadata",
									"type": "tuple"
								},
								{
									"internalType": "address[]",
									"name": "_managers",
									"type": "address[]"
								}
							],
							"name": "createPoolWithCustomStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "fundPool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBaseFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFeeDenominator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPercentFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "profileId",
											"type": "bytes32"
										},
										{
											"internalType": "contract IStrategy",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "protocol",
													"type": "uint256"
												},
												{
													"internalType": "string",
													"name": "pointer",
													"type": "string"
												}
											],
											"internalType": "struct Metadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"internalType": "bytes32",
											"name": "managerRole",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "adminRole",
											"type": "bytes32"
										}
									],
									"internalType": "struct IAllo.Pool",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRegistry",
							"outputs": [
								{
									"internalType": "contract IRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								}
							],
							"name": "getStrategy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTreasury",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_registry",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_percentFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_baseFee",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								}
							],
							"name": "isCloneableStrategy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isPoolAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isPoolManager",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "recoverFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "registerRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								}
							],
							"name": "removeFromCloneableStrategies",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_manager",
									"type": "address"
								}
							],
							"name": "removePoolManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_baseFee",
									"type": "uint256"
								}
							],
							"name": "updateBaseFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_percentFee",
									"type": "uint256"
								}
							],
							"name": "updatePercentFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"internalType": "struct Metadata",
									"name": "_metadata",
									"type": "tuple"
								}
							],
							"name": "updatePoolMetadata",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_registry",
									"type": "address"
								}
							],
							"name": "updateRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "updateTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"events": {
							"BaseFeePaid(uint256,uint256)": {
								"params": {
									"amount": "Amount of the base fee paid",
									"poolId": "ID of the pool the base fee was paid for"
								}
							},
							"BaseFeeUpdated(uint256)": {
								"params": {
									"baseFee": "New base fee amount"
								}
							},
							"PercentFeeUpdated(uint256)": {
								"params": {
									"percentFee": "New percentage for the fee"
								}
							},
							"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))": {
								"params": {
									"amount": "Amount pool was funded with when created",
									"metadata": "Pool metadata",
									"poolId": "ID of the pool created",
									"profileId": "ID of the profile the pool is associated with",
									"strategy": "Address of the strategy contract",
									"token": "Address of the token pool was funded with when created"
								}
							},
							"PoolFunded(uint256,uint256,uint256)": {
								"params": {
									"amount": "Amount funded to the pool",
									"fee": "Amount of the fee paid to the treasury",
									"poolId": "ID of the pool funded"
								}
							},
							"PoolMetadataUpdated(uint256,(uint256,string))": {
								"params": {
									"metadata": "Pool metadata that was updated",
									"poolId": "ID of the pool updated"
								}
							},
							"RegistryUpdated(address)": {
								"params": {
									"registry": "Address of the new registry"
								}
							},
							"StrategyApproved(address)": {
								"params": {
									"strategy": "Address of the strategy approved"
								}
							},
							"StrategyRemoved(address)": {
								"params": {
									"strategy": "Address of the strategy removed"
								}
							},
							"TreasuryUpdated(address)": {
								"params": {
									"treasury": "Address of the new treasury"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addPoolManager(uint256,address)": {
								"details": "'msg.sender' must be a pool admin.",
								"params": {
									"_manager": "The address of the manager to add",
									"_poolId": "The ID of the pool to add the manager to"
								}
							},
							"addToCloneableStrategies(address)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_strategy": "The address of the strategy to add"
								}
							},
							"allocate(uint256,bytes)": {
								"details": "Each strategy will handle the allocation of funds differently.",
								"params": {
									"_data": "The data to pass to the strategy and may be handled differently by each strategy.",
									"_poolId": "The ID of the pool to allocate funds from"
								}
							},
							"batchAllocate(uint256[],bytes[])": {
								"details": "Each strategy will handle the allocation of funds differently"
							},
							"batchRegisterRecipient(uint256[],bytes[])": {
								"params": {
									"_data": "The data to pass to the strategy and may be handled differently by each strategy",
									"_poolIds": "The pool ID's to register the recipients for"
								}
							},
							"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])": {
								"custom:initstrategydata": "The encoded data will be specific to a given strategy requirements,    reference the strategy implementation of 'initialize()'",
								"details": "'msg.sender' must be owner or member of the profile id passed as '_profileId'.",
								"params": {
									"_amount": "The amount of the token",
									"_initStrategyData": "The data to initialize the strategy",
									"_managers": "The managers of the pool",
									"_metadata": "The metadata of the pool",
									"_profileId": "The ID of the registry profile, used to check if 'msg.sender' is a member or owner of the profile",
									"_strategy": "The address of the strategy contract the pool will use.",
									"_token": "The address of the token"
								}
							},
							"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])": {
								"details": "'msg.sender' must be a member or owner of a profile to create a pool with or without a custom strategy, The encoded data      will be specific to a given strategy requirements, reference the strategy implementation of 'initialize()'. The strategy      address passed must not be a cloneable strategy. The strategy address passed must not be the zero address. 'msg.sender' must      be a member or owner of the profile id passed as '_profileId'.",
								"params": {
									"_amount": "The amount of the token you want to deposit into the pool on initialization",
									"_initStrategyData": "The data to initialize the strategy",
									"_managers": "The managers of the pool, and can be added/removed later by the pool admin",
									"_metadata": "The 'Metadata' of the pool, this uses our 'Meatdata.sol' struct (consistent throughout the protocol)",
									"_profileId": "The 'profileId' of the registry profile, used to check if 'msg.sender' is a member or owner of the profile",
									"_strategy": "The address of the deployed custom strategy",
									"_token": "The address of the token you want to use in your pool"
								},
								"returns": {
									"poolId": "The ID of the pool"
								}
							},
							"distribute(uint256,address[],bytes)": {
								"details": "Each strategy will handle the distribution of funds differently",
								"params": {
									"_data": "The data to pass to the strategy and may be handled differently by each strategy",
									"_poolId": "The ID of the pool to distribute from",
									"_recipientIds": "The recipient ids to distribute to"
								}
							},
							"fundPool(uint256,uint256)": {
								"details": "'msg.value' must be greater than 0 if the token is the native token       or '_amount' must be greater than 0 if the token is not the native token.",
								"params": {
									"_amount": "The amount to fund the pool with",
									"_poolId": "The ID of the pool to fund"
								}
							},
							"getBaseFee()": {
								"returns": {
									"_0": "baseFee The current base fee"
								}
							},
							"getFeeDenominator()": {
								"details": "1e18 represents 100%",
								"returns": {
									"_0": "feeDenominator The current fee denominator"
								}
							},
							"getPercentFee()": {
								"returns": {
									"_0": "percentFee The current percentage for the fee"
								}
							},
							"getPool(uint256)": {
								"params": {
									"_poolId": "The ID of the pool to check"
								},
								"returns": {
									"_0": "pool The 'Pool' struct for the ID of the pool passed in"
								}
							},
							"getRegistry()": {
								"returns": {
									"_0": "registry The current registry address"
								}
							},
							"getStrategy(uint256)": {
								"params": {
									"_poolId": "The ID of the pool to check"
								},
								"returns": {
									"_0": "strategy The address of the strategy for the ID of the pool passed in"
								}
							},
							"getTreasury()": {
								"returns": {
									"_0": "treasury The current treasury address"
								}
							},
							"initialize(address,address,address,uint256,uint256)": {
								"params": {
									"_baseFee": "Base fee amount",
									"_owner": "Address of the owner",
									"_percentFee": "Percentage for the fee",
									"_registry": "Address of the registry contract",
									"_treasury": "Address of the treasury"
								}
							},
							"isCloneableStrategy(address)": {
								"params": {
									"_strategy": "The address of the strategy to check"
								},
								"returns": {
									"_0": "'true' if the '_strategy' is cloneable, otherwise 'false'"
								}
							},
							"isPoolAdmin(uint256,address)": {
								"params": {
									"_address": "The address to check",
									"_poolId": "The ID of the pool to check"
								},
								"returns": {
									"_0": "'true' if the '_address' is a pool admin, otherwise 'false'"
								}
							},
							"isPoolManager(uint256,address)": {
								"params": {
									"_address": "The address to check",
									"_poolId": "The ID of the pool to check"
								},
								"returns": {
									"_0": "'true' if the '_address' is a pool manager, otherwise 'false'"
								}
							},
							"recoverFunds(address,address)": {
								"details": "'msg.sender' must be a pool admin.",
								"params": {
									"_recipient": "The address to send the recovered funds to",
									"_token": "The token to recover"
								}
							},
							"registerRecipient(uint256,bytes)": {
								"params": {
									"_poolId": "The ID of the pool to register the recipient for"
								}
							},
							"removeFromCloneableStrategies(address)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_strategy": "The address of the strategy to remove"
								}
							},
							"removePoolManager(uint256,address)": {
								"details": "'msg.sender' must be a pool admin.",
								"params": {
									"_manager": "The address of the manager to remove",
									"_poolId": "The ID of the pool to remove the manager from"
								}
							},
							"updateBaseFee(uint256)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_baseFee": "The new base fee"
								}
							},
							"updatePercentFee(uint256)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_percentFee": "The new percentage for the fee"
								}
							},
							"updatePoolMetadata(uint256,(uint256,string))": {
								"details": "'msg.sender' must be a pool admin.",
								"params": {
									"_metadata": "The new metadata to set",
									"_poolId": "The ID of the pool to update"
								}
							},
							"updateRegistry(address)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_registry": "The new registry address"
								}
							},
							"updateTreasury(address)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_treasury": "The new treasury address"
								}
							}
						},
						"title": "Allo Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addPoolManager(uint256,address)": "2cf682b0",
							"addToCloneableStrategies(address)": "41bba0b4",
							"allocate(uint256,bytes)": "2ec38188",
							"batchAllocate(uint256[],bytes[])": "c6dff1cf",
							"batchRegisterRecipient(uint256[],bytes[])": "1a20bd88",
							"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])": "77da8caf",
							"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])": "e1007d4a",
							"distribute(uint256,address[],bytes)": "3a5fbd92",
							"fundPool(uint256,uint256)": "5acd6fac",
							"getBaseFee()": "15e812ad",
							"getFeeDenominator()": "f4e1fc41",
							"getPercentFee()": "4edbaadc",
							"getPool(uint256)": "068bcd8d",
							"getRegistry()": "5ab1bd53",
							"getStrategy(uint256)": "cfc0cc34",
							"getTreasury()": "3b19e84a",
							"initialize(address,address,address,uint256,uint256)": "a6b63eb8",
							"isCloneableStrategy(address)": "ab2ec589",
							"isPoolAdmin(uint256,address)": "ab3febc6",
							"isPoolManager(uint256,address)": "29e40d4b",
							"recoverFunds(address,address)": "24ae6a27",
							"registerRecipient(uint256,bytes)": "075c0e9c",
							"removeFromCloneableStrategies(address)": "031e2fa1",
							"removePoolManager(uint256,address)": "7f5a70bd",
							"updateBaseFee(uint256)": "8e690186",
							"updatePercentFee(uint256)": "f54fc4a0",
							"updatePoolMetadata(uint256,(uint256,string))": "5f9ca138",
							"updateRegistry(address)": "1a5da6c8",
							"updateTreasury(address)": "7f51bb1f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BaseFeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFee\",\"type\":\"uint256\"}],\"name\":\"BaseFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentFee\",\"type\":\"uint256\"}],\"name\":\"PercentFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"PoolFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"PoolMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"}],\"name\":\"RegistryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"addPoolManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"addToCloneableStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_datas\",\"type\":\"bytes[]\"}],\"name\":\"batchAllocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"batchRegisterRecipient\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_initStrategyData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_managers\",\"type\":\"address[]\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_initStrategyData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_managers\",\"type\":\"address[]\"}],\"name\":\"createPoolWithCustomStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fundPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPercentFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"managerRole\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"adminRole\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAllo.Pool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_percentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseFee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"isCloneableStrategy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPoolAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPoolManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"removeFromCloneableStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"removePoolManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseFee\",\"type\":\"uint256\"}],\"name\":\"updateBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentFee\",\"type\":\"uint256\"}],\"name\":\"updatePercentFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"}],\"name\":\"updatePoolMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"updateRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"updateTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"events\":{\"BaseFeePaid(uint256,uint256)\":{\"params\":{\"amount\":\"Amount of the base fee paid\",\"poolId\":\"ID of the pool the base fee was paid for\"}},\"BaseFeeUpdated(uint256)\":{\"params\":{\"baseFee\":\"New base fee amount\"}},\"PercentFeeUpdated(uint256)\":{\"params\":{\"percentFee\":\"New percentage for the fee\"}},\"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))\":{\"params\":{\"amount\":\"Amount pool was funded with when created\",\"metadata\":\"Pool metadata\",\"poolId\":\"ID of the pool created\",\"profileId\":\"ID of the profile the pool is associated with\",\"strategy\":\"Address of the strategy contract\",\"token\":\"Address of the token pool was funded with when created\"}},\"PoolFunded(uint256,uint256,uint256)\":{\"params\":{\"amount\":\"Amount funded to the pool\",\"fee\":\"Amount of the fee paid to the treasury\",\"poolId\":\"ID of the pool funded\"}},\"PoolMetadataUpdated(uint256,(uint256,string))\":{\"params\":{\"metadata\":\"Pool metadata that was updated\",\"poolId\":\"ID of the pool updated\"}},\"RegistryUpdated(address)\":{\"params\":{\"registry\":\"Address of the new registry\"}},\"StrategyApproved(address)\":{\"params\":{\"strategy\":\"Address of the strategy approved\"}},\"StrategyRemoved(address)\":{\"params\":{\"strategy\":\"Address of the strategy removed\"}},\"TreasuryUpdated(address)\":{\"params\":{\"treasury\":\"Address of the new treasury\"}}},\"kind\":\"dev\",\"methods\":{\"addPoolManager(uint256,address)\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_manager\":\"The address of the manager to add\",\"_poolId\":\"The ID of the pool to add the manager to\"}},\"addToCloneableStrategies(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_strategy\":\"The address of the strategy to add\"}},\"allocate(uint256,bytes)\":{\"details\":\"Each strategy will handle the allocation of funds differently.\",\"params\":{\"_data\":\"The data to pass to the strategy and may be handled differently by each strategy.\",\"_poolId\":\"The ID of the pool to allocate funds from\"}},\"batchAllocate(uint256[],bytes[])\":{\"details\":\"Each strategy will handle the allocation of funds differently\"},\"batchRegisterRecipient(uint256[],bytes[])\":{\"params\":{\"_data\":\"The data to pass to the strategy and may be handled differently by each strategy\",\"_poolIds\":\"The pool ID's to register the recipients for\"}},\"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"custom:initstrategydata\":\"The encoded data will be specific to a given strategy requirements,    reference the strategy implementation of 'initialize()'\",\"details\":\"'msg.sender' must be owner or member of the profile id passed as '_profileId'.\",\"params\":{\"_amount\":\"The amount of the token\",\"_initStrategyData\":\"The data to initialize the strategy\",\"_managers\":\"The managers of the pool\",\"_metadata\":\"The metadata of the pool\",\"_profileId\":\"The ID of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\",\"_strategy\":\"The address of the strategy contract the pool will use.\",\"_token\":\"The address of the token\"}},\"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"details\":\"'msg.sender' must be a member or owner of a profile to create a pool with or without a custom strategy, The encoded data      will be specific to a given strategy requirements, reference the strategy implementation of 'initialize()'. The strategy      address passed must not be a cloneable strategy. The strategy address passed must not be the zero address. 'msg.sender' must      be a member or owner of the profile id passed as '_profileId'.\",\"params\":{\"_amount\":\"The amount of the token you want to deposit into the pool on initialization\",\"_initStrategyData\":\"The data to initialize the strategy\",\"_managers\":\"The managers of the pool, and can be added/removed later by the pool admin\",\"_metadata\":\"The 'Metadata' of the pool, this uses our 'Meatdata.sol' struct (consistent throughout the protocol)\",\"_profileId\":\"The 'profileId' of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\",\"_strategy\":\"The address of the deployed custom strategy\",\"_token\":\"The address of the token you want to use in your pool\"},\"returns\":{\"poolId\":\"The ID of the pool\"}},\"distribute(uint256,address[],bytes)\":{\"details\":\"Each strategy will handle the distribution of funds differently\",\"params\":{\"_data\":\"The data to pass to the strategy and may be handled differently by each strategy\",\"_poolId\":\"The ID of the pool to distribute from\",\"_recipientIds\":\"The recipient ids to distribute to\"}},\"fundPool(uint256,uint256)\":{\"details\":\"'msg.value' must be greater than 0 if the token is the native token       or '_amount' must be greater than 0 if the token is not the native token.\",\"params\":{\"_amount\":\"The amount to fund the pool with\",\"_poolId\":\"The ID of the pool to fund\"}},\"getBaseFee()\":{\"returns\":{\"_0\":\"baseFee The current base fee\"}},\"getFeeDenominator()\":{\"details\":\"1e18 represents 100%\",\"returns\":{\"_0\":\"feeDenominator The current fee denominator\"}},\"getPercentFee()\":{\"returns\":{\"_0\":\"percentFee The current percentage for the fee\"}},\"getPool(uint256)\":{\"params\":{\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"pool The 'Pool' struct for the ID of the pool passed in\"}},\"getRegistry()\":{\"returns\":{\"_0\":\"registry The current registry address\"}},\"getStrategy(uint256)\":{\"params\":{\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"strategy The address of the strategy for the ID of the pool passed in\"}},\"getTreasury()\":{\"returns\":{\"_0\":\"treasury The current treasury address\"}},\"initialize(address,address,address,uint256,uint256)\":{\"params\":{\"_baseFee\":\"Base fee amount\",\"_owner\":\"Address of the owner\",\"_percentFee\":\"Percentage for the fee\",\"_registry\":\"Address of the registry contract\",\"_treasury\":\"Address of the treasury\"}},\"isCloneableStrategy(address)\":{\"params\":{\"_strategy\":\"The address of the strategy to check\"},\"returns\":{\"_0\":\"'true' if the '_strategy' is cloneable, otherwise 'false'\"}},\"isPoolAdmin(uint256,address)\":{\"params\":{\"_address\":\"The address to check\",\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"'true' if the '_address' is a pool admin, otherwise 'false'\"}},\"isPoolManager(uint256,address)\":{\"params\":{\"_address\":\"The address to check\",\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"'true' if the '_address' is a pool manager, otherwise 'false'\"}},\"recoverFunds(address,address)\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_recipient\":\"The address to send the recovered funds to\",\"_token\":\"The token to recover\"}},\"registerRecipient(uint256,bytes)\":{\"params\":{\"_poolId\":\"The ID of the pool to register the recipient for\"}},\"removeFromCloneableStrategies(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_strategy\":\"The address of the strategy to remove\"}},\"removePoolManager(uint256,address)\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_manager\":\"The address of the manager to remove\",\"_poolId\":\"The ID of the pool to remove the manager from\"}},\"updateBaseFee(uint256)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_baseFee\":\"The new base fee\"}},\"updatePercentFee(uint256)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_percentFee\":\"The new percentage for the fee\"}},\"updatePoolMetadata(uint256,(uint256,string))\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_metadata\":\"The new metadata to set\",\"_poolId\":\"The ID of the pool to update\"}},\"updateRegistry(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_registry\":\"The new registry address\"}},\"updateTreasury(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_treasury\":\"The new treasury address\"}}},\"title\":\"Allo Interface\",\"version\":1},\"userdoc\":{\"events\":{\"BaseFeePaid(uint256,uint256)\":{\"notice\":\"Emitted when the base fee is paid\"},\"BaseFeeUpdated(uint256)\":{\"notice\":\"Emitted when the base fee is updated\"},\"PercentFeeUpdated(uint256)\":{\"notice\":\"Emitted when the percent fee is updated\"},\"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))\":{\"notice\":\"Event emitted when a new pool is created\"},\"PoolFunded(uint256,uint256,uint256)\":{\"notice\":\"Emitted when a pool is funded\"},\"PoolMetadataUpdated(uint256,(uint256,string))\":{\"notice\":\"Emitted when a pools metadata is updated\"},\"RegistryUpdated(address)\":{\"notice\":\"Emitted when the registry address is updated\"},\"StrategyApproved(address)\":{\"notice\":\"Emitted when a strategy is approved and added to the cloneable strategies\"},\"StrategyRemoved(address)\":{\"notice\":\"Emitted when a strategy is removed from the cloneable strategies\"},\"TreasuryUpdated(address)\":{\"notice\":\"Emitted when the treasury address is updated\"}},\"kind\":\"user\",\"methods\":{\"addPoolManager(uint256,address)\":{\"notice\":\"Adds a pool manager to the pool.\"},\"addToCloneableStrategies(address)\":{\"notice\":\"Adds a strategy to the cloneable strategies.\"},\"allocate(uint256,bytes)\":{\"notice\":\"Allocates funds to a recipient.\"},\"batchAllocate(uint256[],bytes[])\":{\"notice\":\"Allocates funds to multiple recipients.\"},\"batchRegisterRecipient(uint256[],bytes[])\":{\"notice\":\"Registers a batch of recipients.\"},\"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"notice\":\"Creates a new pool (by cloning a cloneable strategies).\"},\"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"notice\":\"Creates a new pool (with a custom strategy)\"},\"distribute(uint256,address[],bytes)\":{\"notice\":\"Distributes funds to recipients and emits {Distributed} event if successful\"},\"fundPool(uint256,uint256)\":{\"notice\":\"Funds a pool.\"},\"getBaseFee()\":{\"notice\":\"Returns the current base fee\"},\"getFeeDenominator()\":{\"notice\":\"Returns the current fee denominator\"},\"getPercentFee()\":{\"notice\":\"Returns the current percent fee\"},\"getPool(uint256)\":{\"notice\":\"Returns the 'Pool' struct for a given 'poolId'\"},\"getRegistry()\":{\"notice\":\"Returns the current registry address\"},\"getStrategy(uint256)\":{\"notice\":\"Returns the address of the strategy for a given 'poolId'\"},\"getTreasury()\":{\"notice\":\"Returns the current treasury address\"},\"initialize(address,address,address,uint256,uint256)\":{\"notice\":\"Initialize the Allo contract\"},\"isCloneableStrategy(address)\":{\"notice\":\"Checks if a strategy is cloneable (is in the cloneableStrategies mapping).\"},\"isPoolAdmin(uint256,address)\":{\"notice\":\"Checks if an address is a pool admin.\"},\"isPoolManager(uint256,address)\":{\"notice\":\"Checks if an address is a pool manager.\"},\"recoverFunds(address,address)\":{\"notice\":\"Recovers funds from a pool.\"},\"registerRecipient(uint256,bytes)\":{\"notice\":\"Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy.\"},\"removeFromCloneableStrategies(address)\":{\"notice\":\"Removes a strategy from the cloneable strategies.\"},\"removePoolManager(uint256,address)\":{\"notice\":\"Removes a pool manager from the pool.\"},\"updateBaseFee(uint256)\":{\"notice\":\"Updates the base fee.\"},\"updatePercentFee(uint256)\":{\"notice\":\"Updates the percentage for the fee.\"},\"updatePoolMetadata(uint256,(uint256,string))\":{\"notice\":\"Updates a pools metadata.\"},\"updateRegistry(address)\":{\"notice\":\"Update the registry address.\"},\"updateTreasury(address)\":{\"notice\":\"Updates the treasury address.\"}},\"notice\":\"Interface for the Allo contract. It exposes all functions needed to use the Allo protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/core/interfaces/IAllo.sol\":\"IAllo\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xb4d42b75def46f3fd1e182f5b18bde5df74822d3666580e66d34802f362b517e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a9492cb300be5f7cd8c58f54ff472b66c108827833bf1156028d8513b91e8f29\",\"dweb:/ipfs/QmccCdVZWsPhJEExajS6gANPyg2pEpD6RZwyjFNrdJM4Ek\"]},\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"lib/allo-v2/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"lib/allo-v2/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x41ece5b83f50d180841f44324a883e12b3fc2005e425e4cd51944fb8d46b147f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ecd926cbce88398d6fdb1762f7b75617635ae866f8461b7fb32dd2b0a17273ce\",\"dweb:/ipfs/QmdvPsL48GbXV2hy4vDcW9XtkN7VUTDebtYihuj7ZxhaD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"BaseFeePaid(uint256,uint256)": {
								"notice": "Emitted when the base fee is paid"
							},
							"BaseFeeUpdated(uint256)": {
								"notice": "Emitted when the base fee is updated"
							},
							"PercentFeeUpdated(uint256)": {
								"notice": "Emitted when the percent fee is updated"
							},
							"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))": {
								"notice": "Event emitted when a new pool is created"
							},
							"PoolFunded(uint256,uint256,uint256)": {
								"notice": "Emitted when a pool is funded"
							},
							"PoolMetadataUpdated(uint256,(uint256,string))": {
								"notice": "Emitted when a pools metadata is updated"
							},
							"RegistryUpdated(address)": {
								"notice": "Emitted when the registry address is updated"
							},
							"StrategyApproved(address)": {
								"notice": "Emitted when a strategy is approved and added to the cloneable strategies"
							},
							"StrategyRemoved(address)": {
								"notice": "Emitted when a strategy is removed from the cloneable strategies"
							},
							"TreasuryUpdated(address)": {
								"notice": "Emitted when the treasury address is updated"
							}
						},
						"kind": "user",
						"methods": {
							"addPoolManager(uint256,address)": {
								"notice": "Adds a pool manager to the pool."
							},
							"addToCloneableStrategies(address)": {
								"notice": "Adds a strategy to the cloneable strategies."
							},
							"allocate(uint256,bytes)": {
								"notice": "Allocates funds to a recipient."
							},
							"batchAllocate(uint256[],bytes[])": {
								"notice": "Allocates funds to multiple recipients."
							},
							"batchRegisterRecipient(uint256[],bytes[])": {
								"notice": "Registers a batch of recipients."
							},
							"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])": {
								"notice": "Creates a new pool (by cloning a cloneable strategies)."
							},
							"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])": {
								"notice": "Creates a new pool (with a custom strategy)"
							},
							"distribute(uint256,address[],bytes)": {
								"notice": "Distributes funds to recipients and emits {Distributed} event if successful"
							},
							"fundPool(uint256,uint256)": {
								"notice": "Funds a pool."
							},
							"getBaseFee()": {
								"notice": "Returns the current base fee"
							},
							"getFeeDenominator()": {
								"notice": "Returns the current fee denominator"
							},
							"getPercentFee()": {
								"notice": "Returns the current percent fee"
							},
							"getPool(uint256)": {
								"notice": "Returns the 'Pool' struct for a given 'poolId'"
							},
							"getRegistry()": {
								"notice": "Returns the current registry address"
							},
							"getStrategy(uint256)": {
								"notice": "Returns the address of the strategy for a given 'poolId'"
							},
							"getTreasury()": {
								"notice": "Returns the current treasury address"
							},
							"initialize(address,address,address,uint256,uint256)": {
								"notice": "Initialize the Allo contract"
							},
							"isCloneableStrategy(address)": {
								"notice": "Checks if a strategy is cloneable (is in the cloneableStrategies mapping)."
							},
							"isPoolAdmin(uint256,address)": {
								"notice": "Checks if an address is a pool admin."
							},
							"isPoolManager(uint256,address)": {
								"notice": "Checks if an address is a pool manager."
							},
							"recoverFunds(address,address)": {
								"notice": "Recovers funds from a pool."
							},
							"registerRecipient(uint256,bytes)": {
								"notice": "Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy."
							},
							"removeFromCloneableStrategies(address)": {
								"notice": "Removes a strategy from the cloneable strategies."
							},
							"removePoolManager(uint256,address)": {
								"notice": "Removes a pool manager from the pool."
							},
							"updateBaseFee(uint256)": {
								"notice": "Updates the base fee."
							},
							"updatePercentFee(uint256)": {
								"notice": "Updates the percentage for the fee."
							},
							"updatePoolMetadata(uint256,(uint256,string))": {
								"notice": "Updates a pools metadata."
							},
							"updateRegistry(address)": {
								"notice": "Update the registry address."
							},
							"updateTreasury(address)": {
								"notice": "Updates the treasury address."
							}
						},
						"notice": "Interface for the Allo contract. It exposes all functions needed to use the Allo protocol.",
						"version": 1
					}
				}
			},
			"lib/allo-v2/contracts/core/interfaces/IRegistry.sol": {
				"IRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct Metadata",
									"name": "metadata",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "anchor",
									"type": "address"
								}
							],
							"name": "ProfileCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct Metadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "ProfileMetadataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "anchor",
									"type": "address"
								}
							],
							"name": "ProfileNameUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ProfileOwnerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "ProfilePendingOwnerUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								}
							],
							"name": "acceptProfileOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address[]",
									"name": "_members",
									"type": "address[]"
								}
							],
							"name": "addMembers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"internalType": "struct Metadata",
									"name": "_metadata",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "_members",
									"type": "address[]"
								}
							],
							"name": "createProfile",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_anchor",
									"type": "address"
								}
							],
							"name": "getProfileByAnchor",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "id",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "protocol",
													"type": "uint256"
												},
												{
													"internalType": "string",
													"name": "pointer",
													"type": "string"
												}
											],
											"internalType": "struct Metadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "anchor",
											"type": "address"
										}
									],
									"internalType": "struct IRegistry.Profile",
									"name": "profile",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								}
							],
							"name": "getProfileById",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "id",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "protocol",
													"type": "uint256"
												},
												{
													"internalType": "string",
													"name": "pointer",
													"type": "string"
												}
											],
											"internalType": "struct Metadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "anchor",
											"type": "address"
										}
									],
									"internalType": "struct IRegistry.Profile",
									"name": "profile",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_member",
									"type": "address"
								}
							],
							"name": "isMemberOfProfile",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isMemberOfProfile",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "isOwnerOfProfile",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isOwnerOfProfile",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isOwnerOrMemberOfProfile",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isOwnerOrMemberOfProfile",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "recoverFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address[]",
									"name": "_members",
									"type": "address[]"
								}
							],
							"name": "removeMembers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"internalType": "struct Metadata",
									"name": "_metadata",
									"type": "tuple"
								}
							],
							"name": "updateProfileMetadata",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "updateProfileName",
							"outputs": [
								{
									"internalType": "address",
									"name": "anchor",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_pendingOwner",
									"type": "address"
								}
							],
							"name": "updateProfilePendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"details": "The Registry Interface is used to interact with the Allo protocol and create profiles      that can be used to interact with the Allo protocol. The Registry is the main contract      that all other contracts interact with to get the 'Profile' information needed to      interact with the Allo protocol. The Registry is also used to create new profiles      and update existing profiles. The Registry is also used to add and remove members      from a profile. The Registry will not always be used in a strategy and will depend on      the strategy being used.",
						"events": {
							"ProfileCreated(bytes32,uint256,string,(uint256,string),address,address)": {
								"details": "Emitted when a profile is created. This will return your anchor address."
							},
							"ProfileMetadataUpdated(bytes32,(uint256,string))": {
								"details": "Emitted when a profile's metadata is updated."
							},
							"ProfileNameUpdated(bytes32,string,address)": {
								"details": "Emitted when a profile name is updated. This will update the anchor when the name is updated and return it."
							},
							"ProfileOwnerUpdated(bytes32,address)": {
								"details": "Emitted when a profile owner is updated."
							},
							"ProfilePendingOwnerUpdated(bytes32,address)": {
								"details": "Emitted when a profile pending owner is updated."
							}
						},
						"kind": "dev",
						"methods": {
							"acceptProfileOwnership(bytes32)": {
								"details": "Accepts the pending 'owner' of the '_profileId' passed in Requirements: Only the pending owner can accept the ownership",
								"params": {
									"_profileId": "The 'profileId' to accept the ownership for"
								}
							},
							"addMembers(bytes32,address[])": {
								"details": "Adds members to the '_profileId' passed in Requirements: Only the 'Profile' owner can add members",
								"params": {
									"_members": "The members to add to the '_profileId' passed in",
									"_profileId": "The 'profileId' to add members to"
								}
							},
							"createProfile(uint256,string,(uint256,string),address,address[])": {
								"details": "Creates a new 'Profile' and returns the 'profileId' of the new profile Note: The 'name' and 'nonce' are used to generate the 'anchor' address Requirements: None, anyone can create a new profile",
								"params": {
									"_members": "The 'members' to use to generate the 'anchor' address",
									"_metadata": "The 'Metadata' to use to generate the 'anchor' address",
									"_name": "The name to use to generate the 'anchor' address",
									"_nonce": "The nonce to use to generate the 'anchor' address",
									"_owner": "The 'owner' to use to generate the 'anchor' address"
								},
								"returns": {
									"profileId": "The 'profileId' of the new profile"
								}
							},
							"getProfileByAnchor(address)": {
								"details": "Returns the 'Profile' for an '_anchor' passed",
								"params": {
									"_anchor": "The 'anchor' to return the 'Profile' for"
								},
								"returns": {
									"profile": "The 'Profile' for the '_anchor' passed"
								}
							},
							"getProfileById(bytes32)": {
								"details": "Returns the 'Profile' for a '_profileId' passed",
								"params": {
									"_profileId": "The 'profileId' to return the 'Profile' for"
								},
								"returns": {
									"profile": "The 'Profile' for the '_profileId' passed"
								}
							},
							"isMemberOfProfile(bytes32,address)": {
								"details": "Returns a boolean if the '_account' is a member of the '_profileId' passed in",
								"params": {
									"_member": "The 'member' to check if they are a member of the '_profileId' passed in",
									"_profileId": "The 'profileId' to check if the '_account' is a member of"
								},
								"returns": {
									"isMemberOfProfile": "A boolean if the '_account' is a member of the '_profileId' passed in"
								}
							},
							"isOwnerOfProfile(bytes32,address)": {
								"details": "Returns a boolean if the '_account' is an owner of the '_profileId' passed in",
								"params": {
									"_owner": "The 'owner' to check if they are an owner of the '_profileId' passed in",
									"_profileId": "The 'profileId' to check if the '_account' is an owner of"
								},
								"returns": {
									"isOwnerOfProfile": "A boolean if the '_account' is an owner of the '_profileId' passed in"
								}
							},
							"isOwnerOrMemberOfProfile(bytes32,address)": {
								"details": "Returns a boolean if the '_account' is a member or owner of the '_profileId' passed in",
								"params": {
									"_account": "The 'account' to check if they are a member or owner of the '_profileId' passed in",
									"_profileId": "The 'profileId' to check if the '_account' is a member or owner of"
								},
								"returns": {
									"isOwnerOrMemberOfProfile": "A boolean if the '_account' is a member or owner of the '_profileId' passed in"
								}
							},
							"recoverFunds(address,address)": {
								"details": "Recovers funds from the contract Requirements: Must be the Allo owner",
								"params": {
									"_recipient": "The recipient of the recovered funds",
									"_token": "The token you want to use to recover funds"
								}
							},
							"removeMembers(bytes32,address[])": {
								"details": "Removes members from the '_profileId' passed in Requirements: Only the 'Profile' owner can remove members",
								"params": {
									"_members": "The members to remove from the '_profileId' passed in",
									"_profileId": "The 'profileId' to remove members from"
								}
							},
							"updateProfileMetadata(bytes32,(uint256,string))": {
								"details": "Updates the 'Metadata' of the '_profileId' passed in Requirements: Only the 'Profile' owner can update the metadata",
								"params": {
									"_metadata": "The new 'Metadata' value",
									"_profileId": "The 'profileId' to update the metadata for"
								}
							},
							"updateProfileName(bytes32,string)": {
								"details": "Updates the 'name' of the '_profileId' passed in and returns the new 'anchor' address Requirements: Only the 'Profile' owner can update the name Note: The 'name' and 'nonce' are used to generate the 'anchor' address and this will update the 'anchor'       so please use caution. You can always recreate your 'anchor' address by updating the name back       to the original name used to create the profile.",
								"params": {
									"_name": "The new 'name' value",
									"_profileId": "The 'profileId' to update the name for"
								},
								"returns": {
									"anchor": "The new 'anchor' address"
								}
							},
							"updateProfilePendingOwner(bytes32,address)": {
								"details": "Updates the pending 'owner' of the '_profileId' passed in Requirements: Only the 'Profile' owner can update the pending owner",
								"params": {
									"_pendingOwner": "The new pending 'owner' value",
									"_profileId": "The 'profileId' to update the pending owner for"
								}
							}
						},
						"title": "IRegistry Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptProfileOwnership(bytes32)": "2497f3c6",
							"addMembers(bytes32,address[])": "5063f361",
							"createProfile(uint256,string,(uint256,string),address,address[])": "3a92f65f",
							"getProfileByAnchor(address)": "dd93da43",
							"getProfileById(bytes32)": "0114cf0a",
							"isMemberOfProfile(bytes32,address)": "0ec1fbac",
							"isOwnerOfProfile(bytes32,address)": "39b86b8c",
							"isOwnerOrMemberOfProfile(bytes32,address)": "5e8a7915",
							"recoverFunds(address,address)": "24ae6a27",
							"removeMembers(bytes32,address[])": "e0cf1e4c",
							"updateProfileMetadata(bytes32,(uint256,string))": "ac402839",
							"updateProfileName(bytes32,string)": "cf189ff2",
							"updateProfilePendingOwner(bytes32,address)": "3b66dacd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"name\":\"ProfileCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"ProfileMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"name\":\"ProfileNameUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ProfileOwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"ProfilePendingOwnerUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"}],\"name\":\"acceptProfileOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"_members\",\"type\":\"address[]\"}],\"name\":\"addMembers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_members\",\"type\":\"address[]\"}],\"name\":\"createProfile\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_anchor\",\"type\":\"address\"}],\"name\":\"getProfileByAnchor\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"internalType\":\"struct IRegistry.Profile\",\"name\":\"profile\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"}],\"name\":\"getProfileById\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"internalType\":\"struct IRegistry.Profile\",\"name\":\"profile\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"isMemberOfProfile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isMemberOfProfile\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"isOwnerOfProfile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOwnerOfProfile\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isOwnerOrMemberOfProfile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOwnerOrMemberOfProfile\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"_members\",\"type\":\"address[]\"}],\"name\":\"removeMembers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"}],\"name\":\"updateProfileMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"updateProfileName\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_pendingOwner\",\"type\":\"address\"}],\"name\":\"updateProfilePendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"details\":\"The Registry Interface is used to interact with the Allo protocol and create profiles      that can be used to interact with the Allo protocol. The Registry is the main contract      that all other contracts interact with to get the 'Profile' information needed to      interact with the Allo protocol. The Registry is also used to create new profiles      and update existing profiles. The Registry is also used to add and remove members      from a profile. The Registry will not always be used in a strategy and will depend on      the strategy being used.\",\"events\":{\"ProfileCreated(bytes32,uint256,string,(uint256,string),address,address)\":{\"details\":\"Emitted when a profile is created. This will return your anchor address.\"},\"ProfileMetadataUpdated(bytes32,(uint256,string))\":{\"details\":\"Emitted when a profile's metadata is updated.\"},\"ProfileNameUpdated(bytes32,string,address)\":{\"details\":\"Emitted when a profile name is updated. This will update the anchor when the name is updated and return it.\"},\"ProfileOwnerUpdated(bytes32,address)\":{\"details\":\"Emitted when a profile owner is updated.\"},\"ProfilePendingOwnerUpdated(bytes32,address)\":{\"details\":\"Emitted when a profile pending owner is updated.\"}},\"kind\":\"dev\",\"methods\":{\"acceptProfileOwnership(bytes32)\":{\"details\":\"Accepts the pending 'owner' of the '_profileId' passed in Requirements: Only the pending owner can accept the ownership\",\"params\":{\"_profileId\":\"The 'profileId' to accept the ownership for\"}},\"addMembers(bytes32,address[])\":{\"details\":\"Adds members to the '_profileId' passed in Requirements: Only the 'Profile' owner can add members\",\"params\":{\"_members\":\"The members to add to the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to add members to\"}},\"createProfile(uint256,string,(uint256,string),address,address[])\":{\"details\":\"Creates a new 'Profile' and returns the 'profileId' of the new profile Note: The 'name' and 'nonce' are used to generate the 'anchor' address Requirements: None, anyone can create a new profile\",\"params\":{\"_members\":\"The 'members' to use to generate the 'anchor' address\",\"_metadata\":\"The 'Metadata' to use to generate the 'anchor' address\",\"_name\":\"The name to use to generate the 'anchor' address\",\"_nonce\":\"The nonce to use to generate the 'anchor' address\",\"_owner\":\"The 'owner' to use to generate the 'anchor' address\"},\"returns\":{\"profileId\":\"The 'profileId' of the new profile\"}},\"getProfileByAnchor(address)\":{\"details\":\"Returns the 'Profile' for an '_anchor' passed\",\"params\":{\"_anchor\":\"The 'anchor' to return the 'Profile' for\"},\"returns\":{\"profile\":\"The 'Profile' for the '_anchor' passed\"}},\"getProfileById(bytes32)\":{\"details\":\"Returns the 'Profile' for a '_profileId' passed\",\"params\":{\"_profileId\":\"The 'profileId' to return the 'Profile' for\"},\"returns\":{\"profile\":\"The 'Profile' for the '_profileId' passed\"}},\"isMemberOfProfile(bytes32,address)\":{\"details\":\"Returns a boolean if the '_account' is a member of the '_profileId' passed in\",\"params\":{\"_member\":\"The 'member' to check if they are a member of the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to check if the '_account' is a member of\"},\"returns\":{\"isMemberOfProfile\":\"A boolean if the '_account' is a member of the '_profileId' passed in\"}},\"isOwnerOfProfile(bytes32,address)\":{\"details\":\"Returns a boolean if the '_account' is an owner of the '_profileId' passed in\",\"params\":{\"_owner\":\"The 'owner' to check if they are an owner of the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to check if the '_account' is an owner of\"},\"returns\":{\"isOwnerOfProfile\":\"A boolean if the '_account' is an owner of the '_profileId' passed in\"}},\"isOwnerOrMemberOfProfile(bytes32,address)\":{\"details\":\"Returns a boolean if the '_account' is a member or owner of the '_profileId' passed in\",\"params\":{\"_account\":\"The 'account' to check if they are a member or owner of the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to check if the '_account' is a member or owner of\"},\"returns\":{\"isOwnerOrMemberOfProfile\":\"A boolean if the '_account' is a member or owner of the '_profileId' passed in\"}},\"recoverFunds(address,address)\":{\"details\":\"Recovers funds from the contract Requirements: Must be the Allo owner\",\"params\":{\"_recipient\":\"The recipient of the recovered funds\",\"_token\":\"The token you want to use to recover funds\"}},\"removeMembers(bytes32,address[])\":{\"details\":\"Removes members from the '_profileId' passed in Requirements: Only the 'Profile' owner can remove members\",\"params\":{\"_members\":\"The members to remove from the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to remove members from\"}},\"updateProfileMetadata(bytes32,(uint256,string))\":{\"details\":\"Updates the 'Metadata' of the '_profileId' passed in Requirements: Only the 'Profile' owner can update the metadata\",\"params\":{\"_metadata\":\"The new 'Metadata' value\",\"_profileId\":\"The 'profileId' to update the metadata for\"}},\"updateProfileName(bytes32,string)\":{\"details\":\"Updates the 'name' of the '_profileId' passed in and returns the new 'anchor' address Requirements: Only the 'Profile' owner can update the name Note: The 'name' and 'nonce' are used to generate the 'anchor' address and this will update the 'anchor'       so please use caution. You can always recreate your 'anchor' address by updating the name back       to the original name used to create the profile.\",\"params\":{\"_name\":\"The new 'name' value\",\"_profileId\":\"The 'profileId' to update the name for\"},\"returns\":{\"anchor\":\"The new 'anchor' address\"}},\"updateProfilePendingOwner(bytes32,address)\":{\"details\":\"Updates the pending 'owner' of the '_profileId' passed in Requirements: Only the 'Profile' owner can update the pending owner\",\"params\":{\"_pendingOwner\":\"The new pending 'owner' value\",\"_profileId\":\"The 'profileId' to update the pending owner for\"}}},\"title\":\"IRegistry Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for the Registry contract and exposes all functions needed to use the Registry         within the Allo protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":\"IRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"lib/allo-v2/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x41ece5b83f50d180841f44324a883e12b3fc2005e425e4cd51944fb8d46b147f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ecd926cbce88398d6fdb1762f7b75617635ae866f8461b7fb32dd2b0a17273ce\",\"dweb:/ipfs/QmdvPsL48GbXV2hy4vDcW9XtkN7VUTDebtYihuj7ZxhaD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface for the Registry contract and exposes all functions needed to use the Registry         within the Allo protocol.",
						"version": 1
					}
				}
			},
			"lib/allo-v2/contracts/core/interfaces/IStrategy.sol": {
				"IStrategy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Allocated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipientAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Distributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"name": "PoolActive",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Registered",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllo",
							"outputs": [
								{
									"internalType": "contract IAllo",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_data",
									"type": "bytes[]"
								}
							],
							"name": "getPayouts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "recipientAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IStrategy.PayoutSummary[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipientId",
									"type": "address"
								}
							],
							"name": "getRecipientStatus",
							"outputs": [
								{
									"internalType": "enum IStrategy.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStrategyId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "increasePoolAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPoolActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_allocator",
									"type": "address"
								}
							],
							"name": "isValidAllocator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "registerRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co> @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"events": {
							"Allocated(address,uint256,address,address)": {
								"params": {
									"amount": "The amount allocated",
									"recipientId": "The ID of the recipient",
									"token": "The token allocated"
								}
							},
							"Distributed(address,address,uint256,address)": {
								"params": {
									"amount": "The amount distributed",
									"recipientAddress": "The recipient",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							},
							"Initialized(uint256,bytes)": {
								"params": {
									"data": "The data passed to the 'initialize' function",
									"poolId": "The ID of the pool"
								}
							},
							"PoolActive(bool)": {
								"params": {
									"active": "The status of the pool"
								}
							},
							"Registered(address,bytes,address)": {
								"params": {
									"data": "The data passed to the 'registerRecipient' function",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allocate(bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation.",
								"params": {
									"_data": "The data to use to allocate to the recipient",
									"_sender": "The address of the sender"
								}
							},
							"distribute(address[],bytes,address)": {
								"details": "most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference this contract will need to track the amount paid already, so that it doesn't double pay."
							},
							"getAllo()": {
								"returns": {
									"_0": "The 'Allo' contract"
								}
							},
							"getPayouts(address[],bytes[])": {
								"details": "Input the values you would send to distribute(), get the amounts each recipient in the array would receive.      The encoded '_data' will be determined by the strategy, and will be used to determine the payout.",
								"params": {
									"_data": "The encoded data",
									"_recipientIds": "The IDs of the recipients"
								}
							},
							"getPoolAmount()": {
								"returns": {
									"_0": "The balance of the pool"
								}
							},
							"getPoolId()": {
								"returns": {
									"_0": "The ID of the pool"
								}
							},
							"getRecipientStatus(address)": {
								"params": {
									"_recipientId": "The ID of the recipient"
								},
								"returns": {
									"_0": "The status of the recipient"
								}
							},
							"getStrategyId()": {
								"returns": {
									"_0": "The ID of the strategy"
								}
							},
							"increasePoolAmount(uint256)": {
								"params": {
									"_amount": "The amount to increase the pool by"
								}
							},
							"initialize(uint256,bytes)": {
								"params": {
									"_data": "The encoded data",
									"_poolId": "The ID of the pool"
								}
							},
							"isPoolActive()": {
								"returns": {
									"_0": "Whether the pool is active or not"
								}
							},
							"isValidAllocator(address)": {
								"params": {
									"_allocator": "The allocator to check"
								},
								"returns": {
									"_0": "Whether the allocator is valid or not"
								}
							},
							"registerRecipient(bytes,address)": {
								"details": "Able to change status all the way up to 'Accepted', or to 'Pending' and if there are more steps, additional      functions should be added to allow the owner to check this. The owner could also check attestations directly      and then accept for instance. The '_data' will be determined by the strategy implementation.",
								"params": {
									"_data": "The data to use to register the recipient",
									"_sender": "The address of the sender"
								},
								"returns": {
									"_0": "The ID of the recipient"
								}
							}
						},
						"title": "IStrategy Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allocate(bytes,address)": "ef2920fc",
							"distribute(address[],bytes,address)": "0a6f0ee9",
							"getAllo()": "15cc481e",
							"getPayouts(address[],bytes[])": "b2b878d0",
							"getPoolAmount()": "4ab4ba42",
							"getPoolId()": "38fff2d0",
							"getRecipientStatus(address)": "eb11af93",
							"getStrategyId()": "42fda9c7",
							"increasePoolAmount(uint256)": "f5b0dfb7",
							"initialize(uint256,bytes)": "edd146cc",
							"isPoolActive()": "df868ed3",
							"isValidAllocator(address)": "4d31d087",
							"registerRecipient(bytes,address)": "2bbe0cae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Allocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllo\",\"outputs\":[{\"internalType\":\"contract IAllo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"getPayouts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategy.PayoutSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientId\",\"type\":\"address\"}],\"name\":\"getRecipientStatus\",\"outputs\":[{\"internalType\":\"enum IStrategy.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increasePoolAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"isValidAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co> @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"events\":{\"Allocated(address,uint256,address,address)\":{\"params\":{\"amount\":\"The amount allocated\",\"recipientId\":\"The ID of the recipient\",\"token\":\"The token allocated\"}},\"Distributed(address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount distributed\",\"recipientAddress\":\"The recipient\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}},\"Initialized(uint256,bytes)\":{\"params\":{\"data\":\"The data passed to the 'initialize' function\",\"poolId\":\"The ID of the pool\"}},\"PoolActive(bool)\":{\"params\":{\"active\":\"The status of the pool\"}},\"Registered(address,bytes,address)\":{\"params\":{\"data\":\"The data passed to the 'registerRecipient' function\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}}},\"kind\":\"dev\",\"methods\":{\"allocate(bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation.\",\"params\":{\"_data\":\"The data to use to allocate to the recipient\",\"_sender\":\"The address of the sender\"}},\"distribute(address[],bytes,address)\":{\"details\":\"most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference this contract will need to track the amount paid already, so that it doesn't double pay.\"},\"getAllo()\":{\"returns\":{\"_0\":\"The 'Allo' contract\"}},\"getPayouts(address[],bytes[])\":{\"details\":\"Input the values you would send to distribute(), get the amounts each recipient in the array would receive.      The encoded '_data' will be determined by the strategy, and will be used to determine the payout.\",\"params\":{\"_data\":\"The encoded data\",\"_recipientIds\":\"The IDs of the recipients\"}},\"getPoolAmount()\":{\"returns\":{\"_0\":\"The balance of the pool\"}},\"getPoolId()\":{\"returns\":{\"_0\":\"The ID of the pool\"}},\"getRecipientStatus(address)\":{\"params\":{\"_recipientId\":\"The ID of the recipient\"},\"returns\":{\"_0\":\"The status of the recipient\"}},\"getStrategyId()\":{\"returns\":{\"_0\":\"The ID of the strategy\"}},\"increasePoolAmount(uint256)\":{\"params\":{\"_amount\":\"The amount to increase the pool by\"}},\"initialize(uint256,bytes)\":{\"params\":{\"_data\":\"The encoded data\",\"_poolId\":\"The ID of the pool\"}},\"isPoolActive()\":{\"returns\":{\"_0\":\"Whether the pool is active or not\"}},\"isValidAllocator(address)\":{\"params\":{\"_allocator\":\"The allocator to check\"},\"returns\":{\"_0\":\"Whether the allocator is valid or not\"}},\"registerRecipient(bytes,address)\":{\"details\":\"Able to change status all the way up to 'Accepted', or to 'Pending' and if there are more steps, additional      functions should be added to allow the owner to check this. The owner could also check attestations directly      and then accept for instance. The '_data' will be determined by the strategy implementation.\",\"params\":{\"_data\":\"The data to use to register the recipient\",\"_sender\":\"The address of the sender\"},\"returns\":{\"_0\":\"The ID of the recipient\"}}},\"title\":\"IStrategy Interface\",\"version\":1},\"userdoc\":{\"events\":{\"Allocated(address,uint256,address,address)\":{\"notice\":\"Emitted when a recipient is allocated to.\"},\"Distributed(address,address,uint256,address)\":{\"notice\":\"Emitted when tokens are distributed.\"},\"Initialized(uint256,bytes)\":{\"notice\":\"Emitted when strategy is initialized.\"},\"PoolActive(bool)\":{\"notice\":\"Emitted when pool is set to active status.\"},\"Registered(address,bytes,address)\":{\"notice\":\"Emitted when a recipient is registered.\"}},\"kind\":\"user\",\"methods\":{\"allocate(bytes,address)\":{\"notice\":\"This will allocate to a recipient.\"},\"distribute(address[],bytes,address)\":{\"notice\":\"This will distribute funds (tokens) to recipients.\"},\"getAllo()\":{\"notice\":\"Getter for the address of the Allo contract.\"},\"getPayouts(address[],bytes[])\":{\"notice\":\"Checks the amount allocated to a recipient for distribution.\"},\"getPoolAmount()\":{\"notice\":\"Checks the amount of tokens in the pool.\"},\"getPoolId()\":{\"notice\":\"Getter for the 'poolId' for this strategy.\"},\"getRecipientStatus(address)\":{\"notice\":\"Checks the status of a recipient probably tracked in a mapping, but will depend on the implementation      for example, the OpenSelfRegistration only maps users to bool, and then assumes Accepted for those      since there is no need for Pending or Rejected.\"},\"getStrategyId()\":{\"notice\":\"Getter for the 'id' of the strategy.\"},\"increasePoolAmount(uint256)\":{\"notice\":\"Increases the balance of the pool.\"},\"initialize(uint256,bytes)\":{\"notice\":\"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize().\"},\"isPoolActive()\":{\"notice\":\"whether pool is active.\"},\"isValidAllocator(address)\":{\"notice\":\"Checks whether a allocator is valid or not, will usually be true for all strategies      and will depend on the strategy implementation.\"},\"registerRecipient(bytes,address)\":{\"notice\":\"This will register a recipient, set their status (and any other strategy specific values), and         return the ID of the recipient.\"}},\"notice\":\"BaseStrategy is the base contract that all strategies should inherit from and uses this interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/core/interfaces/IStrategy.sol\":\"IStrategy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xb4d42b75def46f3fd1e182f5b18bde5df74822d3666580e66d34802f362b517e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a9492cb300be5f7cd8c58f54ff472b66c108827833bf1156028d8513b91e8f29\",\"dweb:/ipfs/QmccCdVZWsPhJEExajS6gANPyg2pEpD6RZwyjFNrdJM4Ek\"]},\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"lib/allo-v2/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"lib/allo-v2/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x41ece5b83f50d180841f44324a883e12b3fc2005e425e4cd51944fb8d46b147f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ecd926cbce88398d6fdb1762f7b75617635ae866f8461b7fb32dd2b0a17273ce\",\"dweb:/ipfs/QmdvPsL48GbXV2hy4vDcW9XtkN7VUTDebtYihuj7ZxhaD7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Allocated(address,uint256,address,address)": {
								"notice": "Emitted when a recipient is allocated to."
							},
							"Distributed(address,address,uint256,address)": {
								"notice": "Emitted when tokens are distributed."
							},
							"Initialized(uint256,bytes)": {
								"notice": "Emitted when strategy is initialized."
							},
							"PoolActive(bool)": {
								"notice": "Emitted when pool is set to active status."
							},
							"Registered(address,bytes,address)": {
								"notice": "Emitted when a recipient is registered."
							}
						},
						"kind": "user",
						"methods": {
							"allocate(bytes,address)": {
								"notice": "This will allocate to a recipient."
							},
							"distribute(address[],bytes,address)": {
								"notice": "This will distribute funds (tokens) to recipients."
							},
							"getAllo()": {
								"notice": "Getter for the address of the Allo contract."
							},
							"getPayouts(address[],bytes[])": {
								"notice": "Checks the amount allocated to a recipient for distribution."
							},
							"getPoolAmount()": {
								"notice": "Checks the amount of tokens in the pool."
							},
							"getPoolId()": {
								"notice": "Getter for the 'poolId' for this strategy."
							},
							"getRecipientStatus(address)": {
								"notice": "Checks the status of a recipient probably tracked in a mapping, but will depend on the implementation      for example, the OpenSelfRegistration only maps users to bool, and then assumes Accepted for those      since there is no need for Pending or Rejected."
							},
							"getStrategyId()": {
								"notice": "Getter for the 'id' of the strategy."
							},
							"increasePoolAmount(uint256)": {
								"notice": "Increases the balance of the pool."
							},
							"initialize(uint256,bytes)": {
								"notice": "@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize()."
							},
							"isPoolActive()": {
								"notice": "whether pool is active."
							},
							"isValidAllocator(address)": {
								"notice": "Checks whether a allocator is valid or not, will usually be true for all strategies      and will depend on the strategy implementation."
							},
							"registerRecipient(bytes,address)": {
								"notice": "This will register a recipient, set their status (and any other strategy specific values), and         return the ID of the recipient."
							}
						},
						"notice": "BaseStrategy is the base contract that all strategies should inherit from and uses this interface.",
						"version": 1
					}
				}
			},
			"lib/allo-v2/contracts/core/libraries/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "ALLOCATION_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALLOCATION_NOT_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALLOCATION_NOT_ENDED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALREADY_INITIALIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ANCHOR_ERROR",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ARRAY_MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_FEE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_METADATA",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_REGISTRATION",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IS_APPROVED_STRATEGY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NONCE_NOT_AVAILABLE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NON_ZERO_VALUE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_APPROVED_STRATEGY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_ENOUGH_FUNDS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_IMPLEMENTED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_INITIALIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_PENDING_OWNER",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "POOL_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "POOL_INACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RECIPIENT_ALREADY_ACCEPTED",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								}
							],
							"name": "RECIPIENT_ERROR",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RECIPIENT_NOT_ACCEPTED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "REGISTRATION_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "REGISTRATION_NOT_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UNAUTHORIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZERO_ADDRESS",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @KurtMerbeth <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>",
						"errors": {
							"ANCHOR_ERROR()": [
								{
									"details": "Thrown if the anchor creation fails"
								}
							],
							"NONCE_NOT_AVAILABLE()": [
								{
									"details": "Thrown when the nonce passed has been used or not available"
								}
							],
							"NOT_PENDING_OWNER()": [
								{
									"details": "Thrown when the 'msg.sender' is not the pending owner on ownership transfer"
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "Errors",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/allo-v2/contracts/core/libraries/Errors.sol\":4270:7314  contract Errors {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/allo-v2/contracts/core/libraries/Errors.sol\":4270:7314  contract Errors {... */\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220adc94d97c26d4c3cd24b7fb17b0a3d2eee7135f57d97c05e6aa0d500c22d6d5164736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50603e80601a5f395ff3fe60806040525f5ffdfea2646970667358221220adc94d97c26d4c3cd24b7fb17b0a3d2eee7135f57d97c05e6aa0d500c22d6d5164736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xC9 0x4D SWAP8 0xC2 PUSH14 0x4C3CD24B7FB17B0A3D2EEE7135F5 PUSH30 0x97C05E6AA0D500C22D6D5164736F6C634300081B00330000000000000000 ",
							"sourceMap": "4270:3044:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f5ffdfea2646970667358221220adc94d97c26d4c3cd24b7fb17b0a3d2eee7135f57d97c05e6aa0d500c22d6d5164736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xC9 0x4D SWAP8 0xC2 PUSH14 0x4C3CD24B7FB17B0A3D2EEE7135F5 PUSH30 0x97C05E6AA0D500C22D6D5164736F6C634300081B00330000000000000000 ",
							"sourceMap": "4270:3044:3:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4270,
									"end": 7314,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4270,
									"end": 7314,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220adc94d97c26d4c3cd24b7fb17b0a3d2eee7135f57d97c05e6aa0d500c22d6d5164736f6c634300081b0033",
									".code": [
										{
											"begin": 4270,
											"end": 7314,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4270,
											"end": 7314,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4270,
											"end": 7314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4270,
											"end": 7314,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 7314,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 7314,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"lib/allo-v2/contracts/core/interfaces/IAllo.sol",
								"lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
								"lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
								"lib/allo-v2/contracts/core/libraries/Errors.sol",
								"lib/allo-v2/contracts/core/libraries/Metadata.sol",
								"lib/allo-v2/contracts/core/libraries/Native.sol",
								"lib/allo-v2/contracts/core/libraries/Transfer.sol",
								"lib/allo-v2/contracts/strategies/BaseStrategy.sol",
								"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol",
								"src/YeeterStrategy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ALLOCATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ENDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALREADY_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ANCHOR_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ARRAY_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_FEE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_METADATA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_REGISTRATION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IS_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NONCE_NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NON_ZERO_VALUE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_IMPLEMENTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PENDING_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_INACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_ALREADY_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"name\":\"RECIPIENT_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_NOT_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @KurtMerbeth <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>\",\"errors\":{\"ANCHOR_ERROR()\":[{\"details\":\"Thrown if the anchor creation fails\"}],\"NONCE_NOT_AVAILABLE()\":[{\"details\":\"Thrown when the nonce passed has been used or not available\"}],\"NOT_PENDING_OWNER()\":[{\"details\":\"Thrown when the 'msg.sender' is not the pending owner on ownership transfer\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"Errors\",\"version\":1},\"userdoc\":{\"errors\":{\"ALLOCATION_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is active.\"}],\"ALLOCATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is not active.\"}],\"ALLOCATION_NOT_ENDED()\":[{\"notice\":\"Thrown when the allocation is not ended.\"}],\"ALREADY_INITIALIZED()\":[{\"notice\":\"Thrown when data is already intialized\"}],\"ARRAY_MISMATCH()\":[{\"notice\":\"Thrown when two arrays length are not equal\"}],\"INVALID()\":[{\"notice\":\"Thrown as a general error when input / data is invalid\"}],\"INVALID_ADDRESS()\":[{\"notice\":\"Thrown when an invalid address is used\"}],\"INVALID_FEE()\":[{\"notice\":\"Thrown when the fee is below 1e18 which is the fee percentage denominator\"}],\"INVALID_METADATA()\":[{\"notice\":\"Thrown when the metadata is invalid.\"}],\"INVALID_REGISTRATION()\":[{\"notice\":\"Thrown when the registration is invalid.\"}],\"IS_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is approved and should be cloned\"}],\"MISMATCH()\":[{\"notice\":\"Thrown when mismatch in decoding data\"}],\"NON_ZERO_VALUE()\":[{\"notice\":\"Thrown when the value is non-zero\"}],\"NOT_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is not approved\"}],\"NOT_ENOUGH_FUNDS()\":[{\"notice\":\"Thrown when not enough funds are available\"}],\"NOT_IMPLEMENTED()\":[{\"notice\":\"Thrown when the function is not implemented\"}],\"NOT_INITIALIZED()\":[{\"notice\":\"Thrown when data is yet to be initialized\"}],\"POOL_ACTIVE()\":[{\"notice\":\"Thrown when a pool is already active\"}],\"POOL_INACTIVE()\":[{\"notice\":\"Thrown when a pool is inactive\"}],\"RECIPIENT_ALREADY_ACCEPTED()\":[{\"notice\":\"Thrown when recipient is already accepted.\"}],\"RECIPIENT_ERROR(address)\":[{\"notice\":\"Thrown when there is an error in recipient.\"}],\"RECIPIENT_NOT_ACCEPTED()\":[{\"notice\":\"Thrown when the recipient is not accepted.\"}],\"REGISTRATION_ACTIVE()\":[{\"notice\":\"Thrown when registration is active.\"}],\"REGISTRATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when registration is not active.\"}],\"UNAUTHORIZED()\":[{\"notice\":\"Thrown when user is not authorized\"}],\"ZERO_ADDRESS()\":[{\"notice\":\"Thrown when address is the zero address\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Library containing all custom errors the protocol may revert with.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/core/libraries/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/libraries/Errors.sol\":{\"keccak256\":\"0xcb30aef5d96b6be43471657c2b2cef6bf171fddcd71dc7d6347eedd51bc7e45c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ee6edb9116e028006cd4ac70a83ff2d41b749fd508575bb7627def1f782ad27\",\"dweb:/ipfs/QmbyX2wEE74X6HRPBCGZBP9RVkMf69Aaj2cBcUaDMtTq7h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ALLOCATION_ACTIVE()": [
								{
									"notice": "Thrown when the allocation is active."
								}
							],
							"ALLOCATION_NOT_ACTIVE()": [
								{
									"notice": "Thrown when the allocation is not active."
								}
							],
							"ALLOCATION_NOT_ENDED()": [
								{
									"notice": "Thrown when the allocation is not ended."
								}
							],
							"ALREADY_INITIALIZED()": [
								{
									"notice": "Thrown when data is already intialized"
								}
							],
							"ARRAY_MISMATCH()": [
								{
									"notice": "Thrown when two arrays length are not equal"
								}
							],
							"INVALID()": [
								{
									"notice": "Thrown as a general error when input / data is invalid"
								}
							],
							"INVALID_ADDRESS()": [
								{
									"notice": "Thrown when an invalid address is used"
								}
							],
							"INVALID_FEE()": [
								{
									"notice": "Thrown when the fee is below 1e18 which is the fee percentage denominator"
								}
							],
							"INVALID_METADATA()": [
								{
									"notice": "Thrown when the metadata is invalid."
								}
							],
							"INVALID_REGISTRATION()": [
								{
									"notice": "Thrown when the registration is invalid."
								}
							],
							"IS_APPROVED_STRATEGY()": [
								{
									"notice": "Thrown when the strategy is approved and should be cloned"
								}
							],
							"MISMATCH()": [
								{
									"notice": "Thrown when mismatch in decoding data"
								}
							],
							"NON_ZERO_VALUE()": [
								{
									"notice": "Thrown when the value is non-zero"
								}
							],
							"NOT_APPROVED_STRATEGY()": [
								{
									"notice": "Thrown when the strategy is not approved"
								}
							],
							"NOT_ENOUGH_FUNDS()": [
								{
									"notice": "Thrown when not enough funds are available"
								}
							],
							"NOT_IMPLEMENTED()": [
								{
									"notice": "Thrown when the function is not implemented"
								}
							],
							"NOT_INITIALIZED()": [
								{
									"notice": "Thrown when data is yet to be initialized"
								}
							],
							"POOL_ACTIVE()": [
								{
									"notice": "Thrown when a pool is already active"
								}
							],
							"POOL_INACTIVE()": [
								{
									"notice": "Thrown when a pool is inactive"
								}
							],
							"RECIPIENT_ALREADY_ACCEPTED()": [
								{
									"notice": "Thrown when recipient is already accepted."
								}
							],
							"RECIPIENT_ERROR(address)": [
								{
									"notice": "Thrown when there is an error in recipient."
								}
							],
							"RECIPIENT_NOT_ACCEPTED()": [
								{
									"notice": "Thrown when the recipient is not accepted."
								}
							],
							"REGISTRATION_ACTIVE()": [
								{
									"notice": "Thrown when registration is active."
								}
							],
							"REGISTRATION_NOT_ACTIVE()": [
								{
									"notice": "Thrown when registration is not active."
								}
							],
							"UNAUTHORIZED()": [
								{
									"notice": "Thrown when user is not authorized"
								}
							],
							"ZERO_ADDRESS()": [
								{
									"notice": "Thrown when address is the zero address"
								}
							]
						},
						"kind": "user",
						"methods": {},
						"notice": "Library containing all custom errors the protocol may revert with.",
						"version": 1
					}
				}
			},
			"lib/allo-v2/contracts/core/libraries/Native.sol": {
				"Native": {
					"abi": [
						{
							"inputs": [],
							"name": "NATIVE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"kind": "dev",
						"methods": {},
						"title": "Native token information",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4347:4491  contract Native {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4347:4491  contract Native {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa0cf0aea\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4413:4488  address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4446:4488  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4413:4488  address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_8:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_9:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_14\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_8\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_10:\n        /* \"#utility.yul\":328:352   */\n      tag_16\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_9\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_7:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_18\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_10\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122098d7a3443ee050368c1c1ce269bdafafb194a2bf3e33fb88d53ad9d10bf0768464736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5060e48061001b5f395ff3fe6080604052348015600e575f5ffd5b50600436106026575f3560e01c8063a0cf0aea14602a575b5f5ffd5b60306044565b604051603b91906097565b60405180910390f35b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f608382605c565b9050919050565b609181607b565b82525050565b5f60208201905060a85f830184608a565b9291505056fea264697066735822122098d7a3443ee050368c1c1ce269bdafafb194a2bf3e33fb88d53ad9d10bf0768464736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xE4 DUP1 PUSH2 0x1B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0CF0AEA EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0x97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x83 DUP3 PUSH1 0x5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x91 DUP2 PUSH1 0x7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA8 PUSH0 DUP4 ADD DUP5 PUSH1 0x8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xD7 LOG3 PREVRANDAO RETURNDATACOPY 0xE0 POP CALLDATASIZE DUP13 SHR SHR 0xE2 PUSH10 0xBDAFAFB194A2BF3E33FB DUP9 0xD5 GASPRICE 0xD9 0xD1 SIGNEXTEND CREATE PUSH23 0x8464736F6C634300081B00330000000000000000000000 ",
							"sourceMap": "4347:144:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NATIVE_831": {
									"entryPoint": 68,
									"id": 831,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 92,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:10",
										"nodeType": "YulBlock",
										"src": "0:590:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:10",
													"nodeType": "YulBlock",
													"src": "52:81:10",
													"statements": [
														{
															"nativeSrc": "62:65:10",
															"nodeType": "YulAssignment",
															"src": "62:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:10",
																		"nodeType": "YulLiteral",
																		"src": "84:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:10"
																},
																"nativeSrc": "73:54:10",
																"nodeType": "YulFunctionCall",
																"src": "73:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:126:10"
											},
											{
												"body": {
													"nativeSrc": "184:51:10",
													"nodeType": "YulBlock",
													"src": "184:51:10",
													"statements": [
														{
															"nativeSrc": "194:35:10",
															"nodeType": "YulAssignment",
															"src": "194:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:10"
																},
																"nativeSrc": "205:24:10",
																"nodeType": "YulFunctionCall",
																"src": "205:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:10",
														"nodeType": "YulTypedName",
														"src": "166:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:10",
														"nodeType": "YulTypedName",
														"src": "176:7:10",
														"type": ""
													}
												],
												"src": "139:96:10"
											},
											{
												"body": {
													"nativeSrc": "306:53:10",
													"nodeType": "YulBlock",
													"src": "306:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:10"
																		},
																		"nativeSrc": "328:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:10"
																},
																"nativeSrc": "316:37:10",
																"nodeType": "YulFunctionCall",
																"src": "316:37:10"
															},
															"nativeSrc": "316:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:10",
														"nodeType": "YulTypedName",
														"src": "294:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:10",
														"nodeType": "YulTypedName",
														"src": "301:3:10",
														"type": ""
													}
												],
												"src": "241:118:10"
											},
											{
												"body": {
													"nativeSrc": "463:124:10",
													"nodeType": "YulBlock",
													"src": "463:124:10",
													"statements": [
														{
															"nativeSrc": "473:26:10",
															"nodeType": "YulAssignment",
															"src": "473:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:10",
																		"nodeType": "YulLiteral",
																		"src": "496:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:10"
																},
																"nativeSrc": "481:18:10",
																"nodeType": "YulFunctionCall",
																"src": "481:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:10",
																				"nodeType": "YulLiteral",
																				"src": "577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:10"
																		},
																		"nativeSrc": "562:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:10"
																},
																"nativeSrc": "509:71:10",
																"nodeType": "YulFunctionCall",
																"src": "509:71:10"
															},
															"nativeSrc": "509:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:10",
														"nodeType": "YulTypedName",
														"src": "435:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:10",
														"nodeType": "YulTypedName",
														"src": "447:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:10",
														"nodeType": "YulTypedName",
														"src": "458:4:10",
														"type": ""
													}
												],
												"src": "365:222:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50600436106026575f3560e01c8063a0cf0aea14602a575b5f5ffd5b60306044565b604051603b91906097565b60405180910390f35b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f608382605c565b9050919050565b609181607b565b82525050565b5f60208201905060a85f830184608a565b9291505056fea264697066735822122098d7a3443ee050368c1c1ce269bdafafb194a2bf3e33fb88d53ad9d10bf0768464736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0CF0AEA EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0x97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x83 DUP3 PUSH1 0x5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x91 DUP2 PUSH1 0x7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA8 PUSH0 DUP4 ADD DUP5 PUSH1 0x8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xD7 LOG3 PREVRANDAO RETURNDATACOPY 0xE0 POP CALLDATASIZE DUP13 SHR SHR 0xE2 PUSH10 0xBDAFAFB194A2BF3E33FB DUP9 0xD5 GASPRICE 0xD9 0xD1 SIGNEXTEND CREATE PUSH23 0x8464736F6C634300081B00330000000000000000000000 ",
							"sourceMap": "4347:144:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4413:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;4446:42;4413:75;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "45600",
								"executionCost": "97",
								"totalCost": "45697"
							},
							"external": {
								"NATIVE()": "351"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4347,
									"end": 4491,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4347,
									"end": 4491,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122098d7a3443ee050368c1c1ce269bdafafb194a2bf3e33fb88d53ad9d10bf0768464736f6c634300081b0033",
									".code": [
										{
											"begin": 4347,
											"end": 4491,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "PUSH",
											"source": 5,
											"value": "A0CF0AEA"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4491,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4413,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4413,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"lib/allo-v2/contracts/core/interfaces/IAllo.sol",
								"lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
								"lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
								"lib/allo-v2/contracts/core/libraries/Errors.sol",
								"lib/allo-v2/contracts/core/libraries/Metadata.sol",
								"lib/allo-v2/contracts/core/libraries/Native.sol",
								"lib/allo-v2/contracts/core/libraries/Transfer.sol",
								"lib/allo-v2/contracts/strategies/BaseStrategy.sol",
								"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol",
								"src/YeeterStrategy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NATIVE()": "a0cf0aea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Native token information\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"NATIVE()\":{\"notice\":\"Address of the native token\"}},\"notice\":\"This is used to define the address of the native token for the protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/core/libraries/Native.sol\":\"Native\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/libraries/Native.sol\":{\"keccak256\":\"0x5a12a5d2fb1ba09c0ca357b8ef22e65b954831563f6e6a63a08a8176608c9264\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://75e51c8b86b13955b647f49e3869a0877d1af7355fad036ecc03af98e3d29972\",\"dweb:/ipfs/QmZAGmPgsFj5pbY8eDVLNA8mjHUZtWq4V8RVNFLk8MyVr8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"NATIVE()": {
								"notice": "Address of the native token"
							}
						},
						"notice": "This is used to define the address of the native token for the protocol",
						"version": 1
					}
				}
			},
			"lib/allo-v2/contracts/core/libraries/Transfer.sol": {
				"Transfer": {
					"abi": [
						{
							"inputs": [],
							"name": "AMOUNT_MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NATIVE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"details": "Handles the transfer of tokens to an address",
						"kind": "dev",
						"methods": {},
						"title": "Transfer contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":4514:7538  contract Transfer is Native {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":4514:7538  contract Transfer is Native {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa0cf0aea\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4413:4488  address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4446:4488  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4413:4488  address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_8:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_9:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_14\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_8\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_10:\n        /* \"#utility.yul\":328:352   */\n      tag_16\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_9\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_7:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_18\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_10\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e9847eb13b751725ff4689ca00608a69c8a26275214b73ae0d51188ec709e44d64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5060e48061001b5f395ff3fe6080604052348015600e575f5ffd5b50600436106026575f3560e01c8063a0cf0aea14602a575b5f5ffd5b60306044565b604051603b91906097565b60405180910390f35b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f608382605c565b9050919050565b609181607b565b82525050565b5f60208201905060a85f830184608a565b9291505056fea2646970667358221220e9847eb13b751725ff4689ca00608a69c8a26275214b73ae0d51188ec709e44d64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xE4 DUP1 PUSH2 0x1B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0CF0AEA EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0x97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x83 DUP3 PUSH1 0x5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x91 DUP2 PUSH1 0x7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA8 PUSH0 DUP4 ADD DUP5 PUSH1 0x8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 DUP5 PUSH31 0xB13B751725FF4689CA00608A69C8A26275214B73AE0D51188EC709E44D6473 PUSH16 0x6C634300081B00330000000000000000 ",
							"sourceMap": "4514:3024:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NATIVE_831": {
									"entryPoint": 68,
									"id": 831,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 92,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:10",
										"nodeType": "YulBlock",
										"src": "0:590:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:10",
													"nodeType": "YulBlock",
													"src": "52:81:10",
													"statements": [
														{
															"nativeSrc": "62:65:10",
															"nodeType": "YulAssignment",
															"src": "62:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:10",
																		"nodeType": "YulLiteral",
																		"src": "84:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:10"
																},
																"nativeSrc": "73:54:10",
																"nodeType": "YulFunctionCall",
																"src": "73:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:126:10"
											},
											{
												"body": {
													"nativeSrc": "184:51:10",
													"nodeType": "YulBlock",
													"src": "184:51:10",
													"statements": [
														{
															"nativeSrc": "194:35:10",
															"nodeType": "YulAssignment",
															"src": "194:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:10"
																},
																"nativeSrc": "205:24:10",
																"nodeType": "YulFunctionCall",
																"src": "205:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:10",
														"nodeType": "YulTypedName",
														"src": "166:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:10",
														"nodeType": "YulTypedName",
														"src": "176:7:10",
														"type": ""
													}
												],
												"src": "139:96:10"
											},
											{
												"body": {
													"nativeSrc": "306:53:10",
													"nodeType": "YulBlock",
													"src": "306:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:10"
																		},
																		"nativeSrc": "328:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:10"
																},
																"nativeSrc": "316:37:10",
																"nodeType": "YulFunctionCall",
																"src": "316:37:10"
															},
															"nativeSrc": "316:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:10",
														"nodeType": "YulTypedName",
														"src": "294:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:10",
														"nodeType": "YulTypedName",
														"src": "301:3:10",
														"type": ""
													}
												],
												"src": "241:118:10"
											},
											{
												"body": {
													"nativeSrc": "463:124:10",
													"nodeType": "YulBlock",
													"src": "463:124:10",
													"statements": [
														{
															"nativeSrc": "473:26:10",
															"nodeType": "YulAssignment",
															"src": "473:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:10",
																		"nodeType": "YulLiteral",
																		"src": "496:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:10"
																},
																"nativeSrc": "481:18:10",
																"nodeType": "YulFunctionCall",
																"src": "481:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:10",
																				"nodeType": "YulLiteral",
																				"src": "577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:10"
																		},
																		"nativeSrc": "562:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:10"
																},
																"nativeSrc": "509:71:10",
																"nodeType": "YulFunctionCall",
																"src": "509:71:10"
															},
															"nativeSrc": "509:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:10",
														"nodeType": "YulTypedName",
														"src": "435:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:10",
														"nodeType": "YulTypedName",
														"src": "447:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:10",
														"nodeType": "YulTypedName",
														"src": "458:4:10",
														"type": ""
													}
												],
												"src": "365:222:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50600436106026575f3560e01c8063a0cf0aea14602a575b5f5ffd5b60306044565b604051603b91906097565b60405180910390f35b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f608382605c565b9050919050565b609181607b565b82525050565b5f60208201905060a85f830184608a565b9291505056fea2646970667358221220e9847eb13b751725ff4689ca00608a69c8a26275214b73ae0d51188ec709e44d64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0CF0AEA EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0x97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x83 DUP3 PUSH1 0x5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x91 DUP2 PUSH1 0x7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA8 PUSH0 DUP4 ADD DUP5 PUSH1 0x8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 DUP5 PUSH31 0xB13B751725FF4689CA00608A69C8A26275214B73AE0D51188EC709E44D6473 PUSH16 0x6C634300081B00330000000000000000 ",
							"sourceMap": "4514:3024:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4413:75:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;4446:42;4413:75;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "45600",
								"executionCost": "97",
								"totalCost": "45697"
							},
							"external": {
								"NATIVE()": "351"
							},
							"internal": {
								"_getBalance(address,address)": "infinite",
								"_transferAmount(address,address,uint256)": "infinite",
								"_transferAmountFrom(address,struct Transfer.TransferData memory)": "infinite",
								"_transferAmountsFrom(address,struct Transfer.TransferData memory[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4514,
									"end": 7538,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4514,
									"end": 7538,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e9847eb13b751725ff4689ca00608a69c8a26275214b73ae0d51188ec709e44d64736f6c634300081b0033",
									".code": [
										{
											"begin": 4514,
											"end": 7538,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "PUSH",
											"source": 6,
											"value": "A0CF0AEA"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 7538,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4413,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4413,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"lib/allo-v2/contracts/core/interfaces/IAllo.sol",
								"lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
								"lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
								"lib/allo-v2/contracts/core/libraries/Errors.sol",
								"lib/allo-v2/contracts/core/libraries/Metadata.sol",
								"lib/allo-v2/contracts/core/libraries/Native.sol",
								"lib/allo-v2/contracts/core/libraries/Transfer.sol",
								"lib/allo-v2/contracts/strategies/BaseStrategy.sol",
								"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol",
								"src/YeeterStrategy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NATIVE()": "a0cf0aea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AMOUNT_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"details\":\"Handles the transfer of tokens to an address\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Transfer contract\",\"version\":1},\"userdoc\":{\"errors\":{\"AMOUNT_MISMATCH()\":[{\"notice\":\"Thrown when the amount of tokens sent does not match the amount of tokens expected\"}]},\"kind\":\"user\",\"methods\":{\"NATIVE()\":{\"notice\":\"Address of the native token\"}},\"notice\":\"A helper contract to transfer tokens within Allo protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/core/libraries/Transfer.sol\":\"Transfer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/libraries/Native.sol\":{\"keccak256\":\"0x5a12a5d2fb1ba09c0ca357b8ef22e65b954831563f6e6a63a08a8176608c9264\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://75e51c8b86b13955b647f49e3869a0877d1af7355fad036ecc03af98e3d29972\",\"dweb:/ipfs/QmZAGmPgsFj5pbY8eDVLNA8mjHUZtWq4V8RVNFLk8MyVr8\"]},\"lib/allo-v2/contracts/core/libraries/Transfer.sol\":{\"keccak256\":\"0x490d9748fc1232a6db5a7dac80f7acd54852d0a1f3490959f3e6a6488f704f7e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cc225511b84e9ac56b7b59339ed8ec5ce6d2a0f2b0ee8cbc2d68c48c9b8d3603\",\"dweb:/ipfs/QmYDsnUWW2NsWjBn3PuLuz9nLjbVcCyeiv6tJZG1uxSbkQ\"]},\"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298\",\"dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"AMOUNT_MISMATCH()": [
								{
									"notice": "Thrown when the amount of tokens sent does not match the amount of tokens expected"
								}
							]
						},
						"kind": "user",
						"methods": {
							"NATIVE()": {
								"notice": "Address of the native token"
							}
						},
						"notice": "A helper contract to transfer tokens within Allo protocol",
						"version": 1
					}
				}
			},
			"lib/allo-v2/contracts/strategies/BaseStrategy.sol": {
				"BaseStrategy": {
					"abi": [
						{
							"inputs": [],
							"name": "ALLOCATION_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALLOCATION_NOT_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALLOCATION_NOT_ENDED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALREADY_INITIALIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AMOUNT_MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ANCHOR_ERROR",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ARRAY_MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_FEE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_METADATA",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_REGISTRATION",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IS_APPROVED_STRATEGY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NONCE_NOT_AVAILABLE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NON_ZERO_VALUE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_APPROVED_STRATEGY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_ENOUGH_FUNDS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_IMPLEMENTED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_INITIALIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_PENDING_OWNER",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "POOL_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "POOL_INACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RECIPIENT_ALREADY_ACCEPTED",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								}
							],
							"name": "RECIPIENT_ERROR",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RECIPIENT_NOT_ACCEPTED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "REGISTRATION_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "REGISTRATION_NOT_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UNAUTHORIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZERO_ADDRESS",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Allocated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipientAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Distributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"name": "PoolActive",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Registered",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "NATIVE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllo",
							"outputs": [
								{
									"internalType": "contract IAllo",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_data",
									"type": "bytes[]"
								}
							],
							"name": "getPayouts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "recipientAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IStrategy.PayoutSummary[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipientId",
									"type": "address"
								}
							],
							"name": "getRecipientStatus",
							"outputs": [
								{
									"internalType": "enum IStrategy.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStrategyId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "increasePoolAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPoolActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_allocator",
									"type": "address"
								}
							],
							"name": "isValidAllocator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "registerRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"details": "This contract is implemented by all strategies.",
						"errors": {
							"ANCHOR_ERROR()": [
								{
									"details": "Thrown if the anchor creation fails"
								}
							],
							"NONCE_NOT_AVAILABLE()": [
								{
									"details": "Thrown when the nonce passed has been used or not available"
								}
							],
							"NOT_PENDING_OWNER()": [
								{
									"details": "Thrown when the 'msg.sender' is not the pending owner on ownership transfer"
								}
							]
						},
						"events": {
							"Allocated(address,uint256,address,address)": {
								"params": {
									"amount": "The amount allocated",
									"recipientId": "The ID of the recipient",
									"token": "The token allocated"
								}
							},
							"Distributed(address,address,uint256,address)": {
								"params": {
									"amount": "The amount distributed",
									"recipientAddress": "The recipient",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							},
							"Initialized(uint256,bytes)": {
								"params": {
									"data": "The data passed to the 'initialize' function",
									"poolId": "The ID of the pool"
								}
							},
							"PoolActive(bool)": {
								"params": {
									"active": "The status of the pool"
								}
							},
							"Registered(address,bytes,address)": {
								"params": {
									"data": "The data passed to the 'registerRecipient' function",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allocate(bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
								"params": {
									"_data": "The data to use to allocate to the recipient",
									"_sender": "The address of the sender"
								}
							},
							"constructor": {
								"params": {
									"_allo": "Address of the Allo contract.",
									"_name": "Name of the strategy"
								}
							},
							"distribute(address[],bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
								"params": {
									"_data": "The data to use to distribute to the recipients",
									"_recipientIds": "The IDs of the recipients",
									"_sender": "The address of the sender"
								}
							},
							"getAllo()": {
								"returns": {
									"_0": "The Allo contract"
								}
							},
							"getPayouts(address[],bytes[])": {
								"details": "The encoded '_data' will be determined by the strategy implementation.",
								"params": {
									"_data": "The data to use to get the payout summary for the recipients",
									"_recipientIds": "The IDs of the recipients"
								},
								"returns": {
									"_0": "The payout summary for the recipients"
								}
							},
							"getPoolAmount()": {
								"returns": {
									"_0": "The balance of the pool"
								}
							},
							"getPoolId()": {
								"returns": {
									"_0": "The ID of the pool"
								}
							},
							"getRecipientStatus(address)": {
								"params": {
									"_recipientId": "The ID of the recipient"
								},
								"returns": {
									"_0": "The status of the recipient"
								}
							},
							"getStrategyId()": {
								"returns": {
									"_0": "The ID of the strategy"
								}
							},
							"increasePoolAmount(uint256)": {
								"details": "Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.",
								"params": {
									"_amount": "The amount to increase the pool by"
								}
							},
							"initialize(uint256,bytes)": {
								"params": {
									"_data": "The encoded data",
									"_poolId": "The ID of the pool"
								}
							},
							"isPoolActive()": {
								"returns": {
									"_0": "'true' if the pool is active, otherwise 'false'"
								}
							},
							"isValidAllocator(address)": {
								"details": "How the allocator is determined is up to the strategy implementation.",
								"params": {
									"_allocator": "The address to check if it is a valid allocator for the strategy."
								},
								"returns": {
									"_0": "'true' if the address is a valid allocator, 'false' otherwise"
								}
							},
							"registerRecipient(bytes,address)": {
								"details": "Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.",
								"params": {
									"_data": "The data to use to register the recipient",
									"_sender": "The address of the sender"
								},
								"returns": {
									"recipientId": "The recipientId"
								}
							}
						},
						"title": "BaseStrategy Contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"NATIVE()": "a0cf0aea",
							"allocate(bytes,address)": "ef2920fc",
							"distribute(address[],bytes,address)": "0a6f0ee9",
							"getAllo()": "15cc481e",
							"getPayouts(address[],bytes[])": "b2b878d0",
							"getPoolAmount()": "4ab4ba42",
							"getPoolId()": "38fff2d0",
							"getRecipientStatus(address)": "eb11af93",
							"getStrategyId()": "42fda9c7",
							"increasePoolAmount(uint256)": "f5b0dfb7",
							"initialize(uint256,bytes)": "edd146cc",
							"isPoolActive()": "df868ed3",
							"isValidAllocator(address)": "4d31d087",
							"registerRecipient(bytes,address)": "2bbe0cae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ALLOCATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ENDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALREADY_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AMOUNT_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ANCHOR_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ARRAY_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_FEE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_METADATA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_REGISTRATION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IS_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NONCE_NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NON_ZERO_VALUE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_IMPLEMENTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PENDING_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_INACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_ALREADY_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"name\":\"RECIPIENT_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_NOT_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Allocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllo\",\"outputs\":[{\"internalType\":\"contract IAllo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"getPayouts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategy.PayoutSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientId\",\"type\":\"address\"}],\"name\":\"getRecipientStatus\",\"outputs\":[{\"internalType\":\"enum IStrategy.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increasePoolAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"isValidAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"details\":\"This contract is implemented by all strategies.\",\"errors\":{\"ANCHOR_ERROR()\":[{\"details\":\"Thrown if the anchor creation fails\"}],\"NONCE_NOT_AVAILABLE()\":[{\"details\":\"Thrown when the nonce passed has been used or not available\"}],\"NOT_PENDING_OWNER()\":[{\"details\":\"Thrown when the 'msg.sender' is not the pending owner on ownership transfer\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"params\":{\"amount\":\"The amount allocated\",\"recipientId\":\"The ID of the recipient\",\"token\":\"The token allocated\"}},\"Distributed(address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount distributed\",\"recipientAddress\":\"The recipient\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}},\"Initialized(uint256,bytes)\":{\"params\":{\"data\":\"The data passed to the 'initialize' function\",\"poolId\":\"The ID of the pool\"}},\"PoolActive(bool)\":{\"params\":{\"active\":\"The status of the pool\"}},\"Registered(address,bytes,address)\":{\"params\":{\"data\":\"The data passed to the 'registerRecipient' function\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}}},\"kind\":\"dev\",\"methods\":{\"allocate(bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to allocate to the recipient\",\"_sender\":\"The address of the sender\"}},\"constructor\":{\"params\":{\"_allo\":\"Address of the Allo contract.\",\"_name\":\"Name of the strategy\"}},\"distribute(address[],bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to distribute to the recipients\",\"_recipientIds\":\"The IDs of the recipients\",\"_sender\":\"The address of the sender\"}},\"getAllo()\":{\"returns\":{\"_0\":\"The Allo contract\"}},\"getPayouts(address[],bytes[])\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation.\",\"params\":{\"_data\":\"The data to use to get the payout summary for the recipients\",\"_recipientIds\":\"The IDs of the recipients\"},\"returns\":{\"_0\":\"The payout summary for the recipients\"}},\"getPoolAmount()\":{\"returns\":{\"_0\":\"The balance of the pool\"}},\"getPoolId()\":{\"returns\":{\"_0\":\"The ID of the pool\"}},\"getRecipientStatus(address)\":{\"params\":{\"_recipientId\":\"The ID of the recipient\"},\"returns\":{\"_0\":\"The status of the recipient\"}},\"getStrategyId()\":{\"returns\":{\"_0\":\"The ID of the strategy\"}},\"increasePoolAmount(uint256)\":{\"details\":\"Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\",\"params\":{\"_amount\":\"The amount to increase the pool by\"}},\"initialize(uint256,bytes)\":{\"params\":{\"_data\":\"The encoded data\",\"_poolId\":\"The ID of the pool\"}},\"isPoolActive()\":{\"returns\":{\"_0\":\"'true' if the pool is active, otherwise 'false'\"}},\"isValidAllocator(address)\":{\"details\":\"How the allocator is determined is up to the strategy implementation.\",\"params\":{\"_allocator\":\"The address to check if it is a valid allocator for the strategy.\"},\"returns\":{\"_0\":\"'true' if the address is a valid allocator, 'false' otherwise\"}},\"registerRecipient(bytes,address)\":{\"details\":\"Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to register the recipient\",\"_sender\":\"The address of the sender\"},\"returns\":{\"recipientId\":\"The recipientId\"}}},\"title\":\"BaseStrategy Contract\",\"version\":1},\"userdoc\":{\"errors\":{\"ALLOCATION_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is active.\"}],\"ALLOCATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is not active.\"}],\"ALLOCATION_NOT_ENDED()\":[{\"notice\":\"Thrown when the allocation is not ended.\"}],\"ALREADY_INITIALIZED()\":[{\"notice\":\"Thrown when data is already intialized\"}],\"AMOUNT_MISMATCH()\":[{\"notice\":\"Thrown when the amount of tokens sent does not match the amount of tokens expected\"}],\"ARRAY_MISMATCH()\":[{\"notice\":\"Thrown when two arrays length are not equal\"}],\"INVALID()\":[{\"notice\":\"Thrown as a general error when input / data is invalid\"}],\"INVALID_ADDRESS()\":[{\"notice\":\"Thrown when an invalid address is used\"}],\"INVALID_FEE()\":[{\"notice\":\"Thrown when the fee is below 1e18 which is the fee percentage denominator\"}],\"INVALID_METADATA()\":[{\"notice\":\"Thrown when the metadata is invalid.\"}],\"INVALID_REGISTRATION()\":[{\"notice\":\"Thrown when the registration is invalid.\"}],\"IS_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is approved and should be cloned\"}],\"MISMATCH()\":[{\"notice\":\"Thrown when mismatch in decoding data\"}],\"NON_ZERO_VALUE()\":[{\"notice\":\"Thrown when the value is non-zero\"}],\"NOT_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is not approved\"}],\"NOT_ENOUGH_FUNDS()\":[{\"notice\":\"Thrown when not enough funds are available\"}],\"NOT_IMPLEMENTED()\":[{\"notice\":\"Thrown when the function is not implemented\"}],\"NOT_INITIALIZED()\":[{\"notice\":\"Thrown when data is yet to be initialized\"}],\"POOL_ACTIVE()\":[{\"notice\":\"Thrown when a pool is already active\"}],\"POOL_INACTIVE()\":[{\"notice\":\"Thrown when a pool is inactive\"}],\"RECIPIENT_ALREADY_ACCEPTED()\":[{\"notice\":\"Thrown when recipient is already accepted.\"}],\"RECIPIENT_ERROR(address)\":[{\"notice\":\"Thrown when there is an error in recipient.\"}],\"RECIPIENT_NOT_ACCEPTED()\":[{\"notice\":\"Thrown when the recipient is not accepted.\"}],\"REGISTRATION_ACTIVE()\":[{\"notice\":\"Thrown when registration is active.\"}],\"REGISTRATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when registration is not active.\"}],\"UNAUTHORIZED()\":[{\"notice\":\"Thrown when user is not authorized\"}],\"ZERO_ADDRESS()\":[{\"notice\":\"Thrown when address is the zero address\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"notice\":\"Emitted when a recipient is allocated to.\"},\"Distributed(address,address,uint256,address)\":{\"notice\":\"Emitted when tokens are distributed.\"},\"Initialized(uint256,bytes)\":{\"notice\":\"Emitted when strategy is initialized.\"},\"PoolActive(bool)\":{\"notice\":\"Emitted when pool is set to active status.\"},\"Registered(address,bytes,address)\":{\"notice\":\"Emitted when a recipient is registered.\"}},\"kind\":\"user\",\"methods\":{\"NATIVE()\":{\"notice\":\"Address of the native token\"},\"allocate(bytes,address)\":{\"notice\":\"Allocates to a recipient.\"},\"constructor\":{\"notice\":\"Constructor to set the Allo contract and \\\"strategyId'.\"},\"distribute(address[],bytes,address)\":{\"notice\":\"Distributes funds (tokens) to recipients.\"},\"getAllo()\":{\"notice\":\"Getter for the 'Allo' contract.\"},\"getPayouts(address[],bytes[])\":{\"notice\":\"Gets the payout summary for recipients.\"},\"getPoolAmount()\":{\"notice\":\"Getter for the 'poolAmount'.\"},\"getPoolId()\":{\"notice\":\"Getter for the 'poolId'.\"},\"getRecipientStatus(address)\":{\"notice\":\"Getter for the status of a recipient.\"},\"getStrategyId()\":{\"notice\":\"Getter for the 'strategyId'.\"},\"increasePoolAmount(uint256)\":{\"notice\":\"Increases the pool amount.\"},\"initialize(uint256,bytes)\":{\"notice\":\"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize().\"},\"isPoolActive()\":{\"notice\":\"Getter for whether or not the pool is active.\"},\"isValidAllocator(address)\":{\"notice\":\"Checks if the '_allocator' is a valid allocator.\"},\"registerRecipient(bytes,address)\":{\"notice\":\"Registers a recipient.\"}},\"notice\":\"This contract is the base contract for all strategies\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":\"BaseStrategy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xb4d42b75def46f3fd1e182f5b18bde5df74822d3666580e66d34802f362b517e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a9492cb300be5f7cd8c58f54ff472b66c108827833bf1156028d8513b91e8f29\",\"dweb:/ipfs/QmccCdVZWsPhJEExajS6gANPyg2pEpD6RZwyjFNrdJM4Ek\"]},\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"lib/allo-v2/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"lib/allo-v2/contracts/core/libraries/Errors.sol\":{\"keccak256\":\"0xcb30aef5d96b6be43471657c2b2cef6bf171fddcd71dc7d6347eedd51bc7e45c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ee6edb9116e028006cd4ac70a83ff2d41b749fd508575bb7627def1f782ad27\",\"dweb:/ipfs/QmbyX2wEE74X6HRPBCGZBP9RVkMf69Aaj2cBcUaDMtTq7h\"]},\"lib/allo-v2/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x41ece5b83f50d180841f44324a883e12b3fc2005e425e4cd51944fb8d46b147f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ecd926cbce88398d6fdb1762f7b75617635ae866f8461b7fb32dd2b0a17273ce\",\"dweb:/ipfs/QmdvPsL48GbXV2hy4vDcW9XtkN7VUTDebtYihuj7ZxhaD7\"]},\"lib/allo-v2/contracts/core/libraries/Native.sol\":{\"keccak256\":\"0x5a12a5d2fb1ba09c0ca357b8ef22e65b954831563f6e6a63a08a8176608c9264\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://75e51c8b86b13955b647f49e3869a0877d1af7355fad036ecc03af98e3d29972\",\"dweb:/ipfs/QmZAGmPgsFj5pbY8eDVLNA8mjHUZtWq4V8RVNFLk8MyVr8\"]},\"lib/allo-v2/contracts/core/libraries/Transfer.sol\":{\"keccak256\":\"0x490d9748fc1232a6db5a7dac80f7acd54852d0a1f3490959f3e6a6488f704f7e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cc225511b84e9ac56b7b59339ed8ec5ce6d2a0f2b0ee8cbc2d68c48c9b8d3603\",\"dweb:/ipfs/QmYDsnUWW2NsWjBn3PuLuz9nLjbVcCyeiv6tJZG1uxSbkQ\"]},\"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":{\"keccak256\":\"0x3f1382dc6c35d50545e327e7ed6016f2bd752357d446bd698014073f0b812873\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://99500abcd617fa43f6dde49e2c7802821ceaf54a65a8055cbbf2695ecd107974\",\"dweb:/ipfs/QmUktZkWuu3GCMEijY1fqt7NMy7BzpTvEtcmpB1fuoa7zt\"]},\"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298\",\"dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1066,
								"contract": "lib/allo-v2/contracts/strategies/BaseStrategy.sol:BaseStrategy",
								"label": "poolActive",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1068,
								"contract": "lib/allo-v2/contracts/strategies/BaseStrategy.sol:BaseStrategy",
								"label": "poolId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1070,
								"contract": "lib/allo-v2/contracts/strategies/BaseStrategy.sol:BaseStrategy",
								"label": "poolAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ALLOCATION_ACTIVE()": [
								{
									"notice": "Thrown when the allocation is active."
								}
							],
							"ALLOCATION_NOT_ACTIVE()": [
								{
									"notice": "Thrown when the allocation is not active."
								}
							],
							"ALLOCATION_NOT_ENDED()": [
								{
									"notice": "Thrown when the allocation is not ended."
								}
							],
							"ALREADY_INITIALIZED()": [
								{
									"notice": "Thrown when data is already intialized"
								}
							],
							"AMOUNT_MISMATCH()": [
								{
									"notice": "Thrown when the amount of tokens sent does not match the amount of tokens expected"
								}
							],
							"ARRAY_MISMATCH()": [
								{
									"notice": "Thrown when two arrays length are not equal"
								}
							],
							"INVALID()": [
								{
									"notice": "Thrown as a general error when input / data is invalid"
								}
							],
							"INVALID_ADDRESS()": [
								{
									"notice": "Thrown when an invalid address is used"
								}
							],
							"INVALID_FEE()": [
								{
									"notice": "Thrown when the fee is below 1e18 which is the fee percentage denominator"
								}
							],
							"INVALID_METADATA()": [
								{
									"notice": "Thrown when the metadata is invalid."
								}
							],
							"INVALID_REGISTRATION()": [
								{
									"notice": "Thrown when the registration is invalid."
								}
							],
							"IS_APPROVED_STRATEGY()": [
								{
									"notice": "Thrown when the strategy is approved and should be cloned"
								}
							],
							"MISMATCH()": [
								{
									"notice": "Thrown when mismatch in decoding data"
								}
							],
							"NON_ZERO_VALUE()": [
								{
									"notice": "Thrown when the value is non-zero"
								}
							],
							"NOT_APPROVED_STRATEGY()": [
								{
									"notice": "Thrown when the strategy is not approved"
								}
							],
							"NOT_ENOUGH_FUNDS()": [
								{
									"notice": "Thrown when not enough funds are available"
								}
							],
							"NOT_IMPLEMENTED()": [
								{
									"notice": "Thrown when the function is not implemented"
								}
							],
							"NOT_INITIALIZED()": [
								{
									"notice": "Thrown when data is yet to be initialized"
								}
							],
							"POOL_ACTIVE()": [
								{
									"notice": "Thrown when a pool is already active"
								}
							],
							"POOL_INACTIVE()": [
								{
									"notice": "Thrown when a pool is inactive"
								}
							],
							"RECIPIENT_ALREADY_ACCEPTED()": [
								{
									"notice": "Thrown when recipient is already accepted."
								}
							],
							"RECIPIENT_ERROR(address)": [
								{
									"notice": "Thrown when there is an error in recipient."
								}
							],
							"RECIPIENT_NOT_ACCEPTED()": [
								{
									"notice": "Thrown when the recipient is not accepted."
								}
							],
							"REGISTRATION_ACTIVE()": [
								{
									"notice": "Thrown when registration is active."
								}
							],
							"REGISTRATION_NOT_ACTIVE()": [
								{
									"notice": "Thrown when registration is not active."
								}
							],
							"UNAUTHORIZED()": [
								{
									"notice": "Thrown when user is not authorized"
								}
							],
							"ZERO_ADDRESS()": [
								{
									"notice": "Thrown when address is the zero address"
								}
							]
						},
						"events": {
							"Allocated(address,uint256,address,address)": {
								"notice": "Emitted when a recipient is allocated to."
							},
							"Distributed(address,address,uint256,address)": {
								"notice": "Emitted when tokens are distributed."
							},
							"Initialized(uint256,bytes)": {
								"notice": "Emitted when strategy is initialized."
							},
							"PoolActive(bool)": {
								"notice": "Emitted when pool is set to active status."
							},
							"Registered(address,bytes,address)": {
								"notice": "Emitted when a recipient is registered."
							}
						},
						"kind": "user",
						"methods": {
							"NATIVE()": {
								"notice": "Address of the native token"
							},
							"allocate(bytes,address)": {
								"notice": "Allocates to a recipient."
							},
							"constructor": {
								"notice": "Constructor to set the Allo contract and \"strategyId'."
							},
							"distribute(address[],bytes,address)": {
								"notice": "Distributes funds (tokens) to recipients."
							},
							"getAllo()": {
								"notice": "Getter for the 'Allo' contract."
							},
							"getPayouts(address[],bytes[])": {
								"notice": "Gets the payout summary for recipients."
							},
							"getPoolAmount()": {
								"notice": "Getter for the 'poolAmount'."
							},
							"getPoolId()": {
								"notice": "Getter for the 'poolId'."
							},
							"getRecipientStatus(address)": {
								"notice": "Getter for the status of a recipient."
							},
							"getStrategyId()": {
								"notice": "Getter for the 'strategyId'."
							},
							"increasePoolAmount(uint256)": {
								"notice": "Increases the pool amount."
							},
							"initialize(uint256,bytes)": {
								"notice": "@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize()."
							},
							"isPoolActive()": {
								"notice": "Getter for whether or not the pool is active."
							},
							"isValidAllocator(address)": {
								"notice": "Checks if the '_allocator' is a valid allocator."
							},
							"registerRecipient(bytes,address)": {
								"notice": "Registers a recipient."
							}
						},
						"notice": "This contract is the base contract for all strategies",
						"version": 1
					}
				}
			},
			"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol": {
				"SafeTransferLib": {
					"abi": [
						{
							"inputs": [],
							"name": "ApproveFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ETHTransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromFailed",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)",
						"details": "Note: - For ETH transfers, please use `forceSafeTransferETH` for gas griefing protection. - For ERC20s, this implementation won't check that a token has code, responsibility is delegated to the caller.",
						"errors": {
							"ApproveFailed()": [
								{
									"details": "The ERC20 `approve` has failed."
								}
							],
							"ETHTransferFailed()": [
								{
									"details": "The ETH transfer has failed."
								}
							],
							"TransferFailed()": [
								{
									"details": "The ERC20 `transfer` has failed."
								}
							],
							"TransferFromFailed()": [
								{
									"details": "The ERC20 `transferFrom` has failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"GAS_STIPEND_NO_GRIEF": {
								"details": "Suggested gas stipend for contract receiving ETH to perform a few storage reads and writes, but low enough to prevent griefing. Multiply by a small constant (e.g. 2), if needed."
							},
							"GAS_STIPEND_NO_STORAGE_WRITES": {
								"details": "Suggested gas stipend for contract receiving ETH that disallows any storage writes."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":596:19023  library SafeTransferLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":596:19023  library SafeTransferLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212205c47ab2e52b410f203972428ead7f77e083bd8c50be9f864a4d1082ff0531e1d64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205c47ab2e52b410f203972428ead7f77e083bd8c50be9f864a4d1082ff0531e1d64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TLOAD SELFBALANCE 0xAB 0x2E MSTORE 0xB4 LT CALLCODE SUB SWAP8 0x24 0x28 0xEA 0xD7 0xF7 PUSH31 0x83BD8C50BE9F864A4D1082FF0531E1D64736F6C634300081B003300000000 ",
							"sourceMap": "596:18427:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205c47ab2e52b410f203972428ead7f77e083bd8c50be9f864a4d1082ff0531e1d64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TLOAD SELFBALANCE 0xAB 0x2E MSTORE 0xB4 LT CALLCODE SUB SWAP8 0x24 0x28 0xEA 0xD7 0xF7 PUSH31 0x83BD8C50BE9F864A4D1082FF0531E1D64736F6C634300081B003300000000 ",
							"sourceMap": "596:18427:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"balanceOf(address,address)": "infinite",
								"forceSafeTransferETH(address,uint256)": "infinite",
								"forceSafeTransferETH(address,uint256,uint256)": "infinite",
								"safeApprove(address,address,uint256)": "infinite",
								"safeApproveWithRetry(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferAll(address,address)": "infinite",
								"safeTransferAllFrom(address,address,address)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite",
								"trySafeTransferETH(address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205c47ab2e52b410f203972428ead7f77e083bd8c50be9f864a4d1082ff0531e1d64736f6c634300081b0033",
									".code": [
										{
											"begin": 596,
											"end": 19023,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"lib/allo-v2/contracts/core/interfaces/IAllo.sol",
								"lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
								"lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
								"lib/allo-v2/contracts/core/libraries/Errors.sol",
								"lib/allo-v2/contracts/core/libraries/Metadata.sol",
								"lib/allo-v2/contracts/core/libraries/Native.sol",
								"lib/allo-v2/contracts/core/libraries/Transfer.sol",
								"lib/allo-v2/contracts/strategies/BaseStrategy.sol",
								"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol",
								"src/YeeterStrategy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApproveFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromFailed\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\",\"details\":\"Note: - For ETH transfers, please use `forceSafeTransferETH` for gas griefing protection. - For ERC20s, this implementation won't check that a token has code, responsibility is delegated to the caller.\",\"errors\":{\"ApproveFailed()\":[{\"details\":\"The ERC20 `approve` has failed.\"}],\"ETHTransferFailed()\":[{\"details\":\"The ETH transfer has failed.\"}],\"TransferFailed()\":[{\"details\":\"The ERC20 `transfer` has failed.\"}],\"TransferFromFailed()\":[{\"details\":\"The ERC20 `transferFrom` has failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"GAS_STIPEND_NO_GRIEF\":{\"details\":\"Suggested gas stipend for contract receiving ETH to perform a few storage reads and writes, but low enough to prevent griefing. Multiply by a small constant (e.g. 2), if needed.\"},\"GAS_STIPEND_NO_STORAGE_WRITES\":{\"details\":\"Suggested gas stipend for contract receiving ETH that disallows any storage writes.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Safe ETH and ERC20 transfer library that gracefully handles missing return values.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":\"SafeTransferLib\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298\",\"dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Safe ETH and ERC20 transfer library that gracefully handles missing return values.",
						"version": 1
					}
				}
			},
			"src/YeeterStrategy.sol": {
				"YeeterStrategy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_allo",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ALLOCATION_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALLOCATION_NOT_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALLOCATION_NOT_ENDED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALREADY_INITIALIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AMOUNT_MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ANCHOR_ERROR",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ARRAY_MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INPUT_LENGTH_MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_FEE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_METADATA",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_REGISTRATION",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IS_APPROVED_STRATEGY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NONCE_NOT_AVAILABLE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NON_ZERO_VALUE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOOP",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_APPROVED_STRATEGY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_ENOUGH_FUNDS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_IMPLEMENTED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_INITIALIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_PENDING_OWNER",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "POOL_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "POOL_INACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RECIPIENT_ALREADY_ACCEPTED",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								}
							],
							"name": "RECIPIENT_ERROR",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RECIPIENT_NOT_ACCEPTED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "REGISTRATION_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "REGISTRATION_NOT_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UNAUTHORIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZERO_ADDRESS",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Allocated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipientAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Distributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"name": "PoolActive",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Registered",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "NATIVE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllo",
							"outputs": [
								{
									"internalType": "contract IAllo",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_data",
									"type": "bytes[]"
								}
							],
							"name": "getPayouts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "recipientAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IStrategy.PayoutSummary[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipientId",
									"type": "address"
								}
							],
							"name": "getRecipientStatus",
							"outputs": [
								{
									"internalType": "enum IStrategy.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStrategyId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "increasePoolAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPoolActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_allocator",
									"type": "address"
								}
							],
							"name": "isValidAllocator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "registerRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ANCHOR_ERROR()": [
								{
									"details": "Thrown if the anchor creation fails"
								}
							],
							"NONCE_NOT_AVAILABLE()": [
								{
									"details": "Thrown when the nonce passed has been used or not available"
								}
							],
							"NOT_PENDING_OWNER()": [
								{
									"details": "Thrown when the 'msg.sender' is not the pending owner on ownership transfer"
								}
							]
						},
						"events": {
							"Allocated(address,uint256,address,address)": {
								"params": {
									"amount": "The amount allocated",
									"recipientId": "The ID of the recipient",
									"token": "The token allocated"
								}
							},
							"Distributed(address,address,uint256,address)": {
								"params": {
									"amount": "The amount distributed",
									"recipientAddress": "The recipient",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							},
							"Initialized(uint256,bytes)": {
								"params": {
									"data": "The data passed to the 'initialize' function",
									"poolId": "The ID of the pool"
								}
							},
							"PoolActive(bool)": {
								"params": {
									"active": "The status of the pool"
								}
							},
							"Registered(address,bytes,address)": {
								"params": {
									"data": "The data passed to the 'registerRecipient' function",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allocate(bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
								"params": {
									"_data": "The data to use to allocate to the recipient",
									"_sender": "The address of the sender"
								}
							},
							"distribute(address[],bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
								"params": {
									"_data": "The data to use to distribute to the recipients",
									"_recipientIds": "The IDs of the recipients",
									"_sender": "The address of the sender"
								}
							},
							"getAllo()": {
								"returns": {
									"_0": "The Allo contract"
								}
							},
							"getPayouts(address[],bytes[])": {
								"details": "The encoded '_data' will be determined by the strategy implementation.",
								"params": {
									"_data": "The data to use to get the payout summary for the recipients",
									"_recipientIds": "The IDs of the recipients"
								},
								"returns": {
									"_0": "The payout summary for the recipients"
								}
							},
							"getPoolAmount()": {
								"returns": {
									"_0": "The balance of the pool"
								}
							},
							"getPoolId()": {
								"returns": {
									"_0": "The ID of the pool"
								}
							},
							"getRecipientStatus(address)": {
								"params": {
									"_recipientId": "The ID of the recipient"
								},
								"returns": {
									"_0": "The status of the recipient"
								}
							},
							"getStrategyId()": {
								"returns": {
									"_0": "The ID of the strategy"
								}
							},
							"increasePoolAmount(uint256)": {
								"details": "Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.",
								"params": {
									"_amount": "The amount to increase the pool by"
								}
							},
							"initialize(uint256,bytes)": {
								"params": {
									"_data": "The encoded data",
									"_poolId": "The ID of the pool"
								}
							},
							"isPoolActive()": {
								"returns": {
									"_0": "'true' if the pool is active, otherwise 'false'"
								}
							},
							"isValidAllocator(address)": {
								"details": "How the allocator is determined is up to the strategy implementation.",
								"params": {
									"_allocator": "The address to check if it is a valid allocator for the strategy."
								},
								"returns": {
									"_0": "'true' if the address is a valid allocator, 'false' otherwise"
								}
							},
							"registerRecipient(bytes,address)": {
								"details": "Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.",
								"params": {
									"_data": "The data to use to register the recipient",
									"_sender": "The address of the sender"
								},
								"returns": {
									"recipientId": "The recipientId"
								}
							},
							"withdraw(address,address,uint256)": {
								"params": {
									"_amount": "Amount to withdraw",
									"_recipient": "Address to send the funds to",
									"_token": "Token address"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/YeeterStrategy.sol\":421:3028  contract YeeterStrategy is BaseStrategy {... */\n  mstore(0x40, 0xc0)\n    /* \"src/YeeterStrategy.sol\":521:598  constructor(address _allo, string memory _name) BaseStrategy(_allo, _name) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/YeeterStrategy.sol\":582:587  _allo */\n  dup2\n    /* \"src/YeeterStrategy.sol\":589:594  _name */\n  dup2\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5281:5286  _allo */\n  dup2\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5268:5287  allo = IAllo(_allo) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5331:5336  _name */\n  dup1\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5320:5337  abi.encode(_name) */\n  add(0x20, mload(0x40))\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5310:5338  keccak256(abi.encode(_name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5297:5338  strategyId = keccak256(abi.encode(_name)) */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5210:5345  constructor(address _allo, string memory _name) {... */\n  pop\n  pop\n    /* \"src/YeeterStrategy.sol\":521:598  constructor(address _allo, string memory _name) BaseStrategy(_allo, _name) {} */\n  pop\n  pop\n    /* \"src/YeeterStrategy.sol\":421:3028  contract YeeterStrategy is BaseStrategy {... */\n  jump(tag_10)\n    /* \"#utility.yul\":7:82   */\ntag_11:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_12:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_13:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_14:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_15:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_37\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_14\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_16:\n    /* \"#utility.yul\":641:665   */\n  tag_39\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_15\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_40:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_17:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_42\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_18:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  0x00\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_19:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  0x00\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_20:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_21:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_22:\n    /* \"#utility.yul\":1468:1495   */\n  tag_48\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_20\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_50\n  tag_21\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1541:1629   */\ntag_49:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_23:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_52\n  tag_11\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_53\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_22\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2115   */\ntag_24:\n    /* \"#utility.yul\":1869:1873   */\n  0x00\n    /* \"#utility.yul\":1959:1977   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1951:1957   */\n  dup3\n    /* \"#utility.yul\":1948:1978   */\n  gt\n    /* \"#utility.yul\":1945:2001   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1981:1999   */\n  tag_56\n  tag_21\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1945:2001   */\ntag_55:\n    /* \"#utility.yul\":2019:2048   */\n  tag_57\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2019:2048   */\n  tag_20\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2011:2048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2097:2101   */\n  dup2\n    /* \"#utility.yul\":2093:2108   */\n  add\n    /* \"#utility.yul\":2085:2108   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2115   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2121:2260   */\ntag_25:\n    /* \"#utility.yul\":2210:2216   */\n  dup3\n    /* \"#utility.yul\":2205:2208   */\n  dup2\n    /* \"#utility.yul\":2200:2203   */\n  dup4\n    /* \"#utility.yul\":2194:2217   */\n  mcopy\n    /* \"#utility.yul\":2251:2252   */\n  0x00\n    /* \"#utility.yul\":2242:2248   */\n  dup4\n    /* \"#utility.yul\":2237:2240   */\n  dup4\n    /* \"#utility.yul\":2233:2249   */\n  add\n    /* \"#utility.yul\":2226:2253   */\n  mstore\n    /* \"#utility.yul\":2121:2260   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2266:2700   */\ntag_26:\n    /* \"#utility.yul\":2355:2360   */\n  0x00\n    /* \"#utility.yul\":2380:2446   */\n  tag_60\n    /* \"#utility.yul\":2396:2445   */\n  tag_61\n    /* \"#utility.yul\":2438:2444   */\n  dup5\n    /* \"#utility.yul\":2396:2445   */\n  tag_24\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2380:2446   */\n  tag_23\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2371:2446   */\n  swap1\n  pop\n    /* \"#utility.yul\":2469:2475   */\n  dup3\n    /* \"#utility.yul\":2462:2467   */\n  dup2\n    /* \"#utility.yul\":2455:2476   */\n  mstore\n    /* \"#utility.yul\":2507:2511   */\n  0x20\n    /* \"#utility.yul\":2500:2505   */\n  dup2\n    /* \"#utility.yul\":2496:2512   */\n  add\n    /* \"#utility.yul\":2545:2548   */\n  dup5\n    /* \"#utility.yul\":2536:2542   */\n  dup5\n    /* \"#utility.yul\":2531:2534   */\n  dup5\n    /* \"#utility.yul\":2527:2543   */\n  add\n    /* \"#utility.yul\":2524:2549   */\n  gt\n    /* \"#utility.yul\":2521:2633   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2552:2631   */\n  tag_63\n  tag_19\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2521:2633   */\ntag_62:\n    /* \"#utility.yul\":2642:2694   */\n  tag_64\n    /* \"#utility.yul\":2687:2693   */\n  dup5\n    /* \"#utility.yul\":2682:2685   */\n  dup3\n    /* \"#utility.yul\":2677:2680   */\n  dup6\n    /* \"#utility.yul\":2642:2694   */\n  tag_25\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2361:2700   */\n  pop\n    /* \"#utility.yul\":2266:2700   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2720:3075   */\ntag_27:\n    /* \"#utility.yul\":2787:2792   */\n  0x00\n    /* \"#utility.yul\":2836:2839   */\n  dup3\n    /* \"#utility.yul\":2829:2833   */\n  0x1f\n    /* \"#utility.yul\":2821:2827   */\n  dup4\n    /* \"#utility.yul\":2817:2834   */\n  add\n    /* \"#utility.yul\":2813:2840   */\n  slt\n    /* \"#utility.yul\":2803:2925   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2844:2923   */\n  tag_67\n  tag_18\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2803:2925   */\ntag_66:\n    /* \"#utility.yul\":2954:2960   */\n  dup2\n    /* \"#utility.yul\":2948:2961   */\n  mload\n    /* \"#utility.yul\":2979:3069   */\n  tag_68\n    /* \"#utility.yul\":3065:3068   */\n  dup5\n    /* \"#utility.yul\":3057:3063   */\n  dup3\n    /* \"#utility.yul\":3050:3054   */\n  0x20\n    /* \"#utility.yul\":3042:3048   */\n  dup7\n    /* \"#utility.yul\":3038:3055   */\n  add\n    /* \"#utility.yul\":2979:3069   */\n  tag_26\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2970:3069   */\n  swap2\n  pop\n    /* \"#utility.yul\":2793:3075   */\n  pop\n    /* \"#utility.yul\":2720:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:3761   */\ntag_3:\n    /* \"#utility.yul\":3170:3176   */\n  0x00\n    /* \"#utility.yul\":3178:3184   */\n  0x00\n    /* \"#utility.yul\":3227:3229   */\n  0x40\n    /* \"#utility.yul\":3215:3224   */\n  dup4\n    /* \"#utility.yul\":3206:3213   */\n  dup6\n    /* \"#utility.yul\":3202:3225   */\n  sub\n    /* \"#utility.yul\":3198:3230   */\n  slt\n    /* \"#utility.yul\":3195:3314   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3233:3312   */\n  tag_71\n  tag_12\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3195:3314   */\ntag_70:\n    /* \"#utility.yul\":3353:3354   */\n  0x00\n    /* \"#utility.yul\":3378:3442   */\n  tag_72\n    /* \"#utility.yul\":3434:3441   */\n  dup6\n    /* \"#utility.yul\":3425:3431   */\n  dup3\n    /* \"#utility.yul\":3414:3423   */\n  dup7\n    /* \"#utility.yul\":3410:3432   */\n  add\n    /* \"#utility.yul\":3378:3442   */\n  tag_17\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3368:3442   */\n  swap3\n  pop\n    /* \"#utility.yul\":3324:3452   */\n  pop\n    /* \"#utility.yul\":3512:3514   */\n  0x20\n    /* \"#utility.yul\":3501:3510   */\n  dup4\n    /* \"#utility.yul\":3497:3515   */\n  add\n    /* \"#utility.yul\":3491:3516   */\n  mload\n    /* \"#utility.yul\":3543:3561   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3535:3541   */\n  dup2\n    /* \"#utility.yul\":3532:3562   */\n  gt\n    /* \"#utility.yul\":3529:3646   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":3565:3644   */\n  tag_74\n  tag_13\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3529:3646   */\ntag_73:\n    /* \"#utility.yul\":3670:3744   */\n  tag_75\n    /* \"#utility.yul\":3736:3743   */\n  dup6\n    /* \"#utility.yul\":3727:3733   */\n  dup3\n    /* \"#utility.yul\":3716:3725   */\n  dup7\n    /* \"#utility.yul\":3712:3734   */\n  add\n    /* \"#utility.yul\":3670:3744   */\n  tag_27\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3660:3744   */\n  swap2\n  pop\n    /* \"#utility.yul\":3462:3754   */\n  pop\n    /* \"#utility.yul\":3081:3761   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3767:3866   */\ntag_28:\n    /* \"#utility.yul\":3819:3825   */\n  0x00\n    /* \"#utility.yul\":3853:3858   */\n  dup2\n    /* \"#utility.yul\":3847:3859   */\n  mload\n    /* \"#utility.yul\":3837:3859   */\n  swap1\n  pop\n    /* \"#utility.yul\":3767:3866   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3872:4041   */\ntag_29:\n    /* \"#utility.yul\":3956:3967   */\n  0x00\n    /* \"#utility.yul\":3990:3996   */\n  dup3\n    /* \"#utility.yul\":3985:3988   */\n  dup3\n    /* \"#utility.yul\":3978:3997   */\n  mstore\n    /* \"#utility.yul\":4030:4034   */\n  0x20\n    /* \"#utility.yul\":4025:4028   */\n  dup3\n    /* \"#utility.yul\":4021:4035   */\n  add\n    /* \"#utility.yul\":4006:4035   */\n  swap1\n  pop\n    /* \"#utility.yul\":3872:4041   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4047:4424   */\ntag_30:\n    /* \"#utility.yul\":4135:4138   */\n  0x00\n    /* \"#utility.yul\":4163:4202   */\n  tag_79\n    /* \"#utility.yul\":4196:4201   */\n  dup3\n    /* \"#utility.yul\":4163:4202   */\n  tag_28\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4218:4289   */\n  tag_80\n    /* \"#utility.yul\":4282:4288   */\n  dup2\n    /* \"#utility.yul\":4277:4280   */\n  dup6\n    /* \"#utility.yul\":4218:4289   */\n  tag_29\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4211:4289   */\n  swap4\n  pop\n    /* \"#utility.yul\":4298:4363   */\n  tag_81\n    /* \"#utility.yul\":4356:4362   */\n  dup2\n    /* \"#utility.yul\":4351:4354   */\n  dup6\n    /* \"#utility.yul\":4344:4348   */\n  0x20\n    /* \"#utility.yul\":4337:4342   */\n  dup7\n    /* \"#utility.yul\":4333:4349   */\n  add\n    /* \"#utility.yul\":4298:4363   */\n  tag_25\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4388:4417   */\n  tag_82\n    /* \"#utility.yul\":4410:4416   */\n  dup2\n    /* \"#utility.yul\":4388:4417   */\n  tag_20\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4383:4386   */\n  dup5\n    /* \"#utility.yul\":4379:4418   */\n  add\n    /* \"#utility.yul\":4372:4418   */\n  swap2\n  pop\n    /* \"#utility.yul\":4139:4424   */\n  pop\n    /* \"#utility.yul\":4047:4424   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4430:4743   */\ntag_8:\n    /* \"#utility.yul\":4543:4547   */\n  0x00\n    /* \"#utility.yul\":4581:4583   */\n  0x20\n    /* \"#utility.yul\":4570:4579   */\n  dup3\n    /* \"#utility.yul\":4566:4584   */\n  add\n    /* \"#utility.yul\":4558:4584   */\n  swap1\n  pop\n    /* \"#utility.yul\":4630:4639   */\n  dup2\n    /* \"#utility.yul\":4624:4628   */\n  dup2\n    /* \"#utility.yul\":4620:4640   */\n  sub\n    /* \"#utility.yul\":4616:4617   */\n  0x00\n    /* \"#utility.yul\":4605:4614   */\n  dup4\n    /* \"#utility.yul\":4601:4618   */\n  add\n    /* \"#utility.yul\":4594:4641   */\n  mstore\n    /* \"#utility.yul\":4658:4736   */\n  tag_84\n    /* \"#utility.yul\":4731:4735   */\n  dup2\n    /* \"#utility.yul\":4722:4728   */\n  dup5\n    /* \"#utility.yul\":4658:4736   */\n  tag_30\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4650:4736   */\n  swap1\n  pop\n    /* \"#utility.yul\":4430:4743   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/YeeterStrategy.sol\":421:3028  contract YeeterStrategy is BaseStrategy {... */\ntag_10:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x219fe5d1c18f2cbf388f9e850fcdf2097051cb75bfacbd7a8efd0178bdf8d594\")\n  0x00\n  assignImmutable(\"0x0d36db49541e48e0baaf49e5cf80258467a29ecf7146772ef8777fb68b49f82b\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/YeeterStrategy.sol\":421:3028  contract YeeterStrategy is BaseStrategy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa0cf0aea\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xeb11af93\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xeb11af93\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xedd146cc\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xef2920fc\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf5b0dfb7\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0xa0cf0aea\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb2b878d0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd9caed12\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdf868ed3\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x38fff2d0\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x38fff2d0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x42fda9c7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4ab4ba42\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4d31d087\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x0a6f0ee9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x15cc481e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2bbe0cae\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10705:11030  function distribute(address[] memory _recipientIds, bytes memory _data, address _sender)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      revert(0x00, 0x00)\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6785:6871  function getAllo() external view override returns (IAllo) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9429:9773  function registerRecipient(bytes memory _data, address _sender)... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6953:7045  function getPoolId() external view override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7135:7235  function getStrategyId() external view override returns (bytes32) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      revert(0x00, 0x00)\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7326:7434  function getPoolAmount() external view virtual override returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      revert(0x00, 0x00)\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12395:12540  function isValidAllocator(address _allocator) external view virtual override returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      revert(0x00, 0x00)\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4413:4488  address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      revert(0x00, 0x00)\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11367:12071  function getPayouts(address[] memory _recipientIds, bytes[] memory _data)... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      revert(0x00, 0x00)\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/YeeterStrategy.sol\":962:1131  function withdraw(address _token, address _recipient, uint256 _amount) external onlyPoolManager(msg.sender) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      revert(0x00, 0x00)\n    tag_71:\n      pop\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7566:7667  function isPoolActive() external view override returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      revert(0x00, 0x00)\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7823:7969  function getRecipientStatus(address _recipientId) external view virtual returns (Status) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      revert(0x00, 0x00)\n    tag_80:\n      pop\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/YeeterStrategy.sol\":604:774  function initialize(uint256 _poolId, bytes memory _data) external virtual override {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      revert(0x00, 0x00)\n    tag_86:\n      pop\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n    tag_87:\n      stop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10092:10312  function allocate(bytes memory _data, address _sender) external payable onlyAllo onlyInitialized {... */\n    tag_16:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8816:9013  function increasePoolAmount(uint256 _amount) external override onlyAllo {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      revert(0x00, 0x00)\n    tag_94:\n      pop\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      stop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10705:11030  function distribute(address[] memory _recipientIds, bytes memory _data, address _sender)... */\n    tag_27:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      tag_100\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5674  _checkOnlyAllo */\n      tag_101\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      jump\t// in\n    tag_100:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6555  _checkOnlyInitialized() */\n      tag_103\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6553  _checkOnlyInitialized */\n      tag_104\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6555  _checkOnlyInitialized() */\n      jump\t// in\n    tag_103:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10866:10914  _beforeDistribute(_recipientIds, _data, _sender) */\n      tag_106\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10884:10897  _recipientIds */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10899:10904  _data */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10906:10913  _sender */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10866:10883  _beforeDistribute */\n      tag_107\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10866:10914  _beforeDistribute(_recipientIds, _data, _sender) */\n      jump\t// in\n    tag_106:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10924:10966  _distribute(_recipientIds, _data, _sender) */\n      tag_108\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10936:10949  _recipientIds */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10951:10956  _data */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10958:10965  _sender */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10924:10935  _distribute */\n      tag_109\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10924:10966  _distribute(_recipientIds, _data, _sender) */\n      jump\t// in\n    tag_108:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10976:11023  _afterDistribute(_recipientIds, _data, _sender) */\n      tag_110\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10993:11006  _recipientIds */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11008:11013  _data */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11015:11022  _sender */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10976:10992  _afterDistribute */\n      tag_111\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10976:11023  _afterDistribute(_recipientIds, _data, _sender) */\n      jump\t// in\n    tag_110:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10705:11030  function distribute(address[] memory _recipientIds, bytes memory _data, address _sender)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6785:6871  function getAllo() external view override returns (IAllo) {... */\n    tag_30:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6836:6841  IAllo */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6860:6864  allo */\n      immutable(\"0x0d36db49541e48e0baaf49e5cf80258467a29ecf7146772ef8777fb68b49f82b\")\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6853:6864  return allo */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6785:6871  function getAllo() external view override returns (IAllo) {... */\n      swap1\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9429:9773  function registerRecipient(bytes memory _data, address _sender)... */\n    tag_36:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9584:9603  address recipientId */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      tag_114\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5674  _checkOnlyAllo */\n      tag_101\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      jump\t// in\n    tag_114:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6555  _checkOnlyInitialized() */\n      tag_116\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6553  _checkOnlyInitialized */\n      tag_104\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6555  _checkOnlyInitialized() */\n      jump\t// in\n    tag_116:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9619:9659  _beforeRegisterRecipient(_data, _sender) */\n      tag_118\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9644:9649  _data */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9651:9658  _sender */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9619:9643  _beforeRegisterRecipient */\n      tag_119\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9619:9659  _beforeRegisterRecipient(_data, _sender) */\n      jump\t// in\n    tag_118:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9683:9717  _registerRecipient(_data, _sender) */\n      tag_120\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9702:9707  _data */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9709:9716  _sender */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9683:9701  _registerRecipient */\n      tag_121\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9683:9717  _registerRecipient(_data, _sender) */\n      jump\t// in\n    tag_120:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9669:9717  recipientId = _registerRecipient(_data, _sender) */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9727:9766  _afterRegisterRecipient(_data, _sender) */\n      tag_122\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9751:9756  _data */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9758:9765  _sender */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9727:9750  _afterRegisterRecipient */\n      tag_123\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9727:9766  _afterRegisterRecipient(_data, _sender) */\n      jump\t// in\n    tag_122:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9429:9773  function registerRecipient(bytes memory _data, address _sender)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6953:7045  function getPoolId() external view override returns (uint256) {... */\n    tag_41:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7006:7013  uint256 */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7032:7038  poolId */\n      sload(0x01)\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7025:7038  return poolId */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6953:7045  function getPoolId() external view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7135:7235  function getStrategyId() external view override returns (bytes32) {... */\n    tag_46:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7192:7199  bytes32 */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7218:7228  strategyId */\n      immutable(\"0x219fe5d1c18f2cbf388f9e850fcdf2097051cb75bfacbd7a8efd0178bdf8d594\")\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7211:7228  return strategyId */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7135:7235  function getStrategyId() external view override returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7326:7434  function getPoolAmount() external view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7391:7398  uint256 */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7417:7427  poolAmount */\n      sload(0x02)\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7410:7427  return poolAmount */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7326:7434  function getPoolAmount() external view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12395:12540  function isValidAllocator(address _allocator) external view virtual override returns (bool) {... */\n    tag_57:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12481:12485  bool */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12504:12533  _isValidAllocator(_allocator) */\n      tag_128\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12522:12532  _allocator */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12504:12521  _isValidAllocator */\n      tag_129\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12504:12533  _isValidAllocator(_allocator) */\n      jump\t// in\n    tag_128:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12497:12533  return _isValidAllocator(_allocator) */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12395:12540  function isValidAllocator(address _allocator) external view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4413:4488  address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n    tag_62:\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4446:4488  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4413:4488  address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      dup2\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11367:12071  function getPayouts(address[] memory _recipientIds, bytes[] memory _data)... */\n    tag_68:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11521:11543  PayoutSummary[] memory */\n      0x60\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11559:11582  uint256 recipientLength */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11585:11598  _recipientIds */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11585:11605  _recipientIds.length */\n      mload\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11559:11605  uint256 recipientLength = _recipientIds.length */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11741:11746  _data */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11741:11753  _data.length */\n      mload\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11722:11737  recipientLength */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11722:11753  recipientLength != _data.length */\n      eq\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11718:11778  if (recipientLength != _data.length) revert ARRAY_MISMATCH() */\n      tag_131\n      jumpi\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11762:11778  ARRAY_MISMATCH() */\n      mload(0x40)\n      0x7b49805600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11718:11778  if (recipientLength != _data.length) revert ARRAY_MISMATCH() */\n    tag_131:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11789:11819  PayoutSummary[] memory payouts */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11842:11857  recipientLength */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11822:11858  new PayoutSummary[](recipientLength) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_132\n      jumpi\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n    tag_132:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup2\n      0x20\n      add\n    tag_136:\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_136\n      jumpi\n      swap1\n      pop\n    tag_135:\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11789:11858  PayoutSummary[] memory payouts = new PayoutSummary[](recipientLength) */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11873:11882  uint256 i */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11868:12041  for (uint256 i; i < recipientLength;) {... */\n    tag_139:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11888:11903  recipientLength */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11884:11885  i */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11884:11903  i < recipientLength */\n      lt\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11868:12041  for (uint256 i; i < recipientLength;) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11933:11971  _getPayout(_recipientIds[i], _data[i]) */\n      tag_142\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11944:11957  _recipientIds */\n      dup7\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11958:11959  i */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11944:11960  _recipientIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_143\n      jumpi\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n    tag_143:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11962:11967  _data */\n      dup7\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11968:11969  i */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11962:11970  _data[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_146\n      jumpi\n      tag_147\n      tag_145\n      jump\t// in\n    tag_147:\n    tag_146:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11933:11943  _getPayout */\n      tag_148\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11933:11971  _getPayout(_recipientIds[i], _data[i]) */\n      jump\t// in\n    tag_142:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11920:11927  payouts */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11928:11929  i */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11920:11930  payouts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_149\n      jumpi\n      tag_150\n      tag_145\n      jump\t// in\n    tag_150:\n    tag_149:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11920:11971  payouts[i] = _getPayout(_recipientIds[i], _data[i]) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12013:12016  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11868:12041  for (uint256 i; i < recipientLength;) {... */\n      jump(tag_139)\n    tag_140:\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12057:12064  payouts */\n      dup1\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12050:12064  return payouts */\n      swap3\n      pop\n      pop\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11367:12071  function getPayouts(address[] memory _recipientIds, bytes[] memory _data)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":962:1131  function withdraw(address _token, address _recipient, uint256 _amount) external onlyPoolManager(msg.sender) {... */\n    tag_75:\n        /* \"src/YeeterStrategy.sol\":1058:1068  msg.sender */\n      caller\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5984  _checkOnlyPoolManager(_sender) */\n      tag_152\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5976:5983  _sender */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5975  _checkOnlyPoolManager */\n      tag_153\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5984  _checkOnlyPoolManager(_sender) */\n      jump\t// in\n    tag_152:\n        /* \"src/YeeterStrategy.sol\":1080:1124  _transferAmount(_token, _recipient, _amount) */\n      tag_155\n        /* \"src/YeeterStrategy.sol\":1096:1102  _token */\n      dup5\n        /* \"src/YeeterStrategy.sol\":1104:1114  _recipient */\n      dup5\n        /* \"src/YeeterStrategy.sol\":1116:1123  _amount */\n      dup5\n        /* \"src/YeeterStrategy.sol\":1080:1095  _transferAmount */\n      tag_156\n        /* \"src/YeeterStrategy.sol\":1080:1124  _transferAmount(_token, _recipient, _amount) */\n      jump\t// in\n    tag_155:\n        /* \"src/YeeterStrategy.sol\":962:1131  function withdraw(address _token, address _recipient, uint256 _amount) external onlyPoolManager(msg.sender) {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7566:7667  function isPoolActive() external view override returns (bool) {... */\n    tag_78:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7622:7626  bool */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7645:7660  _isPoolActive() */\n      tag_158\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7645:7658  _isPoolActive */\n      tag_159\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7645:7660  _isPoolActive() */\n      jump\t// in\n    tag_158:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7638:7660  return _isPoolActive() */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7566:7667  function isPoolActive() external view override returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7823:7969  function getRecipientStatus(address _recipientId) external view virtual returns (Status) {... */\n    tag_83:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7904:7910  Status */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7929:7962  _getRecipientStatus(_recipientId) */\n      tag_161\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7949:7961  _recipientId */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7929:7948  _getRecipientStatus */\n      tag_162\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7929:7962  _getRecipientStatus(_recipientId) */\n      jump\t// in\n    tag_161:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7922:7962  return _getRecipientStatus(_recipientId) */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7823:7969  function getRecipientStatus(address _recipientId) external view virtual returns (Status) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":604:774  function initialize(uint256 _poolId, bytes memory _data) external virtual override {... */\n    tag_90:\n        /* \"src/YeeterStrategy.sol\":697:725  __BaseStrategy_init(_poolId) */\n      tag_164\n        /* \"src/YeeterStrategy.sol\":717:724  _poolId */\n      dup3\n        /* \"src/YeeterStrategy.sol\":697:716  __BaseStrategy_init */\n      tag_165\n        /* \"src/YeeterStrategy.sol\":697:725  __BaseStrategy_init(_poolId) */\n      jump\t// in\n    tag_164:\n        /* \"src/YeeterStrategy.sol\":740:767  Initialized(_poolId, _data) */\n      0x91efa3d50feccde0d0d202f8ae5c41ca0b2be614cebcb2bd2f4b019396e6568a\n        /* \"src/YeeterStrategy.sol\":752:759  _poolId */\n      dup3\n        /* \"src/YeeterStrategy.sol\":761:766  _data */\n      dup3\n        /* \"src/YeeterStrategy.sol\":740:767  Initialized(_poolId, _data) */\n      mload(0x40)\n      tag_166\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/YeeterStrategy.sol\":604:774  function initialize(uint256 _poolId, bytes memory _data) external virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10092:10312  function allocate(bytes memory _data, address _sender) external payable onlyAllo onlyInitialized {... */\n    tag_93:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      tag_169\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5674  _checkOnlyAllo */\n      tag_101\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      jump\t// in\n    tag_169:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6555  _checkOnlyInitialized() */\n      tag_171\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6553  _checkOnlyInitialized */\n      tag_104\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6555  _checkOnlyInitialized() */\n      jump\t// in\n    tag_171:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10199:10230  _beforeAllocate(_data, _sender) */\n      tag_173\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10215:10220  _data */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10222:10229  _sender */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10199:10214  _beforeAllocate */\n      tag_174\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10199:10230  _beforeAllocate(_data, _sender) */\n      jump\t// in\n    tag_173:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10240:10265  _allocate(_data, _sender) */\n      tag_175\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10250:10255  _data */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10257:10264  _sender */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10240:10249  _allocate */\n      tag_176\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10240:10265  _allocate(_data, _sender) */\n      jump\t// in\n    tag_175:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10275:10305  _afterAllocate(_data, _sender) */\n      tag_177\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10290:10295  _data */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10297:10304  _sender */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10275:10289  _afterAllocate */\n      tag_178\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10275:10305  _afterAllocate(_data, _sender) */\n      jump\t// in\n    tag_177:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10092:10312  function allocate(bytes memory _data, address _sender) external payable onlyAllo onlyInitialized {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8816:9013  function increasePoolAmount(uint256 _amount) external override onlyAllo {... */\n    tag_98:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      tag_180\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5674  _checkOnlyAllo */\n      tag_101\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      jump\t// in\n    tag_180:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8898:8932  _beforeIncreasePoolAmount(_amount) */\n      tag_182\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8924:8931  _amount */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8898:8923  _beforeIncreasePoolAmount */\n      tag_183\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8898:8932  _beforeIncreasePoolAmount(_amount) */\n      jump\t// in\n    tag_182:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8956:8963  _amount */\n      dup1\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8942:8952  poolAmount */\n      0x02\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8942:8963  poolAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8973:9006  _afterIncreasePoolAmount(_amount) */\n      tag_186\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8998:9005  _amount */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8973:8997  _afterIncreasePoolAmount */\n      tag_187\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8973:9006  _afterIncreasePoolAmount(_amount) */\n      jump\t// in\n    tag_186:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8816:9013  function increasePoolAmount(uint256 _amount) external override onlyAllo {... */\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12814:12925  function _checkOnlyAllo() internal view {... */\n    tag_101:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12890:12894  allo */\n      immutable(\"0x0d36db49541e48e0baaf49e5cf80258467a29ecf7146772ef8777fb68b49f82b\")\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12868:12895  msg.sender != address(allo) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12868:12878  msg.sender */\n      caller\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12868:12895  msg.sender != address(allo) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12864:12918  if (msg.sender != address(allo)) revert UNAUTHORIZED() */\n      tag_189\n      jumpi\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12904:12918  UNAUTHORIZED() */\n      mload(0x40)\n      0x075fd2b100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12864:12918  if (msg.sender != address(allo)) revert UNAUTHORIZED() */\n    tag_189:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12814:12925  function _checkOnlyAllo() internal view {... */\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13771:13876  function _checkOnlyInitialized() internal view {... */\n    tag_104:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13842:13843  0 */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13832:13838  poolId */\n      sload(0x01)\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13832:13843  poolId == 0 */\n      sub\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13828:13869  if (poolId == 0) revert NOT_INITIALIZED() */\n      tag_191\n      jumpi\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13852:13869  NOT_INITIALIZED() */\n      mload(0x40)\n      0x3da3f98c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13828:13869  if (poolId == 0) revert NOT_INITIALIZED() */\n    tag_191:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13771:13876  function _checkOnlyInitialized() internal view {... */\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":18949:19064  function _beforeDistribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal virtual {} */\n    tag_107:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":2396:2514  function _distribute(address[] memory, bytes memory, address) internal virtual override {... */\n    tag_109:\n        /* \"src/YeeterStrategy.sol\":2501:2507  NOOP() */\n      mload(0x40)\n      0x1569426800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":19320:19434  function _afterDistribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal virtual {} */\n    tag_111:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":17810:17900  function _beforeRegisterRecipient(bytes memory _data, address _sender) internal virtual {} */\n    tag_119:\n      pop\n      pop\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":2760:2885  function _registerRecipient(bytes memory, address) internal virtual override returns (address) {... */\n    tag_121:\n        /* \"src/YeeterStrategy.sol\":2846:2853  address */\n      0x00\n        /* \"src/YeeterStrategy.sol\":2872:2878  NOOP() */\n      mload(0x40)\n      0x1569426800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":18077:18166  function _afterRegisterRecipient(bytes memory _data, address _sender) internal virtual {} */\n    tag_123:\n      pop\n      pop\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":2642:2754  function _isValidAllocator(address) internal view virtual override returns (bool) {... */\n    tag_129:\n        /* \"src/YeeterStrategy.sol\":2718:2722  bool */\n      0x00\n        /* \"src/YeeterStrategy.sol\":2741:2747  NOOP() */\n      mload(0x40)\n      0x1569426800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/YeeterStrategy.sol\":2891:3026  function _getPayout(address, bytes memory) internal view virtual override returns (PayoutSummary memory) {... */\n    tag_148:\n        /* \"src/YeeterStrategy.sol\":2974:2994  PayoutSummary memory */\n      tag_199\n      tag_138\n      jump\t// in\n    tag_199:\n        /* \"src/YeeterStrategy.sol\":3013:3019  NOOP() */\n      mload(0x40)\n      0x1569426800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13122:13264  function _checkOnlyPoolManager(address _sender) internal view {... */\n    tag_153:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13199:13203  allo */\n      immutable(\"0x0d36db49541e48e0baaf49e5cf80258467a29ecf7146772ef8777fb68b49f82b\")\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13199:13217  allo.isPoolManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x29e40d4b\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13218:13224  poolId */\n      sload(0x01)\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13226:13233  _sender */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13199:13234  allo.isPoolManager(poolId, _sender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap3\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13194:13257  if (!allo.isPoolManager(poolId, _sender)) revert UNAUTHORIZED() */\n      tag_208\n      jumpi\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13243:13257  UNAUTHORIZED() */\n      mload(0x40)\n      0x075fd2b100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13194:13257  if (!allo.isPoolManager(poolId, _sender)) revert UNAUTHORIZED() */\n    tag_208:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13122:13264  function _checkOnlyPoolManager(address _sender) internal view {... */\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6762:7039  function _transferAmount(address _token, address _to, uint256 _amount) internal virtual {... */\n    tag_156:\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4446:4488  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6864:6880  _token == NATIVE */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6864:6870  _token */\n      dup4\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6864:6880  _token == NATIVE */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6860:7033  if (_token == NATIVE) {... */\n      tag_210\n      jumpi\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6896:6941  SafeTransferLib.safeTransferETH(_to, _amount) */\n      tag_211\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6928:6931  _to */\n      dup3\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6933:6940  _amount */\n      dup3\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6896:6927  SafeTransferLib.safeTransferETH */\n      tag_212\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6896:6941  SafeTransferLib.safeTransferETH(_to, _amount) */\n      jump\t// in\n    tag_211:\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6860:7033  if (_token == NATIVE) {... */\n      jump(tag_213)\n    tag_210:\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6972:7022  SafeTransferLib.safeTransfer(_token, _to, _amount) */\n      tag_214\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":7001:7007  _token */\n      dup4\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":7009:7012  _to */\n      dup4\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":7014:7021  _amount */\n      dup4\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6972:7000  SafeTransferLib.safeTransfer */\n      tag_215\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6972:7022  SafeTransferLib.safeTransfer(_token, _to, _amount) */\n      jump\t// in\n    tag_214:\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6860:7033  if (_token == NATIVE) {... */\n    tag_213:\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6762:7039  function _transferAmount(address _token, address _to, uint256 _amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":14400:14496  function _isPoolActive() internal view virtual returns (bool) {... */\n    tag_159:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":14456:14460  bool */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":14479:14489  poolActive */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":14472:14489  return poolActive */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":14400:14496  function _isPoolActive() internal view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":2520:2636  function _getRecipientStatus(address) internal view virtual override returns (Status) {... */\n    tag_162:\n        /* \"src/YeeterStrategy.sol\":2598:2604  Status */\n      0x00\n        /* \"src/YeeterStrategy.sol\":2623:2629  NOOP() */\n      mload(0x40)\n      0x1569426800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8269:8619  function __BaseStrategy_init(uint256 _poolId) internal virtual onlyAllo {... */\n    tag_165:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      tag_219\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5674  _checkOnlyAllo */\n      tag_101\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      jump\t// in\n    tag_219:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8438:8439  0 */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8428:8434  poolId */\n      sload(0x01)\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8428:8439  poolId != 0 */\n      eq\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8424:8469  if (poolId != 0) revert ALREADY_INITIALIZED() */\n      tag_221\n      jumpi\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8448:8469  ALREADY_INITIALIZED() */\n      mload(0x40)\n      0x439a74c900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8424:8469  if (poolId != 0) revert ALREADY_INITIALIZED() */\n    tag_221:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8567:8568  0 */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8556:8563  _poolId */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8556:8568  _poolId == 0 */\n      sub\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8552:8586  if (_poolId == 0) revert INVALID() */\n      tag_222\n      jumpi\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8577:8586  INVALID() */\n      mload(0x40)\n      0x7fcce2a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8552:8586  if (_poolId == 0) revert INVALID() */\n    tag_222:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8605:8612  _poolId */\n      dup1\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8596:8602  poolId */\n      0x01\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8596:8612  poolId = _poolId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8269:8619  function __BaseStrategy_init(uint256 _poolId) internal virtual onlyAllo {... */\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":18349:18430  function _beforeAllocate(bytes memory _data, address _sender) internal virtual {} */\n    tag_174:\n      pop\n      pop\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":1337:2357  function _allocate(bytes memory _data, address _sender) internal virtual override onlyPoolManager(_sender) {... */\n    tag_176:\n        /* \"src/YeeterStrategy.sol\":1435:1442  _sender */\n      dup1\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5984  _checkOnlyPoolManager(_sender) */\n      tag_225\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5976:5983  _sender */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5975  _checkOnlyPoolManager */\n      tag_153\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5984  _checkOnlyPoolManager(_sender) */\n      jump\t// in\n    tag_225:\n        /* \"src/YeeterStrategy.sol\":1482:1512  address[] memory _recipientIds */\n      0x00\n        /* \"src/YeeterStrategy.sol\":1514:1539  uint256[] memory _amounts */\n      0x00\n        /* \"src/YeeterStrategy.sol\":1541:1555  address _token */\n      0x00\n        /* \"src/YeeterStrategy.sol\":1582:1587  _data */\n      dup6\n        /* \"src/YeeterStrategy.sol\":1571:1621  abi.decode(_data, (address[], uint256[], address)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"src/YeeterStrategy.sol\":1481:1621  (address[] memory _recipientIds, uint256[] memory _amounts, address _token) =... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"src/YeeterStrategy.sol\":1632:1652  uint256 payoutLength */\n      0x00\n        /* \"src/YeeterStrategy.sol\":1655:1668  _recipientIds */\n      dup4\n        /* \"src/YeeterStrategy.sol\":1655:1675  _recipientIds.length */\n      mload\n        /* \"src/YeeterStrategy.sol\":1632:1675  uint256 payoutLength = _recipientIds.length */\n      swap1\n      pop\n        /* \"src/YeeterStrategy.sol\":1747:1748  0 */\n      0x00\n        /* \"src/YeeterStrategy.sol\":1731:1743  payoutLength */\n      dup2\n        /* \"src/YeeterStrategy.sol\":1731:1748  payoutLength == 0 */\n      sub\n        /* \"src/YeeterStrategy.sol\":1727:1805  if (payoutLength == 0) {... */\n      tag_229\n      jumpi\n        /* \"src/YeeterStrategy.sol\":1771:1794  INPUT_LENGTH_MISMATCH() */\n      mload(0x40)\n      0xfb76571500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/YeeterStrategy.sol\":1727:1805  if (payoutLength == 0) {... */\n    tag_229:\n        /* \"src/YeeterStrategy.sol\":1892:1900  _amounts */\n      dup3\n        /* \"src/YeeterStrategy.sol\":1892:1907  _amounts.length */\n      mload\n        /* \"src/YeeterStrategy.sol\":1876:1888  payoutLength */\n      dup2\n        /* \"src/YeeterStrategy.sol\":1876:1907  payoutLength != _amounts.length */\n      eq\n        /* \"src/YeeterStrategy.sol\":1872:1964  if (payoutLength != _amounts.length) {... */\n      tag_230\n      jumpi\n        /* \"src/YeeterStrategy.sol\":1930:1953  INPUT_LENGTH_MISMATCH() */\n      mload(0x40)\n      0xfb76571500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/YeeterStrategy.sol\":1872:1964  if (payoutLength != _amounts.length) {... */\n    tag_230:\n        /* \"src/YeeterStrategy.sol\":2026:2035  uint256 i */\n      0x00\n        /* \"src/YeeterStrategy.sol\":2021:2351  for (uint256 i; i < payoutLength;) {... */\n    tag_231:\n        /* \"src/YeeterStrategy.sol\":2041:2053  payoutLength */\n      dup2\n        /* \"src/YeeterStrategy.sol\":2037:2038  i */\n      dup2\n        /* \"src/YeeterStrategy.sol\":2037:2053  i < payoutLength */\n      lt\n        /* \"src/YeeterStrategy.sol\":2021:2351  for (uint256 i; i < payoutLength;) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"src/YeeterStrategy.sol\":2070:2085  uint256 _amount */\n      0x00\n        /* \"src/YeeterStrategy.sol\":2088:2096  _amounts */\n      dup5\n        /* \"src/YeeterStrategy.sol\":2097:2098  i */\n      dup3\n        /* \"src/YeeterStrategy.sol\":2088:2099  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_234\n      jumpi\n      tag_235\n      tag_145\n      jump\t// in\n    tag_235:\n    tag_234:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/YeeterStrategy.sol\":2070:2099  uint256 _amount = _amounts[i] */\n      swap1\n      pop\n        /* \"src/YeeterStrategy.sol\":2113:2133  address _recipientId */\n      0x00\n        /* \"src/YeeterStrategy.sol\":2136:2149  _recipientIds */\n      dup7\n        /* \"src/YeeterStrategy.sol\":2150:2151  i */\n      dup4\n        /* \"src/YeeterStrategy.sol\":2136:2152  _recipientIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_236\n      jumpi\n      tag_237\n      tag_145\n      jump\t// in\n    tag_237:\n    tag_236:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/YeeterStrategy.sol\":2113:2152  address _recipientId = _recipientIds[i] */\n      swap1\n      pop\n        /* \"src/YeeterStrategy.sol\":2167:2213  _transferAmount(_token, _recipientId, _amount) */\n      tag_238\n        /* \"src/YeeterStrategy.sol\":2183:2189  _token */\n      dup6\n        /* \"src/YeeterStrategy.sol\":2191:2203  _recipientId */\n      dup3\n        /* \"src/YeeterStrategy.sol\":2205:2212  _amount */\n      dup5\n        /* \"src/YeeterStrategy.sol\":2167:2182  _transferAmount */\n      tag_156\n        /* \"src/YeeterStrategy.sol\":2167:2213  _transferAmount(_token, _recipientId, _amount) */\n      jump\t// in\n    tag_238:\n        /* \"src/YeeterStrategy.sol\":2242:2254  _recipientId */\n      dup1\n        /* \"src/YeeterStrategy.sol\":2232:2281  Allocated(_recipientId, _amount, _token, _sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x463ffc2cf8b1596445c417388ed30e53eb67cf6668cb2be7f0addf8a78c8441b\n        /* \"src/YeeterStrategy.sol\":2256:2263  _amount */\n      dup4\n        /* \"src/YeeterStrategy.sol\":2265:2271  _token */\n      dup8\n        /* \"src/YeeterStrategy.sol\":2273:2280  _sender */\n      dup13\n        /* \"src/YeeterStrategy.sol\":2232:2281  Allocated(_recipientId, _amount, _token, _sender) */\n      mload(0x40)\n      tag_239\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/YeeterStrategy.sol\":2323:2326  ++i */\n      dup3\n      0x01\n      add\n      swap3\n      pop\n        /* \"src/YeeterStrategy.sol\":2056:2351  {... */\n      pop\n      pop\n        /* \"src/YeeterStrategy.sol\":2021:2351  for (uint256 i; i < payoutLength;) {... */\n      jump(tag_231)\n    tag_232:\n      pop\n        /* \"src/YeeterStrategy.sol\":1444:2357  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/YeeterStrategy.sol\":1337:2357  function _allocate(bytes memory _data, address _sender) internal virtual override onlyPoolManager(_sender) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":18612:18692  function _afterAllocate(bytes memory _data, address _sender) internal virtual {} */\n    tag_178:\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":17365:17436  function _beforeIncreasePoolAmount(uint256 _amount) internal virtual {} */\n    tag_183:\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":17562:17632  function _afterIncreasePoolAmount(uint256 _amount) internal virtual {} */\n    tag_187:\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2455:2945  function safeTransferETH(address to, uint256 amount) internal {... */\n    tag_212:\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2711:2715  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2705:2709  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2699:2703  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2693:2697  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2685:2691  amount */\n      dup5\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2681:2683  to */\n      dup7\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2674:2679  gas() */\n      gas\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2669:2716  call(gas(), to, amount, 0x00, 0x00, 0x00, 0x00) */\n      call\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2659:2929  if iszero(call(gas(), to, amount, 0x00, 0x00, 0x00, 0x00)) {... */\n      tag_245\n      jumpi\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2822:2832  0xb12d13eb */\n      0xb12d13eb\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2816:2820  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2809:2833  mstore(0x00, 0xb12d13eb) */\n      mstore\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2910:2914  0x04 */\n      0x04\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2904:2908  0x1c */\n      0x1c\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2897:2915  revert(0x1c, 0x04) */\n      revert\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2659:2929  if iszero(call(gas(), to, amount, 0x00, 0x00, 0x00, 0x00)) {... */\n    tag_245:\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2455:2945  function safeTransferETH(address to, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11454:12643  function safeTransfer(address token, address to, uint256 amount) internal {... */\n    tag_215:\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11617:11619  to */\n      dup2\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11611:11615  0x14 */\n      0x14\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11604:11620  mstore(0x14, to) */\n      mstore\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11674:11680  amount */\n      dup1\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11668:11672  0x34 */\n      0x34\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11661:11681  mstore(0x34, amount) */\n      mstore\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11814:11848  0xa9059cbb000000000000000000000000 */\n      0xa9059cbb000000000000000000000000\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11808:11812  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11801:11849  mstore(0x00, 0xa9059cbb000000000000000000000000) */\n      mstore\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12272:12276  0x20 */\n      0x20\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12266:12270  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12260:12264  0x44 */\n      0x44\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12254:12258  0x10 */\n      0x10\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12251:12252  0 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12244:12249  token */\n      dup8\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12237:12242  gas() */\n      gas\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12232:12277  call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20) */\n      call\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12192:12208  returndatasize() */\n      returndatasize\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12185:12209  iszero(returndatasize()) */\n      iszero\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12181:12182  1 */\n      0x01\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12174:12178  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12168:12179  mload(0x00) */\n      mload\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12165:12183  eq(mload(0x00), 1) */\n      eq\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12162:12210  or(eq(mload(0x00), 1), iszero(returndatasize())) */\n      or\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11890:12295  and( // The arguments of `and` are evaluated from right to left.... */\n      and\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11863:12518  if iszero(... */\n      tag_247\n      jumpi\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12411:12421  0x90b8ec18 */\n      0x90b8ec18\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12405:12409  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12398:12422  mstore(0x00, 0x90b8ec18) */\n      mstore\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12499:12503  0x04 */\n      0x04\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12493:12497  0x1c */\n      0x1c\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12486:12504  revert(0x1c, 0x04) */\n      revert\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11863:12518  if iszero(... */\n    tag_247:\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12625:12626  0 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12619:12623  0x34 */\n      0x34\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12612:12627  mstore(0x34, 0) */\n      mstore\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11454:12643  function safeTransfer(address token, address to, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_138:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_248:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_249:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_250:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_251:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      0x00\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:559   */\n    tag_252:\n        /* \"#utility.yul\":498:504   */\n      0x00\n        /* \"#utility.yul\":549:551   */\n      0x1f\n        /* \"#utility.yul\":545:552   */\n      not\n        /* \"#utility.yul\":540:542   */\n      0x1f\n        /* \"#utility.yul\":533:538   */\n      dup4\n        /* \"#utility.yul\":529:543   */\n      add\n        /* \"#utility.yul\":525:553   */\n      and\n        /* \"#utility.yul\":515:553   */\n      swap1\n      pop\n        /* \"#utility.yul\":457:559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:745   */\n    tag_134:\n        /* \"#utility.yul\":613:690   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":610:611   */\n      0x00\n        /* \"#utility.yul\":603:691   */\n      mstore\n        /* \"#utility.yul\":710:714   */\n      0x41\n        /* \"#utility.yul\":707:708   */\n      0x04\n        /* \"#utility.yul\":700:715   */\n      mstore\n        /* \"#utility.yul\":734:738   */\n      0x24\n        /* \"#utility.yul\":731:732   */\n      0x00\n        /* \"#utility.yul\":724:739   */\n      revert\n        /* \"#utility.yul\":751:1032   */\n    tag_253:\n        /* \"#utility.yul\":834:861   */\n      tag_324\n        /* \"#utility.yul\":856:860   */\n      dup3\n        /* \"#utility.yul\":834:861   */\n      tag_252\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":826:832   */\n      dup2\n        /* \"#utility.yul\":822:862   */\n      add\n        /* \"#utility.yul\":964:970   */\n      dup2\n        /* \"#utility.yul\":952:962   */\n      dup2\n        /* \"#utility.yul\":949:971   */\n      lt\n        /* \"#utility.yul\":928:946   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":916:926   */\n      dup3\n        /* \"#utility.yul\":913:947   */\n      gt\n        /* \"#utility.yul\":910:972   */\n      or\n        /* \"#utility.yul\":907:995   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":975:993   */\n      tag_326\n      tag_134\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":907:995   */\n    tag_325:\n        /* \"#utility.yul\":1015:1025   */\n      dup1\n        /* \"#utility.yul\":1011:1013   */\n      0x40\n        /* \"#utility.yul\":1004:1026   */\n      mstore\n        /* \"#utility.yul\":794:1032   */\n      pop\n        /* \"#utility.yul\":751:1032   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1038:1167   */\n    tag_254:\n        /* \"#utility.yul\":1072:1078   */\n      0x00\n        /* \"#utility.yul\":1099:1119   */\n      tag_328\n      tag_248\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1089:1119   */\n      swap1\n      pop\n        /* \"#utility.yul\":1128:1161   */\n      tag_329\n        /* \"#utility.yul\":1156:1160   */\n      dup3\n        /* \"#utility.yul\":1148:1154   */\n      dup3\n        /* \"#utility.yul\":1128:1161   */\n      tag_253\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":1038:1167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1173:1484   */\n    tag_255:\n        /* \"#utility.yul\":1250:1254   */\n      0x00\n        /* \"#utility.yul\":1340:1358   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1332:1338   */\n      dup3\n        /* \"#utility.yul\":1329:1359   */\n      gt\n        /* \"#utility.yul\":1326:1382   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":1362:1380   */\n      tag_332\n      tag_134\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1326:1382   */\n    tag_331:\n        /* \"#utility.yul\":1412:1416   */\n      0x20\n        /* \"#utility.yul\":1404:1410   */\n      dup3\n        /* \"#utility.yul\":1400:1417   */\n      mul\n        /* \"#utility.yul\":1392:1417   */\n      swap1\n      pop\n        /* \"#utility.yul\":1472:1476   */\n      0x20\n        /* \"#utility.yul\":1466:1470   */\n      dup2\n        /* \"#utility.yul\":1462:1477   */\n      add\n        /* \"#utility.yul\":1454:1477   */\n      swap1\n      pop\n        /* \"#utility.yul\":1173:1484   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1490:1607   */\n    tag_256:\n        /* \"#utility.yul\":1599:1600   */\n      0x00\n        /* \"#utility.yul\":1596:1597   */\n      0x00\n        /* \"#utility.yul\":1589:1601   */\n      revert\n        /* \"#utility.yul\":1613:1739   */\n    tag_257:\n        /* \"#utility.yul\":1650:1657   */\n      0x00\n        /* \"#utility.yul\":1690:1732   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1683:1688   */\n      dup3\n        /* \"#utility.yul\":1679:1733   */\n      and\n        /* \"#utility.yul\":1668:1733   */\n      swap1\n      pop\n        /* \"#utility.yul\":1613:1739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1745:1841   */\n    tag_258:\n        /* \"#utility.yul\":1782:1789   */\n      0x00\n        /* \"#utility.yul\":1811:1835   */\n      tag_336\n        /* \"#utility.yul\":1829:1834   */\n      dup3\n        /* \"#utility.yul\":1811:1835   */\n      tag_257\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1800:1835   */\n      swap1\n      pop\n        /* \"#utility.yul\":1745:1841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1847:1969   */\n    tag_259:\n        /* \"#utility.yul\":1920:1944   */\n      tag_338\n        /* \"#utility.yul\":1938:1943   */\n      dup2\n        /* \"#utility.yul\":1920:1944   */\n      tag_258\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1913:1918   */\n      dup2\n        /* \"#utility.yul\":1910:1945   */\n      eq\n        /* \"#utility.yul\":1900:1963   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":1959:1960   */\n      0x00\n        /* \"#utility.yul\":1956:1957   */\n      0x00\n        /* \"#utility.yul\":1949:1961   */\n      revert\n        /* \"#utility.yul\":1900:1963   */\n    tag_339:\n        /* \"#utility.yul\":1847:1969   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1975:2114   */\n    tag_260:\n        /* \"#utility.yul\":2021:2026   */\n      0x00\n        /* \"#utility.yul\":2059:2065   */\n      dup2\n        /* \"#utility.yul\":2046:2066   */\n      calldataload\n        /* \"#utility.yul\":2037:2066   */\n      swap1\n      pop\n        /* \"#utility.yul\":2075:2108   */\n      tag_341\n        /* \"#utility.yul\":2102:2107   */\n      dup2\n        /* \"#utility.yul\":2075:2108   */\n      tag_259\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1975:2114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:2847   */\n    tag_261:\n        /* \"#utility.yul\":2233:2238   */\n      0x00\n        /* \"#utility.yul\":2258:2339   */\n      tag_343\n        /* \"#utility.yul\":2274:2338   */\n      tag_344\n        /* \"#utility.yul\":2331:2337   */\n      dup5\n        /* \"#utility.yul\":2274:2338   */\n      tag_255\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2258:2339   */\n      tag_254\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2249:2339   */\n      swap1\n      pop\n        /* \"#utility.yul\":2359:2364   */\n      dup1\n        /* \"#utility.yul\":2388:2394   */\n      dup4\n        /* \"#utility.yul\":2381:2386   */\n      dup3\n        /* \"#utility.yul\":2374:2395   */\n      mstore\n        /* \"#utility.yul\":2422:2426   */\n      0x20\n        /* \"#utility.yul\":2415:2420   */\n      dup3\n        /* \"#utility.yul\":2411:2427   */\n      add\n        /* \"#utility.yul\":2404:2427   */\n      swap1\n      pop\n        /* \"#utility.yul\":2475:2479   */\n      0x20\n        /* \"#utility.yul\":2467:2473   */\n      dup5\n        /* \"#utility.yul\":2463:2480   */\n      mul\n        /* \"#utility.yul\":2455:2461   */\n      dup4\n        /* \"#utility.yul\":2451:2481   */\n      add\n        /* \"#utility.yul\":2504:2507   */\n      dup6\n        /* \"#utility.yul\":2496:2502   */\n      dup2\n        /* \"#utility.yul\":2493:2508   */\n      gt\n        /* \"#utility.yul\":2490:2612   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":2523:2602   */\n      tag_346\n      tag_256\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2490:2612   */\n    tag_345:\n        /* \"#utility.yul\":2638:2644   */\n      dup4\n        /* \"#utility.yul\":2621:2841   */\n    tag_347:\n        /* \"#utility.yul\":2655:2661   */\n      dup2\n        /* \"#utility.yul\":2650:2653   */\n      dup2\n        /* \"#utility.yul\":2647:2662   */\n      lt\n        /* \"#utility.yul\":2621:2841   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":2730:2733   */\n      dup1\n        /* \"#utility.yul\":2759:2796   */\n      tag_350\n        /* \"#utility.yul\":2792:2795   */\n      dup9\n        /* \"#utility.yul\":2780:2790   */\n      dup3\n        /* \"#utility.yul\":2759:2796   */\n      tag_260\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2754:2757   */\n      dup5\n        /* \"#utility.yul\":2747:2797   */\n      mstore\n        /* \"#utility.yul\":2826:2830   */\n      0x20\n        /* \"#utility.yul\":2821:2824   */\n      dup5\n        /* \"#utility.yul\":2817:2831   */\n      add\n        /* \"#utility.yul\":2810:2831   */\n      swap4\n      pop\n        /* \"#utility.yul\":2697:2841   */\n      pop\n        /* \"#utility.yul\":2681:2685   */\n      0x20\n        /* \"#utility.yul\":2676:2679   */\n      dup2\n        /* \"#utility.yul\":2672:2686   */\n      add\n        /* \"#utility.yul\":2665:2686   */\n      swap1\n      pop\n        /* \"#utility.yul\":2621:2841   */\n      jump(tag_347)\n    tag_349:\n        /* \"#utility.yul\":2625:2646   */\n      pop\n        /* \"#utility.yul\":2239:2847   */\n      pop\n      pop\n        /* \"#utility.yul\":2137:2847   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2870:3240   */\n    tag_262:\n        /* \"#utility.yul\":2941:2946   */\n      0x00\n        /* \"#utility.yul\":2990:2993   */\n      dup3\n        /* \"#utility.yul\":2983:2987   */\n      0x1f\n        /* \"#utility.yul\":2975:2981   */\n      dup4\n        /* \"#utility.yul\":2971:2988   */\n      add\n        /* \"#utility.yul\":2967:2994   */\n      slt\n        /* \"#utility.yul\":2957:3079   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":2998:3077   */\n      tag_353\n      tag_251\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2957:3079   */\n    tag_352:\n        /* \"#utility.yul\":3115:3121   */\n      dup2\n        /* \"#utility.yul\":3102:3122   */\n      calldataload\n        /* \"#utility.yul\":3140:3234   */\n      tag_354\n        /* \"#utility.yul\":3230:3233   */\n      dup5\n        /* \"#utility.yul\":3222:3228   */\n      dup3\n        /* \"#utility.yul\":3215:3219   */\n      0x20\n        /* \"#utility.yul\":3207:3213   */\n      dup7\n        /* \"#utility.yul\":3203:3220   */\n      add\n        /* \"#utility.yul\":3140:3234   */\n      tag_261\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":3131:3234   */\n      swap2\n      pop\n        /* \"#utility.yul\":2947:3240   */\n      pop\n        /* \"#utility.yul\":2870:3240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3246:3363   */\n    tag_263:\n        /* \"#utility.yul\":3355:3356   */\n      0x00\n        /* \"#utility.yul\":3352:3353   */\n      0x00\n        /* \"#utility.yul\":3345:3357   */\n      revert\n        /* \"#utility.yul\":3369:3676   */\n    tag_264:\n        /* \"#utility.yul\":3430:3434   */\n      0x00\n        /* \"#utility.yul\":3520:3538   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3512:3518   */\n      dup3\n        /* \"#utility.yul\":3509:3539   */\n      gt\n        /* \"#utility.yul\":3506:3562   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":3542:3560   */\n      tag_358\n      tag_134\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3506:3562   */\n    tag_357:\n        /* \"#utility.yul\":3580:3609   */\n      tag_359\n        /* \"#utility.yul\":3602:3608   */\n      dup3\n        /* \"#utility.yul\":3580:3609   */\n      tag_252\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3572:3609   */\n      swap1\n      pop\n        /* \"#utility.yul\":3664:3668   */\n      0x20\n        /* \"#utility.yul\":3658:3662   */\n      dup2\n        /* \"#utility.yul\":3654:3669   */\n      add\n        /* \"#utility.yul\":3646:3669   */\n      swap1\n      pop\n        /* \"#utility.yul\":3369:3676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3682:3830   */\n    tag_265:\n        /* \"#utility.yul\":3780:3786   */\n      dup3\n        /* \"#utility.yul\":3775:3778   */\n      dup2\n        /* \"#utility.yul\":3770:3773   */\n      dup4\n        /* \"#utility.yul\":3757:3787   */\n      calldatacopy\n        /* \"#utility.yul\":3821:3822   */\n      0x00\n        /* \"#utility.yul\":3812:3818   */\n      dup4\n        /* \"#utility.yul\":3807:3810   */\n      dup4\n        /* \"#utility.yul\":3803:3819   */\n      add\n        /* \"#utility.yul\":3796:3823   */\n      mstore\n        /* \"#utility.yul\":3682:3830   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3836:4259   */\n    tag_266:\n        /* \"#utility.yul\":3913:3918   */\n      0x00\n        /* \"#utility.yul\":3938:4003   */\n      tag_362\n        /* \"#utility.yul\":3954:4002   */\n      tag_363\n        /* \"#utility.yul\":3995:4001   */\n      dup5\n        /* \"#utility.yul\":3954:4002   */\n      tag_264\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3938:4003   */\n      tag_254\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3929:4003   */\n      swap1\n      pop\n        /* \"#utility.yul\":4026:4032   */\n      dup3\n        /* \"#utility.yul\":4019:4024   */\n      dup2\n        /* \"#utility.yul\":4012:4033   */\n      mstore\n        /* \"#utility.yul\":4064:4068   */\n      0x20\n        /* \"#utility.yul\":4057:4062   */\n      dup2\n        /* \"#utility.yul\":4053:4069   */\n      add\n        /* \"#utility.yul\":4102:4105   */\n      dup5\n        /* \"#utility.yul\":4093:4099   */\n      dup5\n        /* \"#utility.yul\":4088:4091   */\n      dup5\n        /* \"#utility.yul\":4084:4100   */\n      add\n        /* \"#utility.yul\":4081:4106   */\n      gt\n        /* \"#utility.yul\":4078:4190   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":4109:4188   */\n      tag_365\n      tag_263\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4078:4190   */\n    tag_364:\n        /* \"#utility.yul\":4199:4253   */\n      tag_366\n        /* \"#utility.yul\":4246:4252   */\n      dup5\n        /* \"#utility.yul\":4241:4244   */\n      dup3\n        /* \"#utility.yul\":4236:4239   */\n      dup6\n        /* \"#utility.yul\":4199:4253   */\n      tag_265\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3919:4259   */\n      pop\n        /* \"#utility.yul\":3836:4259   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4278:4616   */\n    tag_267:\n        /* \"#utility.yul\":4333:4338   */\n      0x00\n        /* \"#utility.yul\":4382:4385   */\n      dup3\n        /* \"#utility.yul\":4375:4379   */\n      0x1f\n        /* \"#utility.yul\":4367:4373   */\n      dup4\n        /* \"#utility.yul\":4363:4380   */\n      add\n        /* \"#utility.yul\":4359:4386   */\n      slt\n        /* \"#utility.yul\":4349:4471   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":4390:4469   */\n      tag_369\n      tag_251\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4349:4471   */\n    tag_368:\n        /* \"#utility.yul\":4507:4513   */\n      dup2\n        /* \"#utility.yul\":4494:4514   */\n      calldataload\n        /* \"#utility.yul\":4532:4610   */\n      tag_370\n        /* \"#utility.yul\":4606:4609   */\n      dup5\n        /* \"#utility.yul\":4598:4604   */\n      dup3\n        /* \"#utility.yul\":4591:4595   */\n      0x20\n        /* \"#utility.yul\":4583:4589   */\n      dup7\n        /* \"#utility.yul\":4579:4596   */\n      add\n        /* \"#utility.yul\":4532:4610   */\n      tag_266\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4523:4610   */\n      swap2\n      pop\n        /* \"#utility.yul\":4339:4616   */\n      pop\n        /* \"#utility.yul\":4278:4616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4622:5629   */\n    tag_26:\n        /* \"#utility.yul\":4733:4739   */\n      0x00\n        /* \"#utility.yul\":4741:4747   */\n      0x00\n        /* \"#utility.yul\":4749:4755   */\n      0x00\n        /* \"#utility.yul\":4798:4800   */\n      0x60\n        /* \"#utility.yul\":4786:4795   */\n      dup5\n        /* \"#utility.yul\":4777:4784   */\n      dup7\n        /* \"#utility.yul\":4773:4796   */\n      sub\n        /* \"#utility.yul\":4769:4801   */\n      slt\n        /* \"#utility.yul\":4766:4885   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":4804:4883   */\n      tag_373\n      tag_249\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4766:4885   */\n    tag_372:\n        /* \"#utility.yul\":4952:4953   */\n      0x00\n        /* \"#utility.yul\":4941:4950   */\n      dup5\n        /* \"#utility.yul\":4937:4954   */\n      add\n        /* \"#utility.yul\":4924:4955   */\n      calldataload\n        /* \"#utility.yul\":4982:5000   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4974:4980   */\n      dup2\n        /* \"#utility.yul\":4971:5001   */\n      gt\n        /* \"#utility.yul\":4968:5085   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":5004:5083   */\n      tag_375\n      tag_250\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4968:5085   */\n    tag_374:\n        /* \"#utility.yul\":5109:5187   */\n      tag_376\n        /* \"#utility.yul\":5179:5186   */\n      dup7\n        /* \"#utility.yul\":5170:5176   */\n      dup3\n        /* \"#utility.yul\":5159:5168   */\n      dup8\n        /* \"#utility.yul\":5155:5177   */\n      add\n        /* \"#utility.yul\":5109:5187   */\n      tag_262\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5099:5187   */\n      swap4\n      pop\n        /* \"#utility.yul\":4895:5197   */\n      pop\n        /* \"#utility.yul\":5264:5266   */\n      0x20\n        /* \"#utility.yul\":5253:5262   */\n      dup5\n        /* \"#utility.yul\":5249:5267   */\n      add\n        /* \"#utility.yul\":5236:5268   */\n      calldataload\n        /* \"#utility.yul\":5295:5313   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5287:5293   */\n      dup2\n        /* \"#utility.yul\":5284:5314   */\n      gt\n        /* \"#utility.yul\":5281:5398   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":5317:5396   */\n      tag_378\n      tag_250\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5281:5398   */\n    tag_377:\n        /* \"#utility.yul\":5422:5484   */\n      tag_379\n        /* \"#utility.yul\":5476:5483   */\n      dup7\n        /* \"#utility.yul\":5467:5473   */\n      dup3\n        /* \"#utility.yul\":5456:5465   */\n      dup8\n        /* \"#utility.yul\":5452:5474   */\n      add\n        /* \"#utility.yul\":5422:5484   */\n      tag_267\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5412:5484   */\n      swap3\n      pop\n        /* \"#utility.yul\":5207:5494   */\n      pop\n        /* \"#utility.yul\":5533:5535   */\n      0x40\n        /* \"#utility.yul\":5559:5612   */\n      tag_380\n        /* \"#utility.yul\":5604:5611   */\n      dup7\n        /* \"#utility.yul\":5595:5601   */\n      dup3\n        /* \"#utility.yul\":5584:5593   */\n      dup8\n        /* \"#utility.yul\":5580:5602   */\n      add\n        /* \"#utility.yul\":5559:5612   */\n      tag_260\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5549:5612   */\n      swap2\n      pop\n        /* \"#utility.yul\":5504:5622   */\n      pop\n        /* \"#utility.yul\":4622:5629   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5635:5695   */\n    tag_268:\n        /* \"#utility.yul\":5663:5666   */\n      0x00\n        /* \"#utility.yul\":5684:5689   */\n      dup2\n        /* \"#utility.yul\":5677:5689   */\n      swap1\n      pop\n        /* \"#utility.yul\":5635:5695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5701:5843   */\n    tag_269:\n        /* \"#utility.yul\":5751:5760   */\n      0x00\n        /* \"#utility.yul\":5784:5837   */\n      tag_383\n        /* \"#utility.yul\":5802:5836   */\n      tag_384\n        /* \"#utility.yul\":5811:5835   */\n      tag_385\n        /* \"#utility.yul\":5829:5834   */\n      dup5\n        /* \"#utility.yul\":5811:5835   */\n      tag_257\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5802:5836   */\n      tag_268\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5784:5837   */\n      tag_257\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5771:5837   */\n      swap1\n      pop\n        /* \"#utility.yul\":5701:5843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5849:5975   */\n    tag_270:\n        /* \"#utility.yul\":5899:5908   */\n      0x00\n        /* \"#utility.yul\":5932:5969   */\n      tag_387\n        /* \"#utility.yul\":5963:5968   */\n      dup3\n        /* \"#utility.yul\":5932:5969   */\n      tag_269\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5919:5969   */\n      swap1\n      pop\n        /* \"#utility.yul\":5849:5975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5981:6120   */\n    tag_271:\n        /* \"#utility.yul\":6044:6053   */\n      0x00\n        /* \"#utility.yul\":6077:6114   */\n      tag_389\n        /* \"#utility.yul\":6108:6113   */\n      dup3\n        /* \"#utility.yul\":6077:6114   */\n      tag_270\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6064:6114   */\n      swap1\n      pop\n        /* \"#utility.yul\":5981:6120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6126:6283   */\n    tag_272:\n        /* \"#utility.yul\":6226:6276   */\n      tag_391\n        /* \"#utility.yul\":6270:6275   */\n      dup2\n        /* \"#utility.yul\":6226:6276   */\n      tag_271\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6221:6224   */\n      dup3\n        /* \"#utility.yul\":6214:6277   */\n      mstore\n        /* \"#utility.yul\":6126:6283   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6289:6537   */\n    tag_32:\n        /* \"#utility.yul\":6395:6399   */\n      0x00\n        /* \"#utility.yul\":6433:6435   */\n      0x20\n        /* \"#utility.yul\":6422:6431   */\n      dup3\n        /* \"#utility.yul\":6418:6436   */\n      add\n        /* \"#utility.yul\":6410:6436   */\n      swap1\n      pop\n        /* \"#utility.yul\":6446:6530   */\n      tag_393\n        /* \"#utility.yul\":6527:6528   */\n      0x00\n        /* \"#utility.yul\":6516:6525   */\n      dup4\n        /* \"#utility.yul\":6512:6529   */\n      add\n        /* \"#utility.yul\":6503:6509   */\n      dup5\n        /* \"#utility.yul\":6446:6530   */\n      tag_272\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":6289:6537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6543:7195   */\n    tag_35:\n        /* \"#utility.yul\":6620:6626   */\n      0x00\n        /* \"#utility.yul\":6628:6634   */\n      0x00\n        /* \"#utility.yul\":6677:6679   */\n      0x40\n        /* \"#utility.yul\":6665:6674   */\n      dup4\n        /* \"#utility.yul\":6656:6663   */\n      dup6\n        /* \"#utility.yul\":6652:6675   */\n      sub\n        /* \"#utility.yul\":6648:6680   */\n      slt\n        /* \"#utility.yul\":6645:6764   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":6683:6762   */\n      tag_396\n      tag_249\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6645:6764   */\n    tag_395:\n        /* \"#utility.yul\":6831:6832   */\n      0x00\n        /* \"#utility.yul\":6820:6829   */\n      dup4\n        /* \"#utility.yul\":6816:6833   */\n      add\n        /* \"#utility.yul\":6803:6834   */\n      calldataload\n        /* \"#utility.yul\":6861:6879   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6853:6859   */\n      dup2\n        /* \"#utility.yul\":6850:6880   */\n      gt\n        /* \"#utility.yul\":6847:6964   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":6883:6962   */\n      tag_398\n      tag_250\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6847:6964   */\n    tag_397:\n        /* \"#utility.yul\":6988:7050   */\n      tag_399\n        /* \"#utility.yul\":7042:7049   */\n      dup6\n        /* \"#utility.yul\":7033:7039   */\n      dup3\n        /* \"#utility.yul\":7022:7031   */\n      dup7\n        /* \"#utility.yul\":7018:7040   */\n      add\n        /* \"#utility.yul\":6988:7050   */\n      tag_267\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":6978:7050   */\n      swap3\n      pop\n        /* \"#utility.yul\":6774:7060   */\n      pop\n        /* \"#utility.yul\":7099:7101   */\n      0x20\n        /* \"#utility.yul\":7125:7178   */\n      tag_400\n        /* \"#utility.yul\":7170:7177   */\n      dup6\n        /* \"#utility.yul\":7161:7167   */\n      dup3\n        /* \"#utility.yul\":7150:7159   */\n      dup7\n        /* \"#utility.yul\":7146:7168   */\n      add\n        /* \"#utility.yul\":7125:7178   */\n      tag_260\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":7115:7178   */\n      swap2\n      pop\n        /* \"#utility.yul\":7070:7188   */\n      pop\n        /* \"#utility.yul\":6543:7195   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7201:7319   */\n    tag_273:\n        /* \"#utility.yul\":7288:7312   */\n      tag_402\n        /* \"#utility.yul\":7306:7311   */\n      dup2\n        /* \"#utility.yul\":7288:7312   */\n      tag_258\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7283:7286   */\n      dup3\n        /* \"#utility.yul\":7276:7313   */\n      mstore\n        /* \"#utility.yul\":7201:7319   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7325:7547   */\n    tag_38:\n        /* \"#utility.yul\":7418:7422   */\n      0x00\n        /* \"#utility.yul\":7456:7458   */\n      0x20\n        /* \"#utility.yul\":7445:7454   */\n      dup3\n        /* \"#utility.yul\":7441:7459   */\n      add\n        /* \"#utility.yul\":7433:7459   */\n      swap1\n      pop\n        /* \"#utility.yul\":7469:7540   */\n      tag_404\n        /* \"#utility.yul\":7537:7538   */\n      0x00\n        /* \"#utility.yul\":7526:7535   */\n      dup4\n        /* \"#utility.yul\":7522:7539   */\n      add\n        /* \"#utility.yul\":7513:7519   */\n      dup5\n        /* \"#utility.yul\":7469:7540   */\n      tag_273\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7325:7547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7553:7630   */\n    tag_274:\n        /* \"#utility.yul\":7590:7597   */\n      0x00\n        /* \"#utility.yul\":7619:7624   */\n      dup2\n        /* \"#utility.yul\":7608:7624   */\n      swap1\n      pop\n        /* \"#utility.yul\":7553:7630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7636:7754   */\n    tag_275:\n        /* \"#utility.yul\":7723:7747   */\n      tag_407\n        /* \"#utility.yul\":7741:7746   */\n      dup2\n        /* \"#utility.yul\":7723:7747   */\n      tag_274\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7718:7721   */\n      dup3\n        /* \"#utility.yul\":7711:7748   */\n      mstore\n        /* \"#utility.yul\":7636:7754   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7760:7982   */\n    tag_43:\n        /* \"#utility.yul\":7853:7857   */\n      0x00\n        /* \"#utility.yul\":7891:7893   */\n      0x20\n        /* \"#utility.yul\":7880:7889   */\n      dup3\n        /* \"#utility.yul\":7876:7894   */\n      add\n        /* \"#utility.yul\":7868:7894   */\n      swap1\n      pop\n        /* \"#utility.yul\":7904:7975   */\n      tag_409\n        /* \"#utility.yul\":7972:7973   */\n      0x00\n        /* \"#utility.yul\":7961:7970   */\n      dup4\n        /* \"#utility.yul\":7957:7974   */\n      add\n        /* \"#utility.yul\":7948:7954   */\n      dup5\n        /* \"#utility.yul\":7904:7975   */\n      tag_275\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7760:7982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7988:8065   */\n    tag_276:\n        /* \"#utility.yul\":8025:8032   */\n      0x00\n        /* \"#utility.yul\":8054:8059   */\n      dup2\n        /* \"#utility.yul\":8043:8059   */\n      swap1\n      pop\n        /* \"#utility.yul\":7988:8065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8071:8189   */\n    tag_277:\n        /* \"#utility.yul\":8158:8182   */\n      tag_412\n        /* \"#utility.yul\":8176:8181   */\n      dup2\n        /* \"#utility.yul\":8158:8182   */\n      tag_276\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":8153:8156   */\n      dup3\n        /* \"#utility.yul\":8146:8183   */\n      mstore\n        /* \"#utility.yul\":8071:8189   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8195:8417   */\n    tag_48:\n        /* \"#utility.yul\":8288:8292   */\n      0x00\n        /* \"#utility.yul\":8326:8328   */\n      0x20\n        /* \"#utility.yul\":8315:8324   */\n      dup3\n        /* \"#utility.yul\":8311:8329   */\n      add\n        /* \"#utility.yul\":8303:8329   */\n      swap1\n      pop\n        /* \"#utility.yul\":8339:8410   */\n      tag_414\n        /* \"#utility.yul\":8407:8408   */\n      0x00\n        /* \"#utility.yul\":8396:8405   */\n      dup4\n        /* \"#utility.yul\":8392:8409   */\n      add\n        /* \"#utility.yul\":8383:8389   */\n      dup5\n        /* \"#utility.yul\":8339:8410   */\n      tag_277\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8195:8417   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8423:8752   */\n    tag_56:\n        /* \"#utility.yul\":8482:8488   */\n      0x00\n        /* \"#utility.yul\":8531:8533   */\n      0x20\n        /* \"#utility.yul\":8519:8528   */\n      dup3\n        /* \"#utility.yul\":8510:8517   */\n      dup5\n        /* \"#utility.yul\":8506:8529   */\n      sub\n        /* \"#utility.yul\":8502:8534   */\n      slt\n        /* \"#utility.yul\":8499:8618   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":8537:8616   */\n      tag_417\n      tag_249\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8499:8618   */\n    tag_416:\n        /* \"#utility.yul\":8657:8658   */\n      0x00\n        /* \"#utility.yul\":8682:8735   */\n      tag_418\n        /* \"#utility.yul\":8727:8734   */\n      dup5\n        /* \"#utility.yul\":8718:8724   */\n      dup3\n        /* \"#utility.yul\":8707:8716   */\n      dup6\n        /* \"#utility.yul\":8703:8725   */\n      add\n        /* \"#utility.yul\":8682:8735   */\n      tag_260\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8672:8735   */\n      swap2\n      pop\n        /* \"#utility.yul\":8628:8745   */\n      pop\n        /* \"#utility.yul\":8423:8752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8758:8848   */\n    tag_278:\n        /* \"#utility.yul\":8792:8799   */\n      0x00\n        /* \"#utility.yul\":8835:8840   */\n      dup2\n        /* \"#utility.yul\":8828:8841   */\n      iszero\n        /* \"#utility.yul\":8821:8842   */\n      iszero\n        /* \"#utility.yul\":8810:8842   */\n      swap1\n      pop\n        /* \"#utility.yul\":8758:8848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8854:8963   */\n    tag_279:\n        /* \"#utility.yul\":8935:8956   */\n      tag_421\n        /* \"#utility.yul\":8950:8955   */\n      dup2\n        /* \"#utility.yul\":8935:8956   */\n      tag_278\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8930:8933   */\n      dup3\n        /* \"#utility.yul\":8923:8957   */\n      mstore\n        /* \"#utility.yul\":8854:8963   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8969:9179   */\n    tag_59:\n        /* \"#utility.yul\":9056:9060   */\n      0x00\n        /* \"#utility.yul\":9094:9096   */\n      0x20\n        /* \"#utility.yul\":9083:9092   */\n      dup3\n        /* \"#utility.yul\":9079:9097   */\n      add\n        /* \"#utility.yul\":9071:9097   */\n      swap1\n      pop\n        /* \"#utility.yul\":9107:9172   */\n      tag_423\n        /* \"#utility.yul\":9169:9170   */\n      0x00\n        /* \"#utility.yul\":9158:9167   */\n      dup4\n        /* \"#utility.yul\":9154:9171   */\n      add\n        /* \"#utility.yul\":9145:9151   */\n      dup5\n        /* \"#utility.yul\":9107:9172   */\n      tag_279\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":8969:9179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9185:9505   */\n    tag_280:\n        /* \"#utility.yul\":9271:9275   */\n      0x00\n        /* \"#utility.yul\":9361:9379   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9353:9359   */\n      dup3\n        /* \"#utility.yul\":9350:9380   */\n      gt\n        /* \"#utility.yul\":9347:9403   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":9383:9401   */\n      tag_426\n      tag_134\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9347:9403   */\n    tag_425:\n        /* \"#utility.yul\":9433:9437   */\n      0x20\n        /* \"#utility.yul\":9425:9431   */\n      dup3\n        /* \"#utility.yul\":9421:9438   */\n      mul\n        /* \"#utility.yul\":9413:9438   */\n      swap1\n      pop\n        /* \"#utility.yul\":9493:9497   */\n      0x20\n        /* \"#utility.yul\":9487:9491   */\n      dup2\n        /* \"#utility.yul\":9483:9498   */\n      add\n        /* \"#utility.yul\":9475:9498   */\n      swap1\n      pop\n        /* \"#utility.yul\":9185:9505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9526:10468   */\n    tag_281:\n        /* \"#utility.yul\":9631:9636   */\n      0x00\n        /* \"#utility.yul\":9656:9746   */\n      tag_428\n        /* \"#utility.yul\":9672:9745   */\n      tag_429\n        /* \"#utility.yul\":9738:9744   */\n      dup5\n        /* \"#utility.yul\":9672:9745   */\n      tag_280\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9656:9746   */\n      tag_254\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9647:9746   */\n      swap1\n      pop\n        /* \"#utility.yul\":9766:9771   */\n      dup1\n        /* \"#utility.yul\":9795:9801   */\n      dup4\n        /* \"#utility.yul\":9788:9793   */\n      dup3\n        /* \"#utility.yul\":9781:9802   */\n      mstore\n        /* \"#utility.yul\":9829:9833   */\n      0x20\n        /* \"#utility.yul\":9822:9827   */\n      dup3\n        /* \"#utility.yul\":9818:9834   */\n      add\n        /* \"#utility.yul\":9811:9834   */\n      swap1\n      pop\n        /* \"#utility.yul\":9882:9886   */\n      0x20\n        /* \"#utility.yul\":9874:9880   */\n      dup5\n        /* \"#utility.yul\":9870:9887   */\n      mul\n        /* \"#utility.yul\":9862:9868   */\n      dup4\n        /* \"#utility.yul\":9858:9888   */\n      add\n        /* \"#utility.yul\":9911:9914   */\n      dup6\n        /* \"#utility.yul\":9903:9909   */\n      dup2\n        /* \"#utility.yul\":9900:9915   */\n      gt\n        /* \"#utility.yul\":9897:10019   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":9930:10009   */\n      tag_431\n      tag_256\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9897:10019   */\n    tag_430:\n        /* \"#utility.yul\":10045:10051   */\n      dup4\n        /* \"#utility.yul\":10028:10462   */\n    tag_432:\n        /* \"#utility.yul\":10062:10068   */\n      dup2\n        /* \"#utility.yul\":10057:10060   */\n      dup2\n        /* \"#utility.yul\":10054:10069   */\n      lt\n        /* \"#utility.yul\":10028:10462   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":10151:10154   */\n      dup1\n        /* \"#utility.yul\":10138:10155   */\n      calldataload\n        /* \"#utility.yul\":10187:10205   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10174:10185   */\n      dup2\n        /* \"#utility.yul\":10171:10206   */\n      gt\n        /* \"#utility.yul\":10168:10290   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":10209:10288   */\n      tag_436\n      tag_251\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10168:10290   */\n    tag_435:\n        /* \"#utility.yul\":10333:10344   */\n      dup1\n        /* \"#utility.yul\":10325:10331   */\n      dup7\n        /* \"#utility.yul\":10321:10345   */\n      add\n        /* \"#utility.yul\":10371:10417   */\n      tag_437\n        /* \"#utility.yul\":10413:10416   */\n      dup10\n        /* \"#utility.yul\":10401:10411   */\n      dup3\n        /* \"#utility.yul\":10371:10417   */\n      tag_267\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10366:10369   */\n      dup6\n        /* \"#utility.yul\":10359:10418   */\n      mstore\n        /* \"#utility.yul\":10447:10451   */\n      0x20\n        /* \"#utility.yul\":10442:10445   */\n      dup6\n        /* \"#utility.yul\":10438:10452   */\n      add\n        /* \"#utility.yul\":10431:10452   */\n      swap5\n      pop\n        /* \"#utility.yul\":10104:10462   */\n      pop\n      pop\n        /* \"#utility.yul\":10088:10092   */\n      0x20\n        /* \"#utility.yul\":10083:10086   */\n      dup2\n        /* \"#utility.yul\":10079:10093   */\n      add\n        /* \"#utility.yul\":10072:10093   */\n      swap1\n      pop\n        /* \"#utility.yul\":10028:10462   */\n      jump(tag_432)\n    tag_434:\n        /* \"#utility.yul\":10032:10053   */\n      pop\n        /* \"#utility.yul\":9637:10468   */\n      pop\n      pop\n        /* \"#utility.yul\":9526:10468   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10489:10877   */\n    tag_282:\n        /* \"#utility.yul\":10569:10574   */\n      0x00\n        /* \"#utility.yul\":10618:10621   */\n      dup3\n        /* \"#utility.yul\":10611:10615   */\n      0x1f\n        /* \"#utility.yul\":10603:10609   */\n      dup4\n        /* \"#utility.yul\":10599:10616   */\n      add\n        /* \"#utility.yul\":10595:10622   */\n      slt\n        /* \"#utility.yul\":10585:10707   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":10626:10705   */\n      tag_440\n      tag_251\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10585:10707   */\n    tag_439:\n        /* \"#utility.yul\":10743:10749   */\n      dup2\n        /* \"#utility.yul\":10730:10750   */\n      calldataload\n        /* \"#utility.yul\":10768:10871   */\n      tag_441\n        /* \"#utility.yul\":10867:10870   */\n      dup5\n        /* \"#utility.yul\":10859:10865   */\n      dup3\n        /* \"#utility.yul\":10852:10856   */\n      0x20\n        /* \"#utility.yul\":10844:10850   */\n      dup7\n        /* \"#utility.yul\":10840:10857   */\n      add\n        /* \"#utility.yul\":10768:10871   */\n      tag_281\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10759:10871   */\n      swap2\n      pop\n        /* \"#utility.yul\":10575:10877   */\n      pop\n        /* \"#utility.yul\":10489:10877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10883:11795   */\n    tag_67:\n        /* \"#utility.yul\":11010:11016   */\n      0x00\n        /* \"#utility.yul\":11018:11024   */\n      0x00\n        /* \"#utility.yul\":11067:11069   */\n      0x40\n        /* \"#utility.yul\":11055:11064   */\n      dup4\n        /* \"#utility.yul\":11046:11053   */\n      dup6\n        /* \"#utility.yul\":11042:11065   */\n      sub\n        /* \"#utility.yul\":11038:11070   */\n      slt\n        /* \"#utility.yul\":11035:11154   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":11073:11152   */\n      tag_444\n      tag_249\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11035:11154   */\n    tag_443:\n        /* \"#utility.yul\":11221:11222   */\n      0x00\n        /* \"#utility.yul\":11210:11219   */\n      dup4\n        /* \"#utility.yul\":11206:11223   */\n      add\n        /* \"#utility.yul\":11193:11224   */\n      calldataload\n        /* \"#utility.yul\":11251:11269   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11243:11249   */\n      dup2\n        /* \"#utility.yul\":11240:11270   */\n      gt\n        /* \"#utility.yul\":11237:11354   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":11273:11352   */\n      tag_446\n      tag_250\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11237:11354   */\n    tag_445:\n        /* \"#utility.yul\":11378:11456   */\n      tag_447\n        /* \"#utility.yul\":11448:11455   */\n      dup6\n        /* \"#utility.yul\":11439:11445   */\n      dup3\n        /* \"#utility.yul\":11428:11437   */\n      dup7\n        /* \"#utility.yul\":11424:11446   */\n      add\n        /* \"#utility.yul\":11378:11456   */\n      tag_262\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11368:11456   */\n      swap3\n      pop\n        /* \"#utility.yul\":11164:11466   */\n      pop\n        /* \"#utility.yul\":11533:11535   */\n      0x20\n        /* \"#utility.yul\":11522:11531   */\n      dup4\n        /* \"#utility.yul\":11518:11536   */\n      add\n        /* \"#utility.yul\":11505:11537   */\n      calldataload\n        /* \"#utility.yul\":11564:11582   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11556:11562   */\n      dup2\n        /* \"#utility.yul\":11553:11583   */\n      gt\n        /* \"#utility.yul\":11550:11667   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":11586:11665   */\n      tag_449\n      tag_250\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11550:11667   */\n    tag_448:\n        /* \"#utility.yul\":11691:11778   */\n      tag_450\n        /* \"#utility.yul\":11770:11777   */\n      dup6\n        /* \"#utility.yul\":11761:11767   */\n      dup3\n        /* \"#utility.yul\":11750:11759   */\n      dup7\n        /* \"#utility.yul\":11746:11768   */\n      add\n        /* \"#utility.yul\":11691:11778   */\n      tag_282\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11681:11778   */\n      swap2\n      pop\n        /* \"#utility.yul\":11476:11788   */\n      pop\n        /* \"#utility.yul\":10883:11795   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11801:11945   */\n    tag_283:\n        /* \"#utility.yul\":11898:11904   */\n      0x00\n        /* \"#utility.yul\":11932:11937   */\n      dup2\n        /* \"#utility.yul\":11926:11938   */\n      mload\n        /* \"#utility.yul\":11916:11938   */\n      swap1\n      pop\n        /* \"#utility.yul\":11801:11945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11951:12165   */\n    tag_284:\n        /* \"#utility.yul\":12080:12091   */\n      0x00\n        /* \"#utility.yul\":12114:12120   */\n      dup3\n        /* \"#utility.yul\":12109:12112   */\n      dup3\n        /* \"#utility.yul\":12102:12121   */\n      mstore\n        /* \"#utility.yul\":12154:12158   */\n      0x20\n        /* \"#utility.yul\":12149:12152   */\n      dup3\n        /* \"#utility.yul\":12145:12159   */\n      add\n        /* \"#utility.yul\":12130:12159   */\n      swap1\n      pop\n        /* \"#utility.yul\":11951:12165   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12171:12333   */\n    tag_285:\n        /* \"#utility.yul\":12268:12272   */\n      0x00\n        /* \"#utility.yul\":12291:12294   */\n      dup2\n        /* \"#utility.yul\":12283:12294   */\n      swap1\n      pop\n        /* \"#utility.yul\":12321:12325   */\n      0x20\n        /* \"#utility.yul\":12316:12319   */\n      dup3\n        /* \"#utility.yul\":12312:12326   */\n      add\n        /* \"#utility.yul\":12304:12326   */\n      swap1\n      pop\n        /* \"#utility.yul\":12171:12333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12339:12447   */\n    tag_286:\n        /* \"#utility.yul\":12416:12440   */\n      tag_455\n        /* \"#utility.yul\":12434:12439   */\n      dup2\n        /* \"#utility.yul\":12416:12440   */\n      tag_258\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":12411:12414   */\n      dup3\n        /* \"#utility.yul\":12404:12441   */\n      mstore\n        /* \"#utility.yul\":12339:12447   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12453:12561   */\n    tag_287:\n        /* \"#utility.yul\":12530:12554   */\n      tag_457\n        /* \"#utility.yul\":12548:12553   */\n      dup2\n        /* \"#utility.yul\":12530:12554   */\n      tag_274\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":12525:12528   */\n      dup3\n        /* \"#utility.yul\":12518:12555   */\n      mstore\n        /* \"#utility.yul\":12453:12561   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12639:13160   */\n    tag_288:\n        /* \"#utility.yul\":12786:12790   */\n      0x40\n        /* \"#utility.yul\":12781:12784   */\n      dup3\n        /* \"#utility.yul\":12777:12791   */\n      add\n        /* \"#utility.yul\":12885:12889   */\n      0x00\n        /* \"#utility.yul\":12878:12883   */\n      dup3\n        /* \"#utility.yul\":12874:12890   */\n      add\n        /* \"#utility.yul\":12868:12891   */\n      mload\n        /* \"#utility.yul\":12904:12967   */\n      tag_459\n        /* \"#utility.yul\":12961:12965   */\n      0x00\n        /* \"#utility.yul\":12956:12959   */\n      dup6\n        /* \"#utility.yul\":12952:12966   */\n      add\n        /* \"#utility.yul\":12938:12950   */\n      dup3\n        /* \"#utility.yul\":12904:12967   */\n      tag_286\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12801:12977   */\n      pop\n        /* \"#utility.yul\":13061:13065   */\n      0x20\n        /* \"#utility.yul\":13054:13059   */\n      dup3\n        /* \"#utility.yul\":13050:13066   */\n      add\n        /* \"#utility.yul\":13044:13067   */\n      mload\n        /* \"#utility.yul\":13080:13143   */\n      tag_460\n        /* \"#utility.yul\":13137:13141   */\n      0x20\n        /* \"#utility.yul\":13132:13135   */\n      dup6\n        /* \"#utility.yul\":13128:13142   */\n      add\n        /* \"#utility.yul\":13114:13126   */\n      dup3\n        /* \"#utility.yul\":13080:13143   */\n      tag_287\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":12987:13153   */\n      pop\n        /* \"#utility.yul\":12755:13160   */\n      pop\n        /* \"#utility.yul\":12639:13160   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13166:13465   */\n    tag_289:\n        /* \"#utility.yul\":13295:13305   */\n      0x00\n        /* \"#utility.yul\":13316:13422   */\n      tag_462\n        /* \"#utility.yul\":13418:13421   */\n      dup4\n        /* \"#utility.yul\":13410:13416   */\n      dup4\n        /* \"#utility.yul\":13316:13422   */\n      tag_288\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":13454:13458   */\n      0x40\n        /* \"#utility.yul\":13449:13452   */\n      dup4\n        /* \"#utility.yul\":13445:13459   */\n      add\n        /* \"#utility.yul\":13431:13459   */\n      swap1\n      pop\n        /* \"#utility.yul\":13166:13465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13471:13614   */\n    tag_290:\n        /* \"#utility.yul\":13571:13575   */\n      0x00\n        /* \"#utility.yul\":13603:13607   */\n      0x20\n        /* \"#utility.yul\":13598:13601   */\n      dup3\n        /* \"#utility.yul\":13594:13608   */\n      add\n        /* \"#utility.yul\":13586:13608   */\n      swap1\n      pop\n        /* \"#utility.yul\":13471:13614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13696:14668   */\n    tag_291:\n        /* \"#utility.yul\":13875:13878   */\n      0x00\n        /* \"#utility.yul\":13904:13988   */\n      tag_465\n        /* \"#utility.yul\":13982:13987   */\n      dup3\n        /* \"#utility.yul\":13904:13988   */\n      tag_283\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":14004:14120   */\n      tag_466\n        /* \"#utility.yul\":14113:14119   */\n      dup2\n        /* \"#utility.yul\":14108:14111   */\n      dup6\n        /* \"#utility.yul\":14004:14120   */\n      tag_284\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":13997:14120   */\n      swap4\n      pop\n        /* \"#utility.yul\":14144:14230   */\n      tag_467\n        /* \"#utility.yul\":14224:14229   */\n      dup4\n        /* \"#utility.yul\":14144:14230   */\n      tag_285\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":14253:14260   */\n      dup1\n        /* \"#utility.yul\":14284:14285   */\n      0x00\n        /* \"#utility.yul\":14269:14643   */\n    tag_468:\n        /* \"#utility.yul\":14294:14300   */\n      dup4\n        /* \"#utility.yul\":14291:14292   */\n      dup2\n        /* \"#utility.yul\":14288:14301   */\n      lt\n        /* \"#utility.yul\":14269:14643   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":14370:14376   */\n      dup2\n        /* \"#utility.yul\":14364:14377   */\n      mload\n        /* \"#utility.yul\":14397:14520   */\n      tag_471\n        /* \"#utility.yul\":14516:14519   */\n      dup9\n        /* \"#utility.yul\":14501:14514   */\n      dup3\n        /* \"#utility.yul\":14397:14520   */\n      tag_289\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":14390:14520   */\n      swap8\n      pop\n        /* \"#utility.yul\":14543:14633   */\n      tag_472\n        /* \"#utility.yul\":14626:14632   */\n      dup4\n        /* \"#utility.yul\":14543:14633   */\n      tag_290\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":14533:14633   */\n      swap3\n      pop\n        /* \"#utility.yul\":14329:14643   */\n      pop\n        /* \"#utility.yul\":14316:14317   */\n      0x01\n        /* \"#utility.yul\":14313:14314   */\n      dup2\n        /* \"#utility.yul\":14309:14318   */\n      add\n        /* \"#utility.yul\":14304:14318   */\n      swap1\n      pop\n        /* \"#utility.yul\":14269:14643   */\n      jump(tag_468)\n    tag_470:\n        /* \"#utility.yul\":14273:14287   */\n      pop\n        /* \"#utility.yul\":14659:14662   */\n      dup6\n        /* \"#utility.yul\":14652:14662   */\n      swap4\n      pop\n        /* \"#utility.yul\":13880:14668   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13696:14668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14674:15167   */\n    tag_70:\n        /* \"#utility.yul\":14877:14881   */\n      0x00\n        /* \"#utility.yul\":14915:14917   */\n      0x20\n        /* \"#utility.yul\":14904:14913   */\n      dup3\n        /* \"#utility.yul\":14900:14918   */\n      add\n        /* \"#utility.yul\":14892:14918   */\n      swap1\n      pop\n        /* \"#utility.yul\":14964:14973   */\n      dup2\n        /* \"#utility.yul\":14958:14962   */\n      dup2\n        /* \"#utility.yul\":14954:14974   */\n      sub\n        /* \"#utility.yul\":14950:14951   */\n      0x00\n        /* \"#utility.yul\":14939:14948   */\n      dup4\n        /* \"#utility.yul\":14935:14952   */\n      add\n        /* \"#utility.yul\":14928:14975   */\n      mstore\n        /* \"#utility.yul\":14992:15160   */\n      tag_474\n        /* \"#utility.yul\":15155:15159   */\n      dup2\n        /* \"#utility.yul\":15146:15152   */\n      dup5\n        /* \"#utility.yul\":14992:15160   */\n      tag_291\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":14984:15160   */\n      swap1\n      pop\n        /* \"#utility.yul\":14674:15167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15173:15295   */\n    tag_292:\n        /* \"#utility.yul\":15246:15270   */\n      tag_476\n        /* \"#utility.yul\":15264:15269   */\n      dup2\n        /* \"#utility.yul\":15246:15270   */\n      tag_274\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":15239:15244   */\n      dup2\n        /* \"#utility.yul\":15236:15271   */\n      eq\n        /* \"#utility.yul\":15226:15289   */\n      tag_477\n      jumpi\n        /* \"#utility.yul\":15285:15286   */\n      0x00\n        /* \"#utility.yul\":15282:15283   */\n      0x00\n        /* \"#utility.yul\":15275:15287   */\n      revert\n        /* \"#utility.yul\":15226:15289   */\n    tag_477:\n        /* \"#utility.yul\":15173:15295   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15301:15440   */\n    tag_293:\n        /* \"#utility.yul\":15347:15352   */\n      0x00\n        /* \"#utility.yul\":15385:15391   */\n      dup2\n        /* \"#utility.yul\":15372:15392   */\n      calldataload\n        /* \"#utility.yul\":15363:15392   */\n      swap1\n      pop\n        /* \"#utility.yul\":15401:15434   */\n      tag_479\n        /* \"#utility.yul\":15428:15433   */\n      dup2\n        /* \"#utility.yul\":15401:15434   */\n      tag_292\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":15301:15440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15446:16065   */\n    tag_74:\n        /* \"#utility.yul\":15523:15529   */\n      0x00\n        /* \"#utility.yul\":15531:15537   */\n      0x00\n        /* \"#utility.yul\":15539:15545   */\n      0x00\n        /* \"#utility.yul\":15588:15590   */\n      0x60\n        /* \"#utility.yul\":15576:15585   */\n      dup5\n        /* \"#utility.yul\":15567:15574   */\n      dup7\n        /* \"#utility.yul\":15563:15586   */\n      sub\n        /* \"#utility.yul\":15559:15591   */\n      slt\n        /* \"#utility.yul\":15556:15675   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":15594:15673   */\n      tag_482\n      tag_249\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":15556:15675   */\n    tag_481:\n        /* \"#utility.yul\":15714:15715   */\n      0x00\n        /* \"#utility.yul\":15739:15792   */\n      tag_483\n        /* \"#utility.yul\":15784:15791   */\n      dup7\n        /* \"#utility.yul\":15775:15781   */\n      dup3\n        /* \"#utility.yul\":15764:15773   */\n      dup8\n        /* \"#utility.yul\":15760:15782   */\n      add\n        /* \"#utility.yul\":15739:15792   */\n      tag_260\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":15729:15792   */\n      swap4\n      pop\n        /* \"#utility.yul\":15685:15802   */\n      pop\n        /* \"#utility.yul\":15841:15843   */\n      0x20\n        /* \"#utility.yul\":15867:15920   */\n      tag_484\n        /* \"#utility.yul\":15912:15919   */\n      dup7\n        /* \"#utility.yul\":15903:15909   */\n      dup3\n        /* \"#utility.yul\":15892:15901   */\n      dup8\n        /* \"#utility.yul\":15888:15910   */\n      add\n        /* \"#utility.yul\":15867:15920   */\n      tag_260\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":15857:15920   */\n      swap3\n      pop\n        /* \"#utility.yul\":15812:15930   */\n      pop\n        /* \"#utility.yul\":15969:15971   */\n      0x40\n        /* \"#utility.yul\":15995:16048   */\n      tag_485\n        /* \"#utility.yul\":16040:16047   */\n      dup7\n        /* \"#utility.yul\":16031:16037   */\n      dup3\n        /* \"#utility.yul\":16020:16029   */\n      dup8\n        /* \"#utility.yul\":16016:16038   */\n      add\n        /* \"#utility.yul\":15995:16048   */\n      tag_293\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":15985:16048   */\n      swap2\n      pop\n        /* \"#utility.yul\":15940:16058   */\n      pop\n        /* \"#utility.yul\":15446:16065   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":16071:16251   */\n    tag_294:\n        /* \"#utility.yul\":16119:16196   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16116:16117   */\n      0x00\n        /* \"#utility.yul\":16109:16197   */\n      mstore\n        /* \"#utility.yul\":16216:16220   */\n      0x21\n        /* \"#utility.yul\":16213:16214   */\n      0x04\n        /* \"#utility.yul\":16206:16221   */\n      mstore\n        /* \"#utility.yul\":16240:16244   */\n      0x24\n        /* \"#utility.yul\":16237:16238   */\n      0x00\n        /* \"#utility.yul\":16230:16245   */\n      revert\n        /* \"#utility.yul\":16257:16372   */\n    tag_295:\n        /* \"#utility.yul\":16340:16341   */\n      0x07\n        /* \"#utility.yul\":16333:16338   */\n      dup2\n        /* \"#utility.yul\":16330:16342   */\n      lt\n        /* \"#utility.yul\":16320:16366   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":16346:16364   */\n      tag_489\n      tag_294\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":16320:16366   */\n    tag_488:\n        /* \"#utility.yul\":16257:16372   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16378:16509   */\n    tag_296:\n        /* \"#utility.yul\":16425:16432   */\n      0x00\n        /* \"#utility.yul\":16454:16459   */\n      dup2\n        /* \"#utility.yul\":16443:16459   */\n      swap1\n      pop\n        /* \"#utility.yul\":16460:16503   */\n      tag_491\n        /* \"#utility.yul\":16497:16502   */\n      dup3\n        /* \"#utility.yul\":16460:16503   */\n      tag_295\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":16378:16509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16515:16646   */\n    tag_297:\n        /* \"#utility.yul\":16573:16582   */\n      0x00\n        /* \"#utility.yul\":16606:16640   */\n      tag_493\n        /* \"#utility.yul\":16634:16639   */\n      dup3\n        /* \"#utility.yul\":16606:16640   */\n      tag_296\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":16593:16640   */\n      swap1\n      pop\n        /* \"#utility.yul\":16515:16646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16652:16799   */\n    tag_298:\n        /* \"#utility.yul\":16747:16792   */\n      tag_495\n        /* \"#utility.yul\":16786:16791   */\n      dup2\n        /* \"#utility.yul\":16747:16792   */\n      tag_297\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":16742:16745   */\n      dup3\n        /* \"#utility.yul\":16735:16793   */\n      mstore\n        /* \"#utility.yul\":16652:16799   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16805:17043   */\n    tag_85:\n        /* \"#utility.yul\":16906:16910   */\n      0x00\n        /* \"#utility.yul\":16944:16946   */\n      0x20\n        /* \"#utility.yul\":16933:16942   */\n      dup3\n        /* \"#utility.yul\":16929:16947   */\n      add\n        /* \"#utility.yul\":16921:16947   */\n      swap1\n      pop\n        /* \"#utility.yul\":16957:17036   */\n      tag_497\n        /* \"#utility.yul\":17033:17034   */\n      0x00\n        /* \"#utility.yul\":17022:17031   */\n      dup4\n        /* \"#utility.yul\":17018:17035   */\n      add\n        /* \"#utility.yul\":17009:17015   */\n      dup5\n        /* \"#utility.yul\":16957:17036   */\n      tag_298\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":16805:17043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17049:17701   */\n    tag_89:\n        /* \"#utility.yul\":17126:17132   */\n      0x00\n        /* \"#utility.yul\":17134:17140   */\n      0x00\n        /* \"#utility.yul\":17183:17185   */\n      0x40\n        /* \"#utility.yul\":17171:17180   */\n      dup4\n        /* \"#utility.yul\":17162:17169   */\n      dup6\n        /* \"#utility.yul\":17158:17181   */\n      sub\n        /* \"#utility.yul\":17154:17186   */\n      slt\n        /* \"#utility.yul\":17151:17270   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":17189:17268   */\n      tag_500\n      tag_249\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":17151:17270   */\n    tag_499:\n        /* \"#utility.yul\":17309:17310   */\n      0x00\n        /* \"#utility.yul\":17334:17387   */\n      tag_501\n        /* \"#utility.yul\":17379:17386   */\n      dup6\n        /* \"#utility.yul\":17370:17376   */\n      dup3\n        /* \"#utility.yul\":17359:17368   */\n      dup7\n        /* \"#utility.yul\":17355:17377   */\n      add\n        /* \"#utility.yul\":17334:17387   */\n      tag_293\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":17324:17387   */\n      swap3\n      pop\n        /* \"#utility.yul\":17280:17397   */\n      pop\n        /* \"#utility.yul\":17464:17466   */\n      0x20\n        /* \"#utility.yul\":17453:17462   */\n      dup4\n        /* \"#utility.yul\":17449:17467   */\n      add\n        /* \"#utility.yul\":17436:17468   */\n      calldataload\n        /* \"#utility.yul\":17495:17513   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17487:17493   */\n      dup2\n        /* \"#utility.yul\":17484:17514   */\n      gt\n        /* \"#utility.yul\":17481:17598   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":17517:17596   */\n      tag_503\n      tag_250\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":17481:17598   */\n    tag_502:\n        /* \"#utility.yul\":17622:17684   */\n      tag_504\n        /* \"#utility.yul\":17676:17683   */\n      dup6\n        /* \"#utility.yul\":17667:17673   */\n      dup3\n        /* \"#utility.yul\":17656:17665   */\n      dup7\n        /* \"#utility.yul\":17652:17674   */\n      add\n        /* \"#utility.yul\":17622:17684   */\n      tag_267\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":17612:17684   */\n      swap2\n      pop\n        /* \"#utility.yul\":17407:17694   */\n      pop\n        /* \"#utility.yul\":17049:17701   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17707:18036   */\n    tag_97:\n        /* \"#utility.yul\":17766:17772   */\n      0x00\n        /* \"#utility.yul\":17815:17817   */\n      0x20\n        /* \"#utility.yul\":17803:17812   */\n      dup3\n        /* \"#utility.yul\":17794:17801   */\n      dup5\n        /* \"#utility.yul\":17790:17813   */\n      sub\n        /* \"#utility.yul\":17786:17818   */\n      slt\n        /* \"#utility.yul\":17783:17902   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":17821:17900   */\n      tag_507\n      tag_249\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":17783:17902   */\n    tag_506:\n        /* \"#utility.yul\":17941:17942   */\n      0x00\n        /* \"#utility.yul\":17966:18019   */\n      tag_508\n        /* \"#utility.yul\":18011:18018   */\n      dup5\n        /* \"#utility.yul\":18002:18008   */\n      dup3\n        /* \"#utility.yul\":17991:18000   */\n      dup6\n        /* \"#utility.yul\":17987:18009   */\n      add\n        /* \"#utility.yul\":17966:18019   */\n      tag_293\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":17956:18019   */\n      swap2\n      pop\n        /* \"#utility.yul\":17912:18029   */\n      pop\n        /* \"#utility.yul\":17707:18036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18042:18222   */\n    tag_145:\n        /* \"#utility.yul\":18090:18167   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18087:18088   */\n      0x00\n        /* \"#utility.yul\":18080:18168   */\n      mstore\n        /* \"#utility.yul\":18187:18191   */\n      0x32\n        /* \"#utility.yul\":18184:18185   */\n      0x04\n        /* \"#utility.yul\":18177:18192   */\n      mstore\n        /* \"#utility.yul\":18211:18215   */\n      0x24\n        /* \"#utility.yul\":18208:18209   */\n      0x00\n        /* \"#utility.yul\":18201:18216   */\n      revert\n        /* \"#utility.yul\":18228:18326   */\n    tag_299:\n        /* \"#utility.yul\":18279:18285   */\n      0x00\n        /* \"#utility.yul\":18313:18318   */\n      dup2\n        /* \"#utility.yul\":18307:18319   */\n      mload\n        /* \"#utility.yul\":18297:18319   */\n      swap1\n      pop\n        /* \"#utility.yul\":18228:18326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18332:18500   */\n    tag_300:\n        /* \"#utility.yul\":18415:18426   */\n      0x00\n        /* \"#utility.yul\":18449:18455   */\n      dup3\n        /* \"#utility.yul\":18444:18447   */\n      dup3\n        /* \"#utility.yul\":18437:18456   */\n      mstore\n        /* \"#utility.yul\":18489:18493   */\n      0x20\n        /* \"#utility.yul\":18484:18487   */\n      dup3\n        /* \"#utility.yul\":18480:18494   */\n      add\n        /* \"#utility.yul\":18465:18494   */\n      swap1\n      pop\n        /* \"#utility.yul\":18332:18500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18506:18645   */\n    tag_301:\n        /* \"#utility.yul\":18595:18601   */\n      dup3\n        /* \"#utility.yul\":18590:18593   */\n      dup2\n        /* \"#utility.yul\":18585:18588   */\n      dup4\n        /* \"#utility.yul\":18579:18602   */\n      mcopy\n        /* \"#utility.yul\":18636:18637   */\n      0x00\n        /* \"#utility.yul\":18627:18633   */\n      dup4\n        /* \"#utility.yul\":18622:18625   */\n      dup4\n        /* \"#utility.yul\":18618:18634   */\n      add\n        /* \"#utility.yul\":18611:18638   */\n      mstore\n        /* \"#utility.yul\":18506:18645   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18651:19024   */\n    tag_302:\n        /* \"#utility.yul\":18737:18740   */\n      0x00\n        /* \"#utility.yul\":18765:18803   */\n      tag_514\n        /* \"#utility.yul\":18797:18802   */\n      dup3\n        /* \"#utility.yul\":18765:18803   */\n      tag_299\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":18819:18889   */\n      tag_515\n        /* \"#utility.yul\":18882:18888   */\n      dup2\n        /* \"#utility.yul\":18877:18880   */\n      dup6\n        /* \"#utility.yul\":18819:18889   */\n      tag_300\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":18812:18889   */\n      swap4\n      pop\n        /* \"#utility.yul\":18898:18963   */\n      tag_516\n        /* \"#utility.yul\":18956:18962   */\n      dup2\n        /* \"#utility.yul\":18951:18954   */\n      dup6\n        /* \"#utility.yul\":18944:18948   */\n      0x20\n        /* \"#utility.yul\":18937:18942   */\n      dup7\n        /* \"#utility.yul\":18933:18949   */\n      add\n        /* \"#utility.yul\":18898:18963   */\n      tag_301\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":18988:19017   */\n      tag_517\n        /* \"#utility.yul\":19010:19016   */\n      dup2\n        /* \"#utility.yul\":18988:19017   */\n      tag_252\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":18983:18986   */\n      dup5\n        /* \"#utility.yul\":18979:19018   */\n      add\n        /* \"#utility.yul\":18972:19018   */\n      swap2\n      pop\n        /* \"#utility.yul\":18741:19024   */\n      pop\n        /* \"#utility.yul\":18651:19024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19030:19449   */\n    tag_167:\n        /* \"#utility.yul\":19169:19173   */\n      0x00\n        /* \"#utility.yul\":19207:19209   */\n      0x40\n        /* \"#utility.yul\":19196:19205   */\n      dup3\n        /* \"#utility.yul\":19192:19210   */\n      add\n        /* \"#utility.yul\":19184:19210   */\n      swap1\n      pop\n        /* \"#utility.yul\":19220:19291   */\n      tag_519\n        /* \"#utility.yul\":19288:19289   */\n      0x00\n        /* \"#utility.yul\":19277:19286   */\n      dup4\n        /* \"#utility.yul\":19273:19290   */\n      add\n        /* \"#utility.yul\":19264:19270   */\n      dup6\n        /* \"#utility.yul\":19220:19291   */\n      tag_275\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":19338:19347   */\n      dup2\n        /* \"#utility.yul\":19332:19336   */\n      dup2\n        /* \"#utility.yul\":19328:19348   */\n      sub\n        /* \"#utility.yul\":19323:19325   */\n      0x20\n        /* \"#utility.yul\":19312:19321   */\n      dup4\n        /* \"#utility.yul\":19308:19326   */\n      add\n        /* \"#utility.yul\":19301:19349   */\n      mstore\n        /* \"#utility.yul\":19366:19442   */\n      tag_520\n        /* \"#utility.yul\":19437:19441   */\n      dup2\n        /* \"#utility.yul\":19428:19434   */\n      dup5\n        /* \"#utility.yul\":19366:19442   */\n      tag_302\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":19358:19442   */\n      swap1\n      pop\n        /* \"#utility.yul\":19030:19449   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19455:19635   */\n    tag_303:\n        /* \"#utility.yul\":19503:19580   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19500:19501   */\n      0x00\n        /* \"#utility.yul\":19493:19581   */\n      mstore\n        /* \"#utility.yul\":19600:19604   */\n      0x11\n        /* \"#utility.yul\":19597:19598   */\n      0x04\n        /* \"#utility.yul\":19590:19605   */\n      mstore\n        /* \"#utility.yul\":19624:19628   */\n      0x24\n        /* \"#utility.yul\":19621:19622   */\n      0x00\n        /* \"#utility.yul\":19614:19629   */\n      revert\n        /* \"#utility.yul\":19641:19832   */\n    tag_185:\n        /* \"#utility.yul\":19681:19684   */\n      0x00\n        /* \"#utility.yul\":19700:19720   */\n      tag_523\n        /* \"#utility.yul\":19718:19719   */\n      dup3\n        /* \"#utility.yul\":19700:19720   */\n      tag_274\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":19695:19720   */\n      swap2\n      pop\n        /* \"#utility.yul\":19734:19754   */\n      tag_524\n        /* \"#utility.yul\":19752:19753   */\n      dup4\n        /* \"#utility.yul\":19734:19754   */\n      tag_274\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":19729:19754   */\n      swap3\n      pop\n        /* \"#utility.yul\":19777:19778   */\n      dup3\n        /* \"#utility.yul\":19774:19775   */\n      dup3\n        /* \"#utility.yul\":19770:19779   */\n      add\n        /* \"#utility.yul\":19763:19779   */\n      swap1\n      pop\n        /* \"#utility.yul\":19798:19801   */\n      dup1\n        /* \"#utility.yul\":19795:19796   */\n      dup3\n        /* \"#utility.yul\":19792:19802   */\n      gt\n        /* \"#utility.yul\":19789:19825   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":19805:19823   */\n      tag_526\n      tag_303\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":19789:19825   */\n    tag_525:\n        /* \"#utility.yul\":19641:19832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19838:20170   */\n    tag_203:\n        /* \"#utility.yul\":19959:19963   */\n      0x00\n        /* \"#utility.yul\":19997:19999   */\n      0x40\n        /* \"#utility.yul\":19986:19995   */\n      dup3\n        /* \"#utility.yul\":19982:20000   */\n      add\n        /* \"#utility.yul\":19974:20000   */\n      swap1\n      pop\n        /* \"#utility.yul\":20010:20081   */\n      tag_528\n        /* \"#utility.yul\":20078:20079   */\n      0x00\n        /* \"#utility.yul\":20067:20076   */\n      dup4\n        /* \"#utility.yul\":20063:20080   */\n      add\n        /* \"#utility.yul\":20054:20060   */\n      dup6\n        /* \"#utility.yul\":20010:20081   */\n      tag_275\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":20091:20163   */\n      tag_529\n        /* \"#utility.yul\":20159:20161   */\n      0x20\n        /* \"#utility.yul\":20148:20157   */\n      dup4\n        /* \"#utility.yul\":20144:20162   */\n      add\n        /* \"#utility.yul\":20135:20141   */\n      dup5\n        /* \"#utility.yul\":20091:20163   */\n      tag_273\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":19838:20170   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20176:20292   */\n    tag_304:\n        /* \"#utility.yul\":20246:20267   */\n      tag_531\n        /* \"#utility.yul\":20261:20266   */\n      dup2\n        /* \"#utility.yul\":20246:20267   */\n      tag_278\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":20239:20244   */\n      dup2\n        /* \"#utility.yul\":20236:20268   */\n      eq\n        /* \"#utility.yul\":20226:20286   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":20282:20283   */\n      0x00\n        /* \"#utility.yul\":20279:20280   */\n      0x00\n        /* \"#utility.yul\":20272:20284   */\n      revert\n        /* \"#utility.yul\":20226:20286   */\n    tag_532:\n        /* \"#utility.yul\":20176:20292   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20298:20435   */\n    tag_305:\n        /* \"#utility.yul\":20352:20357   */\n      0x00\n        /* \"#utility.yul\":20383:20389   */\n      dup2\n        /* \"#utility.yul\":20377:20390   */\n      mload\n        /* \"#utility.yul\":20368:20390   */\n      swap1\n      pop\n        /* \"#utility.yul\":20399:20429   */\n      tag_534\n        /* \"#utility.yul\":20423:20428   */\n      dup2\n        /* \"#utility.yul\":20399:20429   */\n      tag_304\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":20298:20435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20441:20786   */\n    tag_207:\n        /* \"#utility.yul\":20508:20514   */\n      0x00\n        /* \"#utility.yul\":20557:20559   */\n      0x20\n        /* \"#utility.yul\":20545:20554   */\n      dup3\n        /* \"#utility.yul\":20536:20543   */\n      dup5\n        /* \"#utility.yul\":20532:20555   */\n      sub\n        /* \"#utility.yul\":20528:20560   */\n      slt\n        /* \"#utility.yul\":20525:20644   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":20563:20642   */\n      tag_537\n      tag_249\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":20525:20644   */\n    tag_536:\n        /* \"#utility.yul\":20683:20684   */\n      0x00\n        /* \"#utility.yul\":20708:20769   */\n      tag_538\n        /* \"#utility.yul\":20761:20768   */\n      dup5\n        /* \"#utility.yul\":20752:20758   */\n      dup3\n        /* \"#utility.yul\":20741:20750   */\n      dup6\n        /* \"#utility.yul\":20737:20759   */\n      add\n        /* \"#utility.yul\":20708:20769   */\n      tag_305\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":20698:20769   */\n      swap2\n      pop\n        /* \"#utility.yul\":20654:20779   */\n      pop\n        /* \"#utility.yul\":20441:20786   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20792:20935   */\n    tag_306:\n        /* \"#utility.yul\":20849:20854   */\n      0x00\n        /* \"#utility.yul\":20880:20886   */\n      dup2\n        /* \"#utility.yul\":20874:20887   */\n      mload\n        /* \"#utility.yul\":20865:20887   */\n      swap1\n      pop\n        /* \"#utility.yul\":20896:20929   */\n      tag_540\n        /* \"#utility.yul\":20923:20928   */\n      dup2\n        /* \"#utility.yul\":20896:20929   */\n      tag_259\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":20792:20935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20958:21690   */\n    tag_307:\n        /* \"#utility.yul\":21065:21070   */\n      0x00\n        /* \"#utility.yul\":21090:21171   */\n      tag_542\n        /* \"#utility.yul\":21106:21170   */\n      tag_543\n        /* \"#utility.yul\":21163:21169   */\n      dup5\n        /* \"#utility.yul\":21106:21170   */\n      tag_255\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":21090:21171   */\n      tag_254\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":21081:21171   */\n      swap1\n      pop\n        /* \"#utility.yul\":21191:21196   */\n      dup1\n        /* \"#utility.yul\":21220:21226   */\n      dup4\n        /* \"#utility.yul\":21213:21218   */\n      dup3\n        /* \"#utility.yul\":21206:21227   */\n      mstore\n        /* \"#utility.yul\":21254:21258   */\n      0x20\n        /* \"#utility.yul\":21247:21252   */\n      dup3\n        /* \"#utility.yul\":21243:21259   */\n      add\n        /* \"#utility.yul\":21236:21259   */\n      swap1\n      pop\n        /* \"#utility.yul\":21307:21311   */\n      0x20\n        /* \"#utility.yul\":21299:21305   */\n      dup5\n        /* \"#utility.yul\":21295:21312   */\n      mul\n        /* \"#utility.yul\":21287:21293   */\n      dup4\n        /* \"#utility.yul\":21283:21313   */\n      add\n        /* \"#utility.yul\":21336:21339   */\n      dup6\n        /* \"#utility.yul\":21328:21334   */\n      dup2\n        /* \"#utility.yul\":21325:21340   */\n      gt\n        /* \"#utility.yul\":21322:21444   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":21355:21434   */\n      tag_545\n      tag_256\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":21322:21444   */\n    tag_544:\n        /* \"#utility.yul\":21470:21476   */\n      dup4\n        /* \"#utility.yul\":21453:21684   */\n    tag_546:\n        /* \"#utility.yul\":21487:21493   */\n      dup2\n        /* \"#utility.yul\":21482:21485   */\n      dup2\n        /* \"#utility.yul\":21479:21494   */\n      lt\n        /* \"#utility.yul\":21453:21684   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":21562:21565   */\n      dup1\n        /* \"#utility.yul\":21591:21639   */\n      tag_549\n        /* \"#utility.yul\":21635:21638   */\n      dup9\n        /* \"#utility.yul\":21623:21633   */\n      dup3\n        /* \"#utility.yul\":21591:21639   */\n      tag_306\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":21586:21589   */\n      dup5\n        /* \"#utility.yul\":21579:21640   */\n      mstore\n        /* \"#utility.yul\":21669:21673   */\n      0x20\n        /* \"#utility.yul\":21664:21667   */\n      dup5\n        /* \"#utility.yul\":21660:21674   */\n      add\n        /* \"#utility.yul\":21653:21674   */\n      swap4\n      pop\n        /* \"#utility.yul\":21529:21684   */\n      pop\n        /* \"#utility.yul\":21513:21517   */\n      0x20\n        /* \"#utility.yul\":21508:21511   */\n      dup2\n        /* \"#utility.yul\":21504:21518   */\n      add\n        /* \"#utility.yul\":21497:21518   */\n      swap1\n      pop\n        /* \"#utility.yul\":21453:21684   */\n      jump(tag_546)\n    tag_548:\n        /* \"#utility.yul\":21457:21478   */\n      pop\n        /* \"#utility.yul\":21071:21690   */\n      pop\n      pop\n        /* \"#utility.yul\":20958:21690   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21713:22098   */\n    tag_308:\n        /* \"#utility.yul\":21795:21800   */\n      0x00\n        /* \"#utility.yul\":21844:21847   */\n      dup3\n        /* \"#utility.yul\":21837:21841   */\n      0x1f\n        /* \"#utility.yul\":21829:21835   */\n      dup4\n        /* \"#utility.yul\":21825:21842   */\n      add\n        /* \"#utility.yul\":21821:21848   */\n      slt\n        /* \"#utility.yul\":21811:21933   */\n      tag_551\n      jumpi\n        /* \"#utility.yul\":21852:21931   */\n      tag_552\n      tag_251\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":21811:21933   */\n    tag_551:\n        /* \"#utility.yul\":21962:21968   */\n      dup2\n        /* \"#utility.yul\":21956:21969   */\n      mload\n        /* \"#utility.yul\":21987:22092   */\n      tag_553\n        /* \"#utility.yul\":22088:22091   */\n      dup5\n        /* \"#utility.yul\":22080:22086   */\n      dup3\n        /* \"#utility.yul\":22073:22077   */\n      0x20\n        /* \"#utility.yul\":22065:22071   */\n      dup7\n        /* \"#utility.yul\":22061:22078   */\n      add\n        /* \"#utility.yul\":21987:22092   */\n      tag_307\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":21978:22092   */\n      swap2\n      pop\n        /* \"#utility.yul\":21801:22098   */\n      pop\n        /* \"#utility.yul\":21713:22098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22104:22415   */\n    tag_309:\n        /* \"#utility.yul\":22181:22185   */\n      0x00\n        /* \"#utility.yul\":22271:22289   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":22263:22269   */\n      dup3\n        /* \"#utility.yul\":22260:22290   */\n      gt\n        /* \"#utility.yul\":22257:22313   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":22293:22311   */\n      tag_556\n      tag_134\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":22257:22313   */\n    tag_555:\n        /* \"#utility.yul\":22343:22347   */\n      0x20\n        /* \"#utility.yul\":22335:22341   */\n      dup3\n        /* \"#utility.yul\":22331:22348   */\n      mul\n        /* \"#utility.yul\":22323:22348   */\n      swap1\n      pop\n        /* \"#utility.yul\":22403:22407   */\n      0x20\n        /* \"#utility.yul\":22397:22401   */\n      dup2\n        /* \"#utility.yul\":22393:22408   */\n      add\n        /* \"#utility.yul\":22385:22408   */\n      swap1\n      pop\n        /* \"#utility.yul\":22104:22415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22421:22564   */\n    tag_310:\n        /* \"#utility.yul\":22478:22483   */\n      0x00\n        /* \"#utility.yul\":22509:22515   */\n      dup2\n        /* \"#utility.yul\":22503:22516   */\n      mload\n        /* \"#utility.yul\":22494:22516   */\n      swap1\n      pop\n        /* \"#utility.yul\":22525:22558   */\n      tag_558\n        /* \"#utility.yul\":22552:22557   */\n      dup2\n        /* \"#utility.yul\":22525:22558   */\n      tag_292\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":22421:22564   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22587:23319   */\n    tag_311:\n        /* \"#utility.yul\":22694:22699   */\n      0x00\n        /* \"#utility.yul\":22719:22800   */\n      tag_560\n        /* \"#utility.yul\":22735:22799   */\n      tag_561\n        /* \"#utility.yul\":22792:22798   */\n      dup5\n        /* \"#utility.yul\":22735:22799   */\n      tag_309\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":22719:22800   */\n      tag_254\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":22710:22800   */\n      swap1\n      pop\n        /* \"#utility.yul\":22820:22825   */\n      dup1\n        /* \"#utility.yul\":22849:22855   */\n      dup4\n        /* \"#utility.yul\":22842:22847   */\n      dup3\n        /* \"#utility.yul\":22835:22856   */\n      mstore\n        /* \"#utility.yul\":22883:22887   */\n      0x20\n        /* \"#utility.yul\":22876:22881   */\n      dup3\n        /* \"#utility.yul\":22872:22888   */\n      add\n        /* \"#utility.yul\":22865:22888   */\n      swap1\n      pop\n        /* \"#utility.yul\":22936:22940   */\n      0x20\n        /* \"#utility.yul\":22928:22934   */\n      dup5\n        /* \"#utility.yul\":22924:22941   */\n      mul\n        /* \"#utility.yul\":22916:22922   */\n      dup4\n        /* \"#utility.yul\":22912:22942   */\n      add\n        /* \"#utility.yul\":22965:22968   */\n      dup6\n        /* \"#utility.yul\":22957:22963   */\n      dup2\n        /* \"#utility.yul\":22954:22969   */\n      gt\n        /* \"#utility.yul\":22951:23073   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":22984:23063   */\n      tag_563\n      tag_256\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":22951:23073   */\n    tag_562:\n        /* \"#utility.yul\":23099:23105   */\n      dup4\n        /* \"#utility.yul\":23082:23313   */\n    tag_564:\n        /* \"#utility.yul\":23116:23122   */\n      dup2\n        /* \"#utility.yul\":23111:23114   */\n      dup2\n        /* \"#utility.yul\":23108:23123   */\n      lt\n        /* \"#utility.yul\":23082:23313   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":23191:23194   */\n      dup1\n        /* \"#utility.yul\":23220:23268   */\n      tag_567\n        /* \"#utility.yul\":23264:23267   */\n      dup9\n        /* \"#utility.yul\":23252:23262   */\n      dup3\n        /* \"#utility.yul\":23220:23268   */\n      tag_310\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":23215:23218   */\n      dup5\n        /* \"#utility.yul\":23208:23269   */\n      mstore\n        /* \"#utility.yul\":23298:23302   */\n      0x20\n        /* \"#utility.yul\":23293:23296   */\n      dup5\n        /* \"#utility.yul\":23289:23303   */\n      add\n        /* \"#utility.yul\":23282:23303   */\n      swap4\n      pop\n        /* \"#utility.yul\":23158:23313   */\n      pop\n        /* \"#utility.yul\":23142:23146   */\n      0x20\n        /* \"#utility.yul\":23137:23140   */\n      dup2\n        /* \"#utility.yul\":23133:23147   */\n      add\n        /* \"#utility.yul\":23126:23147   */\n      swap1\n      pop\n        /* \"#utility.yul\":23082:23313   */\n      jump(tag_564)\n    tag_566:\n        /* \"#utility.yul\":23086:23107   */\n      pop\n        /* \"#utility.yul\":22700:23319   */\n      pop\n      pop\n        /* \"#utility.yul\":22587:23319   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23342:23727   */\n    tag_312:\n        /* \"#utility.yul\":23424:23429   */\n      0x00\n        /* \"#utility.yul\":23473:23476   */\n      dup3\n        /* \"#utility.yul\":23466:23470   */\n      0x1f\n        /* \"#utility.yul\":23458:23464   */\n      dup4\n        /* \"#utility.yul\":23454:23471   */\n      add\n        /* \"#utility.yul\":23450:23477   */\n      slt\n        /* \"#utility.yul\":23440:23562   */\n      tag_569\n      jumpi\n        /* \"#utility.yul\":23481:23560   */\n      tag_570\n      tag_251\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":23440:23562   */\n    tag_569:\n        /* \"#utility.yul\":23591:23597   */\n      dup2\n        /* \"#utility.yul\":23585:23598   */\n      mload\n        /* \"#utility.yul\":23616:23721   */\n      tag_571\n        /* \"#utility.yul\":23717:23720   */\n      dup5\n        /* \"#utility.yul\":23709:23715   */\n      dup3\n        /* \"#utility.yul\":23702:23706   */\n      0x20\n        /* \"#utility.yul\":23694:23700   */\n      dup7\n        /* \"#utility.yul\":23690:23707   */\n      add\n        /* \"#utility.yul\":23616:23721   */\n      tag_311\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":23607:23721   */\n      swap2\n      pop\n        /* \"#utility.yul\":23430:23727   */\n      pop\n        /* \"#utility.yul\":23342:23727   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23733:23837   */\n    tag_313:\n        /* \"#utility.yul\":23778:23785   */\n      0x00\n        /* \"#utility.yul\":23807:23831   */\n      tag_573\n        /* \"#utility.yul\":23825:23830   */\n      dup3\n        /* \"#utility.yul\":23807:23831   */\n      tag_257\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":23796:23831   */\n      swap1\n      pop\n        /* \"#utility.yul\":23733:23837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23843:23981   */\n    tag_314:\n        /* \"#utility.yul\":23924:23956   */\n      tag_575\n        /* \"#utility.yul\":23950:23955   */\n      dup2\n        /* \"#utility.yul\":23924:23956   */\n      tag_313\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":23917:23922   */\n      dup2\n        /* \"#utility.yul\":23914:23957   */\n      eq\n        /* \"#utility.yul\":23904:23975   */\n      tag_576\n      jumpi\n        /* \"#utility.yul\":23971:23972   */\n      0x00\n        /* \"#utility.yul\":23968:23969   */\n      0x00\n        /* \"#utility.yul\":23961:23973   */\n      revert\n        /* \"#utility.yul\":23904:23975   */\n    tag_576:\n        /* \"#utility.yul\":23843:23981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23987:24146   */\n    tag_315:\n        /* \"#utility.yul\":24052:24057   */\n      0x00\n        /* \"#utility.yul\":24083:24089   */\n      dup2\n        /* \"#utility.yul\":24077:24090   */\n      mload\n        /* \"#utility.yul\":24068:24090   */\n      swap1\n      pop\n        /* \"#utility.yul\":24099:24140   */\n      tag_578\n        /* \"#utility.yul\":24134:24139   */\n      dup2\n        /* \"#utility.yul\":24099:24140   */\n      tag_314\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":23987:24146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24152:25237   */\n    tag_228:\n        /* \"#utility.yul\":24298:24304   */\n      0x00\n        /* \"#utility.yul\":24306:24312   */\n      0x00\n        /* \"#utility.yul\":24314:24320   */\n      0x00\n        /* \"#utility.yul\":24363:24365   */\n      0x60\n        /* \"#utility.yul\":24351:24360   */\n      dup5\n        /* \"#utility.yul\":24342:24349   */\n      dup7\n        /* \"#utility.yul\":24338:24361   */\n      sub\n        /* \"#utility.yul\":24334:24366   */\n      slt\n        /* \"#utility.yul\":24331:24450   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":24369:24448   */\n      tag_581\n      tag_249\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":24331:24450   */\n    tag_580:\n        /* \"#utility.yul\":24510:24511   */\n      0x00\n        /* \"#utility.yul\":24499:24508   */\n      dup5\n        /* \"#utility.yul\":24495:24512   */\n      add\n        /* \"#utility.yul\":24489:24513   */\n      mload\n        /* \"#utility.yul\":24540:24558   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24532:24538   */\n      dup2\n        /* \"#utility.yul\":24529:24559   */\n      gt\n        /* \"#utility.yul\":24526:24643   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":24562:24641   */\n      tag_583\n      tag_250\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":24526:24643   */\n    tag_582:\n        /* \"#utility.yul\":24667:24756   */\n      tag_584\n        /* \"#utility.yul\":24748:24755   */\n      dup7\n        /* \"#utility.yul\":24739:24745   */\n      dup3\n        /* \"#utility.yul\":24728:24737   */\n      dup8\n        /* \"#utility.yul\":24724:24746   */\n      add\n        /* \"#utility.yul\":24667:24756   */\n      tag_308\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":24657:24756   */\n      swap4\n      pop\n        /* \"#utility.yul\":24460:24766   */\n      pop\n        /* \"#utility.yul\":24826:24828   */\n      0x20\n        /* \"#utility.yul\":24815:24824   */\n      dup5\n        /* \"#utility.yul\":24811:24829   */\n      add\n        /* \"#utility.yul\":24805:24830   */\n      mload\n        /* \"#utility.yul\":24857:24875   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24849:24855   */\n      dup2\n        /* \"#utility.yul\":24846:24876   */\n      gt\n        /* \"#utility.yul\":24843:24960   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":24879:24958   */\n      tag_586\n      tag_250\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":24843:24960   */\n    tag_585:\n        /* \"#utility.yul\":24984:25073   */\n      tag_587\n        /* \"#utility.yul\":25065:25072   */\n      dup7\n        /* \"#utility.yul\":25056:25062   */\n      dup3\n        /* \"#utility.yul\":25045:25054   */\n      dup8\n        /* \"#utility.yul\":25041:25063   */\n      add\n        /* \"#utility.yul\":24984:25073   */\n      tag_312\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":24974:25073   */\n      swap3\n      pop\n        /* \"#utility.yul\":24776:25083   */\n      pop\n        /* \"#utility.yul\":25122:25124   */\n      0x40\n        /* \"#utility.yul\":25148:25220   */\n      tag_588\n        /* \"#utility.yul\":25212:25219   */\n      dup7\n        /* \"#utility.yul\":25203:25209   */\n      dup3\n        /* \"#utility.yul\":25192:25201   */\n      dup8\n        /* \"#utility.yul\":25188:25210   */\n      add\n        /* \"#utility.yul\":25148:25220   */\n      tag_315\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":25138:25220   */\n      swap2\n      pop\n        /* \"#utility.yul\":25093:25230   */\n      pop\n        /* \"#utility.yul\":24152:25237   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":25243:25685   */\n    tag_240:\n        /* \"#utility.yul\":25392:25396   */\n      0x00\n        /* \"#utility.yul\":25430:25432   */\n      0x60\n        /* \"#utility.yul\":25419:25428   */\n      dup3\n        /* \"#utility.yul\":25415:25433   */\n      add\n        /* \"#utility.yul\":25407:25433   */\n      swap1\n      pop\n        /* \"#utility.yul\":25443:25514   */\n      tag_590\n        /* \"#utility.yul\":25511:25512   */\n      0x00\n        /* \"#utility.yul\":25500:25509   */\n      dup4\n        /* \"#utility.yul\":25496:25513   */\n      add\n        /* \"#utility.yul\":25487:25493   */\n      dup7\n        /* \"#utility.yul\":25443:25514   */\n      tag_275\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":25524:25596   */\n      tag_591\n        /* \"#utility.yul\":25592:25594   */\n      0x20\n        /* \"#utility.yul\":25581:25590   */\n      dup4\n        /* \"#utility.yul\":25577:25595   */\n      add\n        /* \"#utility.yul\":25568:25574   */\n      dup6\n        /* \"#utility.yul\":25524:25596   */\n      tag_273\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":25606:25678   */\n      tag_592\n        /* \"#utility.yul\":25674:25676   */\n      0x40\n        /* \"#utility.yul\":25663:25672   */\n      dup4\n        /* \"#utility.yul\":25659:25677   */\n      add\n        /* \"#utility.yul\":25650:25656   */\n      dup5\n        /* \"#utility.yul\":25606:25678   */\n      tag_273\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":25243:25685   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122012c4e530567e7b87f67a652e44161d8493261144681370f393508b81a2e1a38964736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1094": {
									"entryPoint": null,
									"id": 1094,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_1834": {
									"entryPoint": null,
									"id": 1834,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 158,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 167,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4746:10",
										"nodeType": "YulBlock",
										"src": "0:4746:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "934:28:10",
													"nodeType": "YulBlock",
													"src": "934:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:10",
																		"nodeType": "YulLiteral",
																		"src": "951:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:10",
																		"nodeType": "YulLiteral",
																		"src": "954:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:10"
																},
																"nativeSrc": "944:12:10",
																"nodeType": "YulFunctionCall",
																"src": "944:12:10"
															},
															"nativeSrc": "944:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "845:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:10"
											},
											{
												"body": {
													"nativeSrc": "1057:28:10",
													"nodeType": "YulBlock",
													"src": "1057:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1074:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1077:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1067:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:10"
																},
																"nativeSrc": "1067:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1067:12:10"
															},
															"nativeSrc": "1067:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "968:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:10"
											},
											{
												"body": {
													"nativeSrc": "1139:54:10",
													"nodeType": "YulBlock",
													"src": "1139:54:10",
													"statements": [
														{
															"nativeSrc": "1149:38:10",
															"nodeType": "YulAssignment",
															"src": "1149:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1167:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1174:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:10"
																		},
																		"nativeSrc": "1163:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1183:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1179:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:10"
																		},
																		"nativeSrc": "1179:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1159:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:10"
																},
																"nativeSrc": "1159:28:10",
																"nodeType": "YulFunctionCall",
																"src": "1159:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1149:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1091:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1122:5:10",
														"nodeType": "YulTypedName",
														"src": "1122:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1132:6:10",
														"nodeType": "YulTypedName",
														"src": "1132:6:10",
														"type": ""
													}
												],
												"src": "1091:102:10"
											},
											{
												"body": {
													"nativeSrc": "1227:152:10",
													"nodeType": "YulBlock",
													"src": "1227:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:77:10",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1237:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:10"
																},
																"nativeSrc": "1237:88:10",
																"nodeType": "YulFunctionCall",
																"src": "1237:88:10"
															},
															"nativeSrc": "1237:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1344:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:10"
																},
																"nativeSrc": "1334:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1334:15:10"
															},
															"nativeSrc": "1334:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1368:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1358:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:10"
																},
																"nativeSrc": "1358:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1358:15:10"
															},
															"nativeSrc": "1358:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1199:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:10"
											},
											{
												"body": {
													"nativeSrc": "1428:238:10",
													"nodeType": "YulBlock",
													"src": "1428:238:10",
													"statements": [
														{
															"nativeSrc": "1438:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1460:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1490:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1468:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:10"
																		},
																		"nativeSrc": "1468:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1456:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:10"
																},
																"nativeSrc": "1456:40:10",
																"nodeType": "YulFunctionCall",
																"src": "1456:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1442:10:10",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:22:10",
																"nodeType": "YulBlock",
																"src": "1607:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1609:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:10"
																			},
																			"nativeSrc": "1609:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:10"
																		},
																		"nativeSrc": "1609:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1550:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1562:18:10",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1547:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:10"
																		},
																		"nativeSrc": "1547:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1586:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1598:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1583:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:10"
																		},
																		"nativeSrc": "1583:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1544:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:10"
																},
																"nativeSrc": "1544:62:10",
																"nodeType": "YulFunctionCall",
																"src": "1544:62:10"
															},
															"nativeSrc": "1541:88:10",
															"nodeType": "YulIf",
															"src": "1541:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1645:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1649:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1638:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:10"
																},
																"nativeSrc": "1638:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1638:22:10"
															},
															"nativeSrc": "1638:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1385:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1414:6:10",
														"nodeType": "YulTypedName",
														"src": "1414:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1422:4:10",
														"nodeType": "YulTypedName",
														"src": "1422:4:10",
														"type": ""
													}
												],
												"src": "1385:281:10"
											},
											{
												"body": {
													"nativeSrc": "1713:88:10",
													"nodeType": "YulBlock",
													"src": "1713:88:10",
													"statements": [
														{
															"nativeSrc": "1723:30:10",
															"nodeType": "YulAssignment",
															"src": "1723:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1733:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:10"
																},
																"nativeSrc": "1733:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1733:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1723:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1782:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1790:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1762:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:10"
																},
																"nativeSrc": "1762:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1762:33:10"
															},
															"nativeSrc": "1762:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1672:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1697:4:10",
														"nodeType": "YulTypedName",
														"src": "1697:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1706:6:10",
														"nodeType": "YulTypedName",
														"src": "1706:6:10",
														"type": ""
													}
												],
												"src": "1672:129:10"
											},
											{
												"body": {
													"nativeSrc": "1874:241:10",
													"nodeType": "YulBlock",
													"src": "1874:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1979:22:10",
																"nodeType": "YulBlock",
																"src": "1979:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1981:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1981:16:10"
																			},
																			"nativeSrc": "1981:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1981:18:10"
																		},
																		"nativeSrc": "1981:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1981:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1951:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1959:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1959:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1948:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:10"
																},
																"nativeSrc": "1948:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1948:30:10"
															},
															"nativeSrc": "1945:56:10",
															"nodeType": "YulIf",
															"src": "1945:56:10"
														},
														{
															"nativeSrc": "2011:37:10",
															"nodeType": "YulAssignment",
															"src": "2011:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2041:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2041:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2019:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "2019:21:10"
																},
																"nativeSrc": "2019:29:10",
																"nodeType": "YulFunctionCall",
																"src": "2019:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2011:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:10"
																}
															]
														},
														{
															"nativeSrc": "2085:23:10",
															"nodeType": "YulAssignment",
															"src": "2085:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2097:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2097:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2093:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:10"
																},
																"nativeSrc": "2093:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2093:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2085:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2085:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1807:308:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1858:6:10",
														"nodeType": "YulTypedName",
														"src": "1858:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1869:4:10",
														"nodeType": "YulTypedName",
														"src": "1869:4:10",
														"type": ""
													}
												],
												"src": "1807:308:10"
											},
											{
												"body": {
													"nativeSrc": "2183:77:10",
													"nodeType": "YulBlock",
													"src": "2183:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2200:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2200:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2205:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2205:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2210:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2210:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2194:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2194:5:10"
																},
																"nativeSrc": "2194:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2194:23:10"
															},
															"nativeSrc": "2194:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "2194:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2237:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2237:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2242:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2242:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2233:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2233:3:10"
																		},
																		"nativeSrc": "2233:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2233:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2251:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2251:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2226:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:10"
																},
																"nativeSrc": "2226:27:10",
																"nodeType": "YulFunctionCall",
																"src": "2226:27:10"
															},
															"nativeSrc": "2226:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "2226:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2121:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2165:3:10",
														"nodeType": "YulTypedName",
														"src": "2165:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2170:3:10",
														"nodeType": "YulTypedName",
														"src": "2170:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2175:6:10",
														"nodeType": "YulTypedName",
														"src": "2175:6:10",
														"type": ""
													}
												],
												"src": "2121:139:10"
											},
											{
												"body": {
													"nativeSrc": "2361:339:10",
													"nodeType": "YulBlock",
													"src": "2361:339:10",
													"statements": [
														{
															"nativeSrc": "2371:75:10",
															"nodeType": "YulAssignment",
															"src": "2371:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2438:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2438:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2396:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "2396:41:10"
																		},
																		"nativeSrc": "2396:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2396:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2380:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "2380:15:10"
																},
																"nativeSrc": "2380:66:10",
																"nodeType": "YulFunctionCall",
																"src": "2380:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2371:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2462:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2462:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2469:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2455:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2455:6:10"
																},
																"nativeSrc": "2455:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2455:21:10"
															},
															"nativeSrc": "2455:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "2455:21:10"
														},
														{
															"nativeSrc": "2485:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2485:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2500:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2500:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2507:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2507:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2496:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:10"
																},
																"nativeSrc": "2496:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2496:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2489:3:10",
																	"nodeType": "YulTypedName",
																	"src": "2489:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2550:83:10",
																"nodeType": "YulBlock",
																"src": "2550:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2552:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2552:77:10"
																			},
																			"nativeSrc": "2552:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2552:79:10"
																		},
																		"nativeSrc": "2552:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2552:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2531:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2531:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2536:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2536:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:10"
																		},
																		"nativeSrc": "2527:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2545:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2545:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2524:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2524:2:10"
																},
																"nativeSrc": "2524:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2524:25:10"
															},
															"nativeSrc": "2521:112:10",
															"nodeType": "YulIf",
															"src": "2521:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2677:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2677:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2682:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2682:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2687:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2687:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2642:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "2642:34:10"
																},
																"nativeSrc": "2642:52:10",
																"nodeType": "YulFunctionCall",
																"src": "2642:52:10"
															},
															"nativeSrc": "2642:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "2642:52:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2266:434:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2334:3:10",
														"nodeType": "YulTypedName",
														"src": "2334:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2339:6:10",
														"nodeType": "YulTypedName",
														"src": "2339:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:10",
														"nodeType": "YulTypedName",
														"src": "2347:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2355:5:10",
														"nodeType": "YulTypedName",
														"src": "2355:5:10",
														"type": ""
													}
												],
												"src": "2266:434:10"
											},
											{
												"body": {
													"nativeSrc": "2793:282:10",
													"nodeType": "YulBlock",
													"src": "2793:282:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2842:83:10",
																"nodeType": "YulBlock",
																"src": "2842:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2844:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2844:77:10"
																			},
																			"nativeSrc": "2844:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2844:79:10"
																		},
																		"nativeSrc": "2844:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2844:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2821:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2829:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2829:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2817:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2817:3:10"
																				},
																				"nativeSrc": "2817:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2817:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2836:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2813:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2813:3:10"
																		},
																		"nativeSrc": "2813:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2813:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2806:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2806:6:10"
																},
																"nativeSrc": "2806:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2806:35:10"
															},
															"nativeSrc": "2803:122:10",
															"nodeType": "YulIf",
															"src": "2803:122:10"
														},
														{
															"nativeSrc": "2934:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2934:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2954:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2954:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2948:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2948:5:10"
																},
																"nativeSrc": "2948:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2948:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2938:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2938:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2970:99:10",
															"nodeType": "YulAssignment",
															"src": "2970:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3042:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3042:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3050:4:10",
																				"nodeType": "YulLiteral",
																				"src": "3050:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3038:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3038:3:10"
																		},
																		"nativeSrc": "3038:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3038:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3057:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3057:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3065:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3065:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2979:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2979:58:10"
																},
																"nativeSrc": "2979:90:10",
																"nodeType": "YulFunctionCall",
																"src": "2979:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2970:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2720:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2771:6:10",
														"nodeType": "YulTypedName",
														"src": "2771:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2779:3:10",
														"nodeType": "YulTypedName",
														"src": "2779:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2787:5:10",
														"nodeType": "YulTypedName",
														"src": "2787:5:10",
														"type": ""
													}
												],
												"src": "2720:355:10"
											},
											{
												"body": {
													"nativeSrc": "3185:576:10",
													"nodeType": "YulBlock",
													"src": "3185:576:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3231:83:10",
																"nodeType": "YulBlock",
																"src": "3231:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3233:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3233:77:10"
																			},
																			"nativeSrc": "3233:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3233:79:10"
																		},
																		"nativeSrc": "3233:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3233:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3206:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3206:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3215:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3215:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3202:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3202:3:10"
																		},
																		"nativeSrc": "3202:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3202:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3227:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3227:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3198:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3198:3:10"
																},
																"nativeSrc": "3198:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3198:32:10"
															},
															"nativeSrc": "3195:119:10",
															"nodeType": "YulIf",
															"src": "3195:119:10"
														},
														{
															"nativeSrc": "3324:128:10",
															"nodeType": "YulBlock",
															"src": "3324:128:10",
															"statements": [
																{
																	"nativeSrc": "3339:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3339:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3353:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3353:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3343:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3343:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3368:74:10",
																	"nodeType": "YulAssignment",
																	"src": "3368:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3414:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3414:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3425:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3425:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3410:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3410:3:10"
																				},
																				"nativeSrc": "3410:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3410:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3434:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3434:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3378:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "3378:31:10"
																		},
																		"nativeSrc": "3378:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3378:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3368:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3368:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3462:292:10",
															"nodeType": "YulBlock",
															"src": "3462:292:10",
															"statements": [
																{
																	"nativeSrc": "3477:39:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3477:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3501:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3501:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3512:2:10",
																						"nodeType": "YulLiteral",
																						"src": "3512:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3497:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3497:3:10"
																				},
																				"nativeSrc": "3497:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3497:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3491:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3491:5:10"
																		},
																		"nativeSrc": "3491:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3491:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3481:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3481:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3563:83:10",
																		"nodeType": "YulBlock",
																		"src": "3563:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3565:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3565:77:10"
																					},
																					"nativeSrc": "3565:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3565:79:10"
																				},
																				"nativeSrc": "3565:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3565:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3535:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3535:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3543:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3543:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3532:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3532:2:10"
																		},
																		"nativeSrc": "3532:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3532:30:10"
																	},
																	"nativeSrc": "3529:117:10",
																	"nodeType": "YulIf",
																	"src": "3529:117:10"
																},
																{
																	"nativeSrc": "3660:84:10",
																	"nodeType": "YulAssignment",
																	"src": "3660:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3716:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3716:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3727:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3727:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3712:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3712:3:10"
																				},
																				"nativeSrc": "3712:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3712:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3736:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3736:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3670:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "3670:41:10"
																		},
																		"nativeSrc": "3670:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3670:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3660:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3660:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory",
												"nativeSrc": "3081:680:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3147:9:10",
														"nodeType": "YulTypedName",
														"src": "3147:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3158:7:10",
														"nodeType": "YulTypedName",
														"src": "3158:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3170:6:10",
														"nodeType": "YulTypedName",
														"src": "3170:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3178:6:10",
														"nodeType": "YulTypedName",
														"src": "3178:6:10",
														"type": ""
													}
												],
												"src": "3081:680:10"
											},
											{
												"body": {
													"nativeSrc": "3826:40:10",
													"nodeType": "YulBlock",
													"src": "3826:40:10",
													"statements": [
														{
															"nativeSrc": "3837:22:10",
															"nodeType": "YulAssignment",
															"src": "3837:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3853:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3853:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3847:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3847:5:10"
																},
																"nativeSrc": "3847:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3847:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3837:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3837:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3767:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3809:5:10",
														"nodeType": "YulTypedName",
														"src": "3809:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3819:6:10",
														"nodeType": "YulTypedName",
														"src": "3819:6:10",
														"type": ""
													}
												],
												"src": "3767:99:10"
											},
											{
												"body": {
													"nativeSrc": "3968:73:10",
													"nodeType": "YulBlock",
													"src": "3968:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3985:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3985:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3990:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3978:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3978:6:10"
																},
																"nativeSrc": "3978:19:10",
																"nodeType": "YulFunctionCall",
																"src": "3978:19:10"
															},
															"nativeSrc": "3978:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "3978:19:10"
														},
														{
															"nativeSrc": "4006:29:10",
															"nodeType": "YulAssignment",
															"src": "4006:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4025:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4025:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4030:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4030:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4021:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4021:3:10"
																},
																"nativeSrc": "4021:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4021:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4006:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "4006:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3872:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3940:3:10",
														"nodeType": "YulTypedName",
														"src": "3940:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3945:6:10",
														"nodeType": "YulTypedName",
														"src": "3945:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3956:11:10",
														"nodeType": "YulTypedName",
														"src": "3956:11:10",
														"type": ""
													}
												],
												"src": "3872:169:10"
											},
											{
												"body": {
													"nativeSrc": "4139:285:10",
													"nodeType": "YulBlock",
													"src": "4139:285:10",
													"statements": [
														{
															"nativeSrc": "4149:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4149:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4196:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4196:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4163:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "4163:32:10"
																},
																"nativeSrc": "4163:39:10",
																"nodeType": "YulFunctionCall",
																"src": "4163:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4153:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4153:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4211:78:10",
															"nodeType": "YulAssignment",
															"src": "4211:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4277:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4277:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4282:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4282:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4218:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "4218:58:10"
																},
																"nativeSrc": "4218:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4218:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4211:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4211:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4337:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4337:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4344:4:10",
																				"nodeType": "YulLiteral",
																				"src": "4344:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4333:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4333:3:10"
																		},
																		"nativeSrc": "4333:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4333:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4351:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4351:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4356:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4356:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4298:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "4298:34:10"
																},
																"nativeSrc": "4298:65:10",
																"nodeType": "YulFunctionCall",
																"src": "4298:65:10"
															},
															"nativeSrc": "4298:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "4298:65:10"
														},
														{
															"nativeSrc": "4372:46:10",
															"nodeType": "YulAssignment",
															"src": "4372:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4383:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4383:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4410:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4410:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4388:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "4388:21:10"
																		},
																		"nativeSrc": "4388:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4388:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4379:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4379:3:10"
																},
																"nativeSrc": "4379:39:10",
																"nodeType": "YulFunctionCall",
																"src": "4379:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4372:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4372:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4047:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4120:5:10",
														"nodeType": "YulTypedName",
														"src": "4120:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4127:3:10",
														"nodeType": "YulTypedName",
														"src": "4127:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4135:3:10",
														"nodeType": "YulTypedName",
														"src": "4135:3:10",
														"type": ""
													}
												],
												"src": "4047:377:10"
											},
											{
												"body": {
													"nativeSrc": "4548:195:10",
													"nodeType": "YulBlock",
													"src": "4548:195:10",
													"statements": [
														{
															"nativeSrc": "4558:26:10",
															"nodeType": "YulAssignment",
															"src": "4558:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4570:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4570:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4581:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4581:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4566:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4566:3:10"
																},
																"nativeSrc": "4566:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4566:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4558:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4558:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4605:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4605:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4616:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4616:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4601:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4601:3:10"
																		},
																		"nativeSrc": "4601:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4601:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4624:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4624:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4630:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4630:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4620:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4620:3:10"
																		},
																		"nativeSrc": "4620:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4620:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4594:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4594:6:10"
																},
																"nativeSrc": "4594:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4594:47:10"
															},
															"nativeSrc": "4594:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4594:47:10"
														},
														{
															"nativeSrc": "4650:86:10",
															"nodeType": "YulAssignment",
															"src": "4650:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4722:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4722:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4731:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4731:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4658:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "4658:63:10"
																},
																"nativeSrc": "4658:78:10",
																"nodeType": "YulFunctionCall",
																"src": "4658:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4650:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4650:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4430:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4520:9:10",
														"nodeType": "YulTypedName",
														"src": "4520:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4532:6:10",
														"nodeType": "YulTypedName",
														"src": "4532:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4543:4:10",
														"nodeType": "YulTypedName",
														"src": "4543:4:10",
														"type": ""
													}
												],
												"src": "4430:313:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b50604051611c4f380380611c4f83398181016040528101906100319190610245565b81818173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060405160200161007891906102f1565b6040516020818303038152906040528051906020012060a0818152505050505050610311565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100d8826100af565b9050919050565b6100e8816100ce565b81146100f2575f5ffd5b50565b5f81519050610103816100df565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61015782610111565b810181811067ffffffffffffffff8211171561017657610175610121565b5b80604052505050565b5f61018861009e565b9050610194828261014e565b919050565b5f67ffffffffffffffff8211156101b3576101b2610121565b5b6101bc82610111565b9050602081019050919050565b8281835e5f83830152505050565b5f6101e96101e484610199565b61017f565b9050828152602081018484840111156102055761020461010d565b5b6102108482856101c9565b509392505050565b5f82601f83011261022c5761022b610109565b5b815161023c8482602086016101d7565b91505092915050565b5f5f6040838503121561025b5761025a6100a7565b5b5f610268858286016100f5565b925050602083015167ffffffffffffffff811115610289576102886100ab565b5b61029585828601610218565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f6102c38261029f565b6102cd81856102a9565b93506102dd8185602086016101c9565b6102e681610111565b840191505092915050565b5f6020820190508181035f83015261030981846102b9565b905092915050565b60805160a05161190f6103405f395f61043201525f81816103cb015281816106880152610830015261190f5ff3fe6080604052600436106100eb575f3560e01c8063a0cf0aea11610089578063eb11af9311610058578063eb11af93146102ea578063edd146cc14610326578063ef2920fc1461034e578063f5b0dfb71461036a576100f2565b8063a0cf0aea14610232578063b2b878d01461025c578063d9caed1214610298578063df868ed3146102c0576100f2565b806338fff2d0116100c557806338fff2d01461017857806342fda9c7146101a25780634ab4ba42146101cc5780634d31d087146101f6576100f2565b80630a6f0ee9146100f657806315cc481e1461011e5780632bbe0cae14610148576100f2565b366100f257005b5f5ffd5b348015610101575f5ffd5b5061011c60048036038101906101179190610e9d565b610392565b005b348015610129575f5ffd5b506101326103c8565b60405161013f9190610f80565b60405180910390f35b610162600480360381019061015d9190610f99565b6103ef565b60405161016f9190611002565b60405180910390f35b348015610183575f5ffd5b5061018c610426565b6040516101999190611033565b60405180910390f35b3480156101ad575f5ffd5b506101b661042f565b6040516101c39190611064565b60405180910390f35b3480156101d7575f5ffd5b506101e0610456565b6040516101ed9190611033565b60405180910390f35b348015610201575f5ffd5b5061021c6004803603810190610217919061107d565b61045f565b60405161022991906110c2565b60405180910390f35b34801561023d575f5ffd5b50610246610470565b6040516102539190611002565b60405180910390f35b348015610267575f5ffd5b50610282600480360381019061027d91906111b9565b610488565b60405161028f9190611322565b60405180910390f35b3480156102a3575f5ffd5b506102be60048036038101906102b9919061136c565b61059f565b005b3480156102cb575f5ffd5b506102d46105ba565b6040516102e191906110c2565b60405180910390f35b3480156102f5575f5ffd5b50610310600480360381019061030b919061107d565b6105c8565b60405161031d919061142f565b60405180910390f35b348015610331575f5ffd5b5061034c60048036038101906103479190611448565b6105d9565b005b61036860048036038101906103639190610f99565b61061f565b005b348015610375575f5ffd5b50610390600480360381019061038b91906114a2565b610651565b005b61039a610686565b6103a261070d565b6103ad83838361074a565b6103b883838361074f565b6103c3838383610781565b505050565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f6103f8610686565b61040061070d565b61040a8383610786565b610414838361078a565b905061042083836107bd565b92915050565b5f600154905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f600254905090565b5f610469826107c1565b9050919050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b60605f83519050825181146104c9576040517f7b49805600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8167ffffffffffffffff8111156104e4576104e3610c57565b5b60405190808252806020026020018201604052801561051d57816020015b61050a610c04565b8152602001906001900390816105025790505b5090505f5b82811015610593576105688682815181106105405761053f6114cd565b5b602002602001015186838151811061055b5761055a6114cd565b5b60200260200101516107f4565b82828151811061057b5761057a6114cd565b5b60200260200101819052508080600101915050610522565b50809250505092915050565b336105a98161082e565b6105b4848484610903565b50505050565b5f6105c361096a565b905090565b5f6105d28261097e565b9050919050565b6105e2826109b1565b7f91efa3d50feccde0d0d202f8ae5c41ca0b2be614cebcb2bd2f4b019396e6568a828260405161061392919061155a565b60405180910390a15050565b610627610686565b61062f61070d565b6106398282610a37565b6106438282610a3b565b61064d8282610b94565b5050565b610659610686565b61066281610b98565b8060025f82825461067391906115b5565b9250508190555061068381610b9b565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070b576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f60015403610748576040517f3da3f98c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b505050565b6040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b5050565b5f6040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b5f6040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107fc610c04565b6040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166329e40d4b600154836040518363ffffffff1660e01b815260040161088b9291906115e8565b602060405180830381865afa1580156108a6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ca9190611639565b610900576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610959576109548282610b9e565b610965565b610964838383610bbb565b5b505050565b5f5f5f9054906101000a900460ff16905090565b5f6040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109b9610686565b5f600154146109f4576040517f439a74c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8103610a2d576040517f7fcce2a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060018190555050565b5050565b80610a458161082e565b5f5f5f85806020019051810190610a5c919061181c565b9250925092505f835190505f8103610aa0576040517ffb76571500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82518114610ada576040517ffb76571500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b81811015610b8a575f848281518110610af857610af76114cd565b5b602002602001015190505f868381518110610b1657610b156114cd565b5b60200260200101519050610b2b858284610903565b8073ffffffffffffffffffffffffffffffffffffffff167f463ffc2cf8b1596445c417388ed30e53eb67cf6668cb2be7f0addf8a78c8441b83878c604051610b75939291906118a4565b60405180910390a28260010192505050610adc565b5050505050505050565b5050565b50565b50565b5f5f5f5f84865af1610bb75763b12d13eb5f526004601cfd5b5050565b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716610bfb576390b8ec185f526004601cfd5b5f603452505050565b60405180604001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81525090565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610c8d82610c47565b810181811067ffffffffffffffff82111715610cac57610cab610c57565b5b80604052505050565b5f610cbe610c32565b9050610cca8282610c84565b919050565b5f67ffffffffffffffff821115610ce957610ce8610c57565b5b602082029050602081019050919050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d2782610cfe565b9050919050565b610d3781610d1d565b8114610d41575f5ffd5b50565b5f81359050610d5281610d2e565b92915050565b5f610d6a610d6584610ccf565b610cb5565b90508083825260208201905060208402830185811115610d8d57610d8c610cfa565b5b835b81811015610db65780610da28882610d44565b845260208401935050602081019050610d8f565b5050509392505050565b5f82601f830112610dd457610dd3610c43565b5b8135610de4848260208601610d58565b91505092915050565b5f5ffd5b5f67ffffffffffffffff821115610e0b57610e0a610c57565b5b610e1482610c47565b9050602081019050919050565b828183375f83830152505050565b5f610e41610e3c84610df1565b610cb5565b905082815260208101848484011115610e5d57610e5c610ded565b5b610e68848285610e21565b509392505050565b5f82601f830112610e8457610e83610c43565b5b8135610e94848260208601610e2f565b91505092915050565b5f5f5f60608486031215610eb457610eb3610c3b565b5b5f84013567ffffffffffffffff811115610ed157610ed0610c3f565b5b610edd86828701610dc0565b935050602084013567ffffffffffffffff811115610efe57610efd610c3f565b5b610f0a86828701610e70565b9250506040610f1b86828701610d44565b9150509250925092565b5f819050919050565b5f610f48610f43610f3e84610cfe565b610f25565b610cfe565b9050919050565b5f610f5982610f2e565b9050919050565b5f610f6a82610f4f565b9050919050565b610f7a81610f60565b82525050565b5f602082019050610f935f830184610f71565b92915050565b5f5f60408385031215610faf57610fae610c3b565b5b5f83013567ffffffffffffffff811115610fcc57610fcb610c3f565b5b610fd885828601610e70565b9250506020610fe985828601610d44565b9150509250929050565b610ffc81610d1d565b82525050565b5f6020820190506110155f830184610ff3565b92915050565b5f819050919050565b61102d8161101b565b82525050565b5f6020820190506110465f830184611024565b92915050565b5f819050919050565b61105e8161104c565b82525050565b5f6020820190506110775f830184611055565b92915050565b5f6020828403121561109257611091610c3b565b5b5f61109f84828501610d44565b91505092915050565b5f8115159050919050565b6110bc816110a8565b82525050565b5f6020820190506110d55f8301846110b3565b92915050565b5f67ffffffffffffffff8211156110f5576110f4610c57565b5b602082029050602081019050919050565b5f611118611113846110db565b610cb5565b9050808382526020820190506020840283018581111561113b5761113a610cfa565b5b835b8181101561118257803567ffffffffffffffff8111156111605761115f610c43565b5b80860161116d8982610e70565b8552602085019450505060208101905061113d565b5050509392505050565b5f82601f8301126111a05761119f610c43565b5b81356111b0848260208601611106565b91505092915050565b5f5f604083850312156111cf576111ce610c3b565b5b5f83013567ffffffffffffffff8111156111ec576111eb610c3f565b5b6111f885828601610dc0565b925050602083013567ffffffffffffffff81111561121957611218610c3f565b5b6112258582860161118c565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61126181610d1d565b82525050565b6112708161101b565b82525050565b604082015f82015161128a5f850182611258565b50602082015161129d6020850182611267565b50505050565b5f6112ae8383611276565b60408301905092915050565b5f602082019050919050565b5f6112d08261122f565b6112da8185611239565b93506112e583611249565b805f5b838110156113155781516112fc88826112a3565b9750611307836112ba565b9250506001810190506112e8565b5085935050505092915050565b5f6020820190508181035f83015261133a81846112c6565b905092915050565b61134b8161101b565b8114611355575f5ffd5b50565b5f8135905061136681611342565b92915050565b5f5f5f6060848603121561138357611382610c3b565b5b5f61139086828701610d44565b93505060206113a186828701610d44565b92505060406113b286828701611358565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600781106113fa576113f96113bc565b5b50565b5f81905061140a826113e9565b919050565b5f611419826113fd565b9050919050565b6114298161140f565b82525050565b5f6020820190506114425f830184611420565b92915050565b5f5f6040838503121561145e5761145d610c3b565b5b5f61146b85828601611358565b925050602083013567ffffffffffffffff81111561148c5761148b610c3f565b5b61149885828601610e70565b9150509250929050565b5f602082840312156114b7576114b6610c3b565b5b5f6114c484828501611358565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f61152c826114fa565b6115368185611504565b9350611546818560208601611514565b61154f81610c47565b840191505092915050565b5f60408201905061156d5f830185611024565b818103602083015261157f8184611522565b90509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115bf8261101b565b91506115ca8361101b565b92508282019050808211156115e2576115e1611588565b5b92915050565b5f6040820190506115fb5f830185611024565b6116086020830184610ff3565b9392505050565b611618816110a8565b8114611622575f5ffd5b50565b5f815190506116338161160f565b92915050565b5f6020828403121561164e5761164d610c3b565b5b5f61165b84828501611625565b91505092915050565b5f8151905061167281610d2e565b92915050565b5f61168a61168584610ccf565b610cb5565b905080838252602082019050602084028301858111156116ad576116ac610cfa565b5b835b818110156116d657806116c28882611664565b8452602084019350506020810190506116af565b5050509392505050565b5f82601f8301126116f4576116f3610c43565b5b8151611704848260208601611678565b91505092915050565b5f67ffffffffffffffff82111561172757611726610c57565b5b602082029050602081019050919050565b5f8151905061174681611342565b92915050565b5f61175e6117598461170d565b610cb5565b9050808382526020820190506020840283018581111561178157611780610cfa565b5b835b818110156117aa57806117968882611738565b845260208401935050602081019050611783565b5050509392505050565b5f82601f8301126117c8576117c7610c43565b5b81516117d884826020860161174c565b91505092915050565b5f6117eb82610cfe565b9050919050565b6117fb816117e1565b8114611805575f5ffd5b50565b5f81519050611816816117f2565b92915050565b5f5f5f6060848603121561183357611832610c3b565b5b5f84015167ffffffffffffffff8111156118505761184f610c3f565b5b61185c868287016116e0565b935050602084015167ffffffffffffffff81111561187d5761187c610c3f565b5b611889868287016117b4565b925050604061189a86828701611808565b9150509250925092565b5f6060820190506118b75f830186611024565b6118c46020830185610ff3565b6118d16040830184610ff3565b94935050505056fea264697066735822122012c4e530567e7b87f67a652e44161d8493261144681370f393508b81a2e1a38964736f6c634300081b0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C4F CODESIZE SUB DUP1 PUSH2 0x1C4F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x245 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP POP POP POP POP PUSH2 0x311 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD8 DUP3 PUSH2 0xAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE8 DUP2 PUSH2 0xCE JUMP JUMPDEST DUP2 EQ PUSH2 0xF2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x103 DUP2 PUSH2 0xDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x157 DUP3 PUSH2 0x111 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x176 JUMPI PUSH2 0x175 PUSH2 0x121 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x188 PUSH2 0x9E JUMP JUMPDEST SWAP1 POP PUSH2 0x194 DUP3 DUP3 PUSH2 0x14E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B3 JUMPI PUSH2 0x1B2 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x1BC DUP3 PUSH2 0x111 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E9 PUSH2 0x1E4 DUP5 PUSH2 0x199 JUMP JUMPDEST PUSH2 0x17F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x205 JUMPI PUSH2 0x204 PUSH2 0x10D JUMP JUMPDEST JUMPDEST PUSH2 0x210 DUP5 DUP3 DUP6 PUSH2 0x1C9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22C JUMPI PUSH2 0x22B PUSH2 0x109 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x23C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25B JUMPI PUSH2 0x25A PUSH2 0xA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x268 DUP6 DUP3 DUP7 ADD PUSH2 0xF5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x289 JUMPI PUSH2 0x288 PUSH2 0xAB JUMP JUMPDEST JUMPDEST PUSH2 0x295 DUP6 DUP3 DUP7 ADD PUSH2 0x218 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C3 DUP3 PUSH2 0x29F JUMP JUMPDEST PUSH2 0x2CD DUP2 DUP6 PUSH2 0x2A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x2E6 DUP2 PUSH2 0x111 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x309 DUP2 DUP5 PUSH2 0x2B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x190F PUSH2 0x340 PUSH0 CODECOPY PUSH0 PUSH2 0x432 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x3CB ADD MSTORE DUP2 DUP2 PUSH2 0x688 ADD MSTORE PUSH2 0x830 ADD MSTORE PUSH2 0x190F PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0CF0AEA GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xEB11AF93 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xEB11AF93 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xEDD146CC EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xEF2920FC EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xF5B0DFB7 EQ PUSH2 0x36A JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0xA0CF0AEA EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xB2B878D0 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xD9CAED12 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xDF868ED3 EQ PUSH2 0x2C0 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x38FFF2D0 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x42FDA9C7 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x4AB4BA42 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x4D31D087 EQ PUSH2 0x1F6 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0xA6F0EE9 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x15CC481E EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x2BBE0CAE EQ PUSH2 0x148 JUMPI PUSH2 0xF2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xF2 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xF99 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x246 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x11B9 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x136C JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0xF99 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39A PUSH2 0x686 JUMP JUMPDEST PUSH2 0x3A2 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x3AD DUP4 DUP4 DUP4 PUSH2 0x74A JUMP JUMPDEST PUSH2 0x3B8 DUP4 DUP4 DUP4 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x3C3 DUP4 DUP4 DUP4 PUSH2 0x781 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3F8 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x400 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x40A DUP4 DUP4 PUSH2 0x786 JUMP JUMPDEST PUSH2 0x414 DUP4 DUP4 PUSH2 0x78A JUMP JUMPDEST SWAP1 POP PUSH2 0x420 DUP4 DUP4 PUSH2 0x7BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x469 DUP3 PUSH2 0x7C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP4 MLOAD SWAP1 POP DUP3 MLOAD DUP2 EQ PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7B49805600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4E4 JUMPI PUSH2 0x4E3 PUSH2 0xC57 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x51D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x50A PUSH2 0xC04 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x502 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH2 0x568 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x540 JUMPI PUSH2 0x53F PUSH2 0x14CD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x55B JUMPI PUSH2 0x55A PUSH2 0x14CD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x7F4 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57B JUMPI PUSH2 0x57A PUSH2 0x14CD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x522 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0x5A9 DUP2 PUSH2 0x82E JUMP JUMPDEST PUSH2 0x5B4 DUP5 DUP5 DUP5 PUSH2 0x903 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5C3 PUSH2 0x96A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5D2 DUP3 PUSH2 0x97E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E2 DUP3 PUSH2 0x9B1 JUMP JUMPDEST PUSH32 0x91EFA3D50FECCDE0D0D202F8AE5C41CA0B2BE614CEBCB2BD2F4B019396E6568A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x613 SWAP3 SWAP2 SWAP1 PUSH2 0x155A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x627 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x62F PUSH2 0x70D JUMP JUMPDEST PUSH2 0x639 DUP3 DUP3 PUSH2 0xA37 JUMP JUMPDEST PUSH2 0x643 DUP3 DUP3 PUSH2 0xA3B JUMP JUMPDEST PUSH2 0x64D DUP3 DUP3 PUSH2 0xB94 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x659 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x662 DUP2 PUSH2 0xB98 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x673 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x683 DUP2 PUSH2 0xB9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH32 0x75FD2B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SUB PUSH2 0x748 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DA3F98C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7FC PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29E40D4B PUSH1 0x1 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88B SWAP3 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x900 JUMPI PUSH1 0x40 MLOAD PUSH32 0x75FD2B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x959 JUMPI PUSH2 0x954 DUP3 DUP3 PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x965 JUMP JUMPDEST PUSH2 0x964 DUP4 DUP4 DUP4 PUSH2 0xBBB JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B9 PUSH2 0x686 JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD EQ PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x439A74C900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0xA2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x7FCCE2A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH2 0xA45 DUP2 PUSH2 0x82E JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xA5C SWAP2 SWAP1 PUSH2 0x181C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH0 DUP4 MLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB76571500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP2 EQ PUSH2 0xADA JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB76571500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB8A JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAF8 JUMPI PUSH2 0xAF7 PUSH2 0x14CD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB16 JUMPI PUSH2 0xB15 PUSH2 0x14CD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0xB2B DUP6 DUP3 DUP5 PUSH2 0x903 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x463FFC2CF8B1596445C417388ED30E53EB67CF6668CB2BE7F0ADDF8A78C8441B DUP4 DUP8 DUP13 PUSH1 0x40 MLOAD PUSH2 0xB75 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0xADC JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP5 DUP7 GAS CALL PUSH2 0xBB7 JUMPI PUSH4 0xB12D13EB PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH1 0x14 MSTORE DUP1 PUSH1 0x34 MSTORE PUSH16 0xA9059CBB000000000000000000000000 PUSH0 MSTORE PUSH1 0x20 PUSH0 PUSH1 0x44 PUSH1 0x10 PUSH0 DUP8 GAS CALL RETURNDATASIZE ISZERO PUSH1 0x1 PUSH0 MLOAD EQ OR AND PUSH2 0xBFB JUMPI PUSH4 0x90B8EC18 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH0 PUSH1 0x34 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xC8D DUP3 PUSH2 0xC47 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCAC JUMPI PUSH2 0xCAB PUSH2 0xC57 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCBE PUSH2 0xC32 JUMP JUMPDEST SWAP1 POP PUSH2 0xCCA DUP3 DUP3 PUSH2 0xC84 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0xC57 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD27 DUP3 PUSH2 0xCFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD37 DUP2 PUSH2 0xD1D JUMP JUMPDEST DUP2 EQ PUSH2 0xD41 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD52 DUP2 PUSH2 0xD2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD6A PUSH2 0xD65 DUP5 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xD8D JUMPI PUSH2 0xD8C PUSH2 0xCFA JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDB6 JUMPI DUP1 PUSH2 0xDA2 DUP9 DUP3 PUSH2 0xD44 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD8F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDD4 JUMPI PUSH2 0xDD3 PUSH2 0xC43 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDE4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE0B JUMPI PUSH2 0xE0A PUSH2 0xC57 JUMP JUMPDEST JUMPDEST PUSH2 0xE14 DUP3 PUSH2 0xC47 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE41 PUSH2 0xE3C DUP5 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xE5D JUMPI PUSH2 0xE5C PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH2 0xE68 DUP5 DUP3 DUP6 PUSH2 0xE21 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE84 JUMPI PUSH2 0xE83 PUSH2 0xC43 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE94 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEB4 JUMPI PUSH2 0xEB3 PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED1 JUMPI PUSH2 0xED0 PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0xEDD DUP7 DUP3 DUP8 ADD PUSH2 0xDC0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEFE JUMPI PUSH2 0xEFD PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0xF0A DUP7 DUP3 DUP8 ADD PUSH2 0xE70 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF1B DUP7 DUP3 DUP8 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF48 PUSH2 0xF43 PUSH2 0xF3E DUP5 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0xF25 JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF59 DUP3 PUSH2 0xF2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF6A DUP3 PUSH2 0xF4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7A DUP2 PUSH2 0xF60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF93 PUSH0 DUP4 ADD DUP5 PUSH2 0xF71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFAF JUMPI PUSH2 0xFAE PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFCC JUMPI PUSH2 0xFCB PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0xFD8 DUP6 DUP3 DUP7 ADD PUSH2 0xE70 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFE9 DUP6 DUP3 DUP7 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFC DUP2 PUSH2 0xD1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1015 PUSH0 DUP4 ADD DUP5 PUSH2 0xFF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102D DUP2 PUSH2 0x101B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1046 PUSH0 DUP4 ADD DUP5 PUSH2 0x1024 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105E DUP2 PUSH2 0x104C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1077 PUSH0 DUP4 ADD DUP5 PUSH2 0x1055 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1091 PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x109F DUP5 DUP3 DUP6 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10BC DUP2 PUSH2 0x10A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D5 PUSH0 DUP4 ADD DUP5 PUSH2 0x10B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10F5 JUMPI PUSH2 0x10F4 PUSH2 0xC57 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1118 PUSH2 0x1113 DUP5 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x113B JUMPI PUSH2 0x113A PUSH2 0xCFA JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1182 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1160 JUMPI PUSH2 0x115F PUSH2 0xC43 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x116D DUP10 DUP3 PUSH2 0xE70 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x113D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11A0 JUMPI PUSH2 0x119F PUSH2 0xC43 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11B0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1106 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11CF JUMPI PUSH2 0x11CE PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11EC JUMPI PUSH2 0x11EB PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0x11F8 DUP6 DUP3 DUP7 ADD PUSH2 0xDC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1219 JUMPI PUSH2 0x1218 PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0x1225 DUP6 DUP3 DUP7 ADD PUSH2 0x118C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1261 DUP2 PUSH2 0xD1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1270 DUP2 PUSH2 0x101B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x128A PUSH0 DUP6 ADD DUP3 PUSH2 0x1258 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x129D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1267 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12AE DUP4 DUP4 PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12D0 DUP3 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x12DA DUP2 DUP6 PUSH2 0x1239 JUMP JUMPDEST SWAP4 POP PUSH2 0x12E5 DUP4 PUSH2 0x1249 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1315 JUMPI DUP2 MLOAD PUSH2 0x12FC DUP9 DUP3 PUSH2 0x12A3 JUMP JUMPDEST SWAP8 POP PUSH2 0x1307 DUP4 PUSH2 0x12BA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x12E8 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x133A DUP2 DUP5 PUSH2 0x12C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x134B DUP2 PUSH2 0x101B JUMP JUMPDEST DUP2 EQ PUSH2 0x1355 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1366 DUP2 PUSH2 0x1342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1383 JUMPI PUSH2 0x1382 PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1390 DUP7 DUP3 DUP8 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13A1 DUP7 DUP3 DUP8 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13B2 DUP7 DUP3 DUP8 ADD PUSH2 0x1358 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x13FA JUMPI PUSH2 0x13F9 PUSH2 0x13BC JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x140A DUP3 PUSH2 0x13E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1419 DUP3 PUSH2 0x13FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1429 DUP2 PUSH2 0x140F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1442 PUSH0 DUP4 ADD DUP5 PUSH2 0x1420 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145E JUMPI PUSH2 0x145D PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x146B DUP6 DUP3 DUP7 ADD PUSH2 0x1358 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x148C JUMPI PUSH2 0x148B PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0x1498 DUP6 DUP3 DUP7 ADD PUSH2 0xE70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B7 JUMPI PUSH2 0x14B6 PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14C4 DUP5 DUP3 DUP6 ADD PUSH2 0x1358 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x152C DUP3 PUSH2 0x14FA JUMP JUMPDEST PUSH2 0x1536 DUP2 DUP6 PUSH2 0x1504 JUMP JUMPDEST SWAP4 POP PUSH2 0x1546 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x154F DUP2 PUSH2 0xC47 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x156D PUSH0 DUP4 ADD DUP6 PUSH2 0x1024 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x157F DUP2 DUP5 PUSH2 0x1522 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15BF DUP3 PUSH2 0x101B JUMP JUMPDEST SWAP2 POP PUSH2 0x15CA DUP4 PUSH2 0x101B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15E2 JUMPI PUSH2 0x15E1 PUSH2 0x1588 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15FB PUSH0 DUP4 ADD DUP6 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0x1608 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFF3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1618 DUP2 PUSH2 0x10A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1622 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1633 DUP2 PUSH2 0x160F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164E JUMPI PUSH2 0x164D PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x165B DUP5 DUP3 DUP6 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1672 DUP2 PUSH2 0xD2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x168A PUSH2 0x1685 DUP5 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x16AD JUMPI PUSH2 0x16AC PUSH2 0xCFA JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16D6 JUMPI DUP1 PUSH2 0x16C2 DUP9 DUP3 PUSH2 0x1664 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16AF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16F4 JUMPI PUSH2 0x16F3 PUSH2 0xC43 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1704 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1678 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1727 JUMPI PUSH2 0x1726 PUSH2 0xC57 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1746 DUP2 PUSH2 0x1342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x175E PUSH2 0x1759 DUP5 PUSH2 0x170D JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1781 JUMPI PUSH2 0x1780 PUSH2 0xCFA JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17AA JUMPI DUP1 PUSH2 0x1796 DUP9 DUP3 PUSH2 0x1738 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1783 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17C8 JUMPI PUSH2 0x17C7 PUSH2 0xC43 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x17D8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x174C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17EB DUP3 PUSH2 0xCFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17FB DUP2 PUSH2 0x17E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1805 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1816 DUP2 PUSH2 0x17F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1833 JUMPI PUSH2 0x1832 PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1850 JUMPI PUSH2 0x184F PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0x185C DUP7 DUP3 DUP8 ADD PUSH2 0x16E0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x187D JUMPI PUSH2 0x187C PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0x1889 DUP7 DUP3 DUP8 ADD PUSH2 0x17B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x189A DUP7 DUP3 DUP8 ADD PUSH2 0x1808 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18B7 PUSH0 DUP4 ADD DUP7 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0x18C4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x18D1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFF3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xC4 0xE5 ADDRESS JUMP PUSH31 0x7B87F67A652E44161D8493261144681370F393508B81A2E1A38964736F6C63 NUMBER STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "421:2607:9:-:0;;;521:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;582:5;589;5281::7;5268:19;;;;;;;;;;5331:5;5320:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;5310:28;;;;;;5297:41;;;;;;5210:135;;521:77:9;;421:2607;;7:75:10;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:139::-;2210:6;2205:3;2200;2194:23;2251:1;2242:6;2237:3;2233:16;2226:27;2121:139;;;:::o;2266:434::-;2355:5;2380:66;2396:49;2438:6;2396:49;:::i;:::-;2380:66;:::i;:::-;2371:75;;2469:6;2462:5;2455:21;2507:4;2500:5;2496:16;2545:3;2536:6;2531:3;2527:16;2524:25;2521:112;;;2552:79;;:::i;:::-;2521:112;2642:52;2687:6;2682:3;2677;2642:52;:::i;:::-;2361:339;2266:434;;;;;:::o;2720:355::-;2787:5;2836:3;2829:4;2821:6;2817:17;2813:27;2803:122;;2844:79;;:::i;:::-;2803:122;2954:6;2948:13;2979:90;3065:3;3057:6;3050:4;3042:6;3038:17;2979:90;:::i;:::-;2970:99;;2793:282;2720:355;;;;:::o;3081:680::-;3170:6;3178;3227:2;3215:9;3206:7;3202:23;3198:32;3195:119;;;3233:79;;:::i;:::-;3195:119;3353:1;3378:64;3434:7;3425:6;3414:9;3410:22;3378:64;:::i;:::-;3368:74;;3324:128;3512:2;3501:9;3497:18;3491:25;3543:18;3535:6;3532:30;3529:117;;;3565:79;;:::i;:::-;3529:117;3670:74;3736:7;3727:6;3716:9;3712:22;3670:74;:::i;:::-;3660:84;;3462:292;3081:680;;;;;:::o;3767:99::-;3819:6;3853:5;3847:12;3837:22;;3767:99;;;:::o;3872:169::-;3956:11;3990:6;3985:3;3978:19;4030:4;4025:3;4021:14;4006:29;;3872:169;;;;:::o;4047:377::-;4135:3;4163:39;4196:5;4163:39;:::i;:::-;4218:71;4282:6;4277:3;4218:71;:::i;:::-;4211:78;;4298:65;4356:6;4351:3;4344:4;4337:5;4333:16;4298:65;:::i;:::-;4388:29;4410:6;4388:29;:::i;:::-;4383:3;4379:39;4372:46;;4139:285;4047:377;;;;:::o;4430:313::-;4543:4;4581:2;4570:9;4566:18;4558:26;;4630:9;4624:4;4620:20;4616:1;4605:9;4601:17;4594:47;4658:78;4731:4;4722:6;4658:78;:::i;:::-;4650:86;;4430:313;;;;:::o;421:2607:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NATIVE_831": {
									"entryPoint": 1136,
									"id": 831,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1877": {
									"entryPoint": null,
									"id": 1877,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__BaseStrategy_init_1230": {
									"entryPoint": 2481,
									"id": 1230,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_afterAllocate_1625": {
									"entryPoint": 2964,
									"id": 1625,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterDistribute_1649": {
									"entryPoint": 1921,
									"id": 1649,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_afterIncreasePoolAmount_1589": {
									"entryPoint": 2971,
									"id": 1589,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_afterRegisterRecipient_1607": {
									"entryPoint": 1981,
									"id": 1607,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_allocate_1973": {
									"entryPoint": 2619,
									"id": 1973,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_beforeAllocate_1616": {
									"entryPoint": 2615,
									"id": 1616,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_beforeDistribute_1637": {
									"entryPoint": 1866,
									"id": 1637,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeIncreasePoolAmount_1582": {
									"entryPoint": 2968,
									"id": 1582,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_beforeRegisterRecipient_1598": {
									"entryPoint": 1926,
									"id": 1598,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOnlyAllo_1444": {
									"entryPoint": 1670,
									"id": 1444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOnlyInitialized_1494": {
									"entryPoint": 1805,
									"id": 1494,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOnlyPoolManager_1461": {
									"entryPoint": 2094,
									"id": 1461,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_distribute_1988": {
									"entryPoint": 1871,
									"id": 1988,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_getPayout_2042": {
									"entryPoint": 2036,
									"id": 2042,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getRecipientStatus_2001": {
									"entryPoint": 2430,
									"id": 2001,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isPoolActive_1518": {
									"entryPoint": 2410,
									"id": 1518,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isValidAllocator_2013": {
									"entryPoint": 1985,
									"id": 2013,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_registerRecipient_2027": {
									"entryPoint": 1930,
									"id": 2027,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_transferAmount_1014": {
									"entryPoint": 2307,
									"id": 1014,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allocate_1312": {
									"entryPoint": 1567,
									"id": 1312,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@distribute_1346": {
									"entryPoint": 914,
									"id": 1346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getAllo_1148": {
									"entryPoint": 968,
									"id": 1148,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPayouts_1414": {
									"entryPoint": 1160,
									"id": 1414,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPoolAmount_1178": {
									"entryPoint": 1110,
									"id": 1178,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPoolId_1158": {
									"entryPoint": 1062,
									"id": 1158,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRecipientStatus_1203": {
									"entryPoint": 1480,
									"id": 1203,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStrategyId_1168": {
									"entryPoint": 1071,
									"id": 1168,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increasePoolAmount_1252": {
									"entryPoint": 1617,
									"id": 1252,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialize_1852": {
									"entryPoint": 1497,
									"id": 1852,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isPoolActive_1189": {
									"entryPoint": 1466,
									"id": 1189,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isValidAllocator_1428": {
									"entryPoint": 1119,
									"id": 1428,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@registerRecipient_1284": {
									"entryPoint": 1007,
									"id": 1284,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeTransferETH_1683": {
									"entryPoint": 2974,
									"id": 1683,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransfer_1759": {
									"entryPoint": 3003,
									"id": 1759,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdraw_1873": {
									"entryPoint": 1439,
									"id": 1873,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 5752,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4358,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 3631,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 5732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 6152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 5856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 6068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 3696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_address_payable_fromMemory": {
									"entryPoint": 6172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bytes_memory_ptrt_address": {
									"entryPoint": 3741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptrt_address": {
									"entryPoint": 3993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_struct$_PayoutSummary_$572_memory_ptr_to_t_struct$_PayoutSummary_$572_memory_ptr": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IAllo_$359_to_t_address_fromStack": {
									"entryPoint": 3953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Status_$566_to_t_uint8_fromStack": {
									"entryPoint": 5152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_PayoutSummary_$572_memory_ptr_to_t_struct$_PayoutSummary_$572_memory_ptr": {
									"entryPoint": 4726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 4196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IAllo_$359__to_t_address__fromStack_reversed": {
									"entryPoint": 3968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Status_$566__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 5608,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6308,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5466,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 3569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 6113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Status_$566": {
									"entryPoint": 5117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IAllo_$359_to_t_address": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Status_$566_to_t_uint8": {
									"entryPoint": 5135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 3617,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5396,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5512,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 5052,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5325,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3159,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3322,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_assert_t_enum$_Status_$566": {
									"entryPoint": 5097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 6130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25688:10",
										"nodeType": "YulBlock",
										"src": "0:25688:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "423:28:10",
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:10",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:12:10",
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nativeSrc": "433:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nativeSrc": "505:54:10",
													"nodeType": "YulBlock",
													"src": "505:54:10",
													"statements": [
														{
															"nativeSrc": "515:38:10",
															"nodeType": "YulAssignment",
															"src": "515:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "533:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "540:2:10",
																				"nodeType": "YulLiteral",
																				"src": "540:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "529:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:10"
																		},
																		"nativeSrc": "529:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "549:2:10",
																				"nodeType": "YulLiteral",
																				"src": "549:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "545:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:10"
																		},
																		"nativeSrc": "545:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "525:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:10"
																},
																"nativeSrc": "525:28:10",
																"nodeType": "YulFunctionCall",
																"src": "525:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "515:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "457:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "488:5:10",
														"nodeType": "YulTypedName",
														"src": "488:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "498:6:10",
														"nodeType": "YulTypedName",
														"src": "498:6:10",
														"type": ""
													}
												],
												"src": "457:102:10"
											},
											{
												"body": {
													"nativeSrc": "593:152:10",
													"nodeType": "YulBlock",
													"src": "593:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "610:1:10",
																		"nodeType": "YulLiteral",
																		"src": "610:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "613:77:10",
																		"nodeType": "YulLiteral",
																		"src": "613:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "603:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:10"
																},
																"nativeSrc": "603:88:10",
																"nodeType": "YulFunctionCall",
																"src": "603:88:10"
															},
															"nativeSrc": "603:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "603:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "707:1:10",
																		"nodeType": "YulLiteral",
																		"src": "707:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "710:4:10",
																		"nodeType": "YulLiteral",
																		"src": "710:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "700:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:10"
																},
																"nativeSrc": "700:15:10",
																"nodeType": "YulFunctionCall",
																"src": "700:15:10"
															},
															"nativeSrc": "700:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "700:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "731:1:10",
																		"nodeType": "YulLiteral",
																		"src": "731:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "734:4:10",
																		"nodeType": "YulLiteral",
																		"src": "734:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "724:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:10"
																},
																"nativeSrc": "724:15:10",
																"nodeType": "YulFunctionCall",
																"src": "724:15:10"
															},
															"nativeSrc": "724:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "724:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "565:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:10"
											},
											{
												"body": {
													"nativeSrc": "794:238:10",
													"nodeType": "YulBlock",
													"src": "794:238:10",
													"statements": [
														{
															"nativeSrc": "804:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "826:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "856:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "834:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:10"
																		},
																		"nativeSrc": "834:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "822:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:10"
																},
																"nativeSrc": "822:40:10",
																"nodeType": "YulFunctionCall",
																"src": "822:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "808:10:10",
																	"nodeType": "YulTypedName",
																	"src": "808:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "973:22:10",
																"nodeType": "YulBlock",
																"src": "973:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "975:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:10"
																			},
																			"nativeSrc": "975:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:10"
																		},
																		"nativeSrc": "975:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "916:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "928:18:10",
																				"nodeType": "YulLiteral",
																				"src": "928:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "913:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:10"
																		},
																		"nativeSrc": "913:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "952:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "964:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "949:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:10"
																		},
																		"nativeSrc": "949:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "910:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:10"
																},
																"nativeSrc": "910:62:10",
																"nodeType": "YulFunctionCall",
																"src": "910:62:10"
															},
															"nativeSrc": "907:88:10",
															"nodeType": "YulIf",
															"src": "907:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1011:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1015:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1004:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:10"
																},
																"nativeSrc": "1004:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1004:22:10"
															},
															"nativeSrc": "1004:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "751:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "780:6:10",
														"nodeType": "YulTypedName",
														"src": "780:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "788:4:10",
														"nodeType": "YulTypedName",
														"src": "788:4:10",
														"type": ""
													}
												],
												"src": "751:281:10"
											},
											{
												"body": {
													"nativeSrc": "1079:88:10",
													"nodeType": "YulBlock",
													"src": "1079:88:10",
													"statements": [
														{
															"nativeSrc": "1089:30:10",
															"nodeType": "YulAssignment",
															"src": "1089:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1099:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:10"
																},
																"nativeSrc": "1099:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1099:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1089:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1148:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1156:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1128:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:10"
																},
																"nativeSrc": "1128:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1128:33:10"
															},
															"nativeSrc": "1128:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1038:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1063:4:10",
														"nodeType": "YulTypedName",
														"src": "1063:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1072:6:10",
														"nodeType": "YulTypedName",
														"src": "1072:6:10",
														"type": ""
													}
												],
												"src": "1038:129:10"
											},
											{
												"body": {
													"nativeSrc": "1255:229:10",
													"nodeType": "YulBlock",
													"src": "1255:229:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1360:22:10",
																"nodeType": "YulBlock",
																"src": "1360:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1362:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1362:16:10"
																			},
																			"nativeSrc": "1362:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1362:18:10"
																		},
																		"nativeSrc": "1362:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1332:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1340:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1340:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1329:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:10"
																},
																"nativeSrc": "1329:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1329:30:10"
															},
															"nativeSrc": "1326:56:10",
															"nodeType": "YulIf",
															"src": "1326:56:10"
														},
														{
															"nativeSrc": "1392:25:10",
															"nodeType": "YulAssignment",
															"src": "1392:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1404:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1404:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1412:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1412:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:10"
																},
																"nativeSrc": "1400:17:10",
																"nodeType": "YulFunctionCall",
																"src": "1400:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1392:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:10"
																}
															]
														},
														{
															"nativeSrc": "1454:23:10",
															"nodeType": "YulAssignment",
															"src": "1454:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1466:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1466:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1472:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1472:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1462:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:10"
																},
																"nativeSrc": "1462:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1462:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1454:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "1173:311:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1239:6:10",
														"nodeType": "YulTypedName",
														"src": "1239:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1250:4:10",
														"nodeType": "YulTypedName",
														"src": "1250:4:10",
														"type": ""
													}
												],
												"src": "1173:311:10"
											},
											{
												"body": {
													"nativeSrc": "1579:28:10",
													"nodeType": "YulBlock",
													"src": "1579:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1596:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1599:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1599:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1589:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:10"
																},
																"nativeSrc": "1589:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1589:12:10"
															},
															"nativeSrc": "1589:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1589:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1490:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1490:117:10"
											},
											{
												"body": {
													"nativeSrc": "1658:81:10",
													"nodeType": "YulBlock",
													"src": "1658:81:10",
													"statements": [
														{
															"nativeSrc": "1668:65:10",
															"nodeType": "YulAssignment",
															"src": "1668:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1683:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1683:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1690:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1690:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1679:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1679:3:10"
																},
																"nativeSrc": "1679:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1679:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1668:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1668:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1613:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1640:5:10",
														"nodeType": "YulTypedName",
														"src": "1640:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1650:7:10",
														"nodeType": "YulTypedName",
														"src": "1650:7:10",
														"type": ""
													}
												],
												"src": "1613:126:10"
											},
											{
												"body": {
													"nativeSrc": "1790:51:10",
													"nodeType": "YulBlock",
													"src": "1790:51:10",
													"statements": [
														{
															"nativeSrc": "1800:35:10",
															"nodeType": "YulAssignment",
															"src": "1800:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1829:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1829:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1811:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1811:17:10"
																},
																"nativeSrc": "1811:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1811:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1800:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1800:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1745:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1772:5:10",
														"nodeType": "YulTypedName",
														"src": "1772:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1782:7:10",
														"nodeType": "YulTypedName",
														"src": "1782:7:10",
														"type": ""
													}
												],
												"src": "1745:96:10"
											},
											{
												"body": {
													"nativeSrc": "1890:79:10",
													"nodeType": "YulBlock",
													"src": "1890:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1947:16:10",
																"nodeType": "YulBlock",
																"src": "1947:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1956:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1959:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1949:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1949:6:10"
																			},
																			"nativeSrc": "1949:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1949:12:10"
																		},
																		"nativeSrc": "1949:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1949:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1913:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1913:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1938:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1938:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1920:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1920:17:10"
																				},
																				"nativeSrc": "1920:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1920:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1910:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1910:2:10"
																		},
																		"nativeSrc": "1910:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1903:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:10"
																},
																"nativeSrc": "1903:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1903:43:10"
															},
															"nativeSrc": "1900:63:10",
															"nodeType": "YulIf",
															"src": "1900:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1847:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1883:5:10",
														"nodeType": "YulTypedName",
														"src": "1883:5:10",
														"type": ""
													}
												],
												"src": "1847:122:10"
											},
											{
												"body": {
													"nativeSrc": "2027:87:10",
													"nodeType": "YulBlock",
													"src": "2027:87:10",
													"statements": [
														{
															"nativeSrc": "2037:29:10",
															"nodeType": "YulAssignment",
															"src": "2037:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2059:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2059:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2046:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2046:12:10"
																},
																"nativeSrc": "2046:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2046:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2037:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2037:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2102:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2102:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2075:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2075:26:10"
																},
																"nativeSrc": "2075:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2075:33:10"
															},
															"nativeSrc": "2075:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2075:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1975:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2005:6:10",
														"nodeType": "YulTypedName",
														"src": "2005:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2013:3:10",
														"nodeType": "YulTypedName",
														"src": "2013:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2021:5:10",
														"nodeType": "YulTypedName",
														"src": "2021:5:10",
														"type": ""
													}
												],
												"src": "1975:139:10"
											},
											{
												"body": {
													"nativeSrc": "2239:608:10",
													"nodeType": "YulBlock",
													"src": "2239:608:10",
													"statements": [
														{
															"nativeSrc": "2249:90:10",
															"nodeType": "YulAssignment",
															"src": "2249:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2331:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2331:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "2274:56:10",
																			"nodeType": "YulIdentifier",
																			"src": "2274:56:10"
																		},
																		"nativeSrc": "2274:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2274:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2258:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "2258:15:10"
																},
																"nativeSrc": "2258:81:10",
																"nodeType": "YulFunctionCall",
																"src": "2258:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2249:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2249:5:10"
																}
															]
														},
														{
															"nativeSrc": "2348:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2348:16:10",
															"value": {
																"name": "array",
																"nativeSrc": "2359:5:10",
																"nodeType": "YulIdentifier",
																"src": "2359:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2352:3:10",
																	"nodeType": "YulTypedName",
																	"src": "2352:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2381:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2381:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2388:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2388:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2374:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2374:6:10"
																},
																"nativeSrc": "2374:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2374:21:10"
															},
															"nativeSrc": "2374:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "2374:21:10"
														},
														{
															"nativeSrc": "2404:23:10",
															"nodeType": "YulAssignment",
															"src": "2404:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2415:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2415:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2422:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2422:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2411:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2411:3:10"
																},
																"nativeSrc": "2411:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2411:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2404:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2404:3:10"
																}
															]
														},
														{
															"nativeSrc": "2437:44:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2437:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2455:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2455:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2467:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2467:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2475:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2475:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2463:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:10"
																		},
																		"nativeSrc": "2463:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2463:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2451:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2451:3:10"
																},
																"nativeSrc": "2451:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2451:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2441:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2441:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2509:103:10",
																"nodeType": "YulBlock",
																"src": "2509:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2523:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2523:77:10"
																			},
																			"nativeSrc": "2523:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2523:79:10"
																		},
																		"nativeSrc": "2523:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2523:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2496:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2496:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2504:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2504:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2493:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2493:2:10"
																},
																"nativeSrc": "2493:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2493:15:10"
															},
															"nativeSrc": "2490:122:10",
															"nodeType": "YulIf",
															"src": "2490:122:10"
														},
														{
															"body": {
																"nativeSrc": "2697:144:10",
																"nodeType": "YulBlock",
																"src": "2697:144:10",
																"statements": [
																	{
																		"nativeSrc": "2712:21:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2712:21:10",
																		"value": {
																			"name": "src",
																			"nativeSrc": "2730:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2730:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "2716:10:10",
																				"nodeType": "YulTypedName",
																				"src": "2716:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2754:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2754:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "2780:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "2780:10:10"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "2792:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2792:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "2759:20:10",
																						"nodeType": "YulIdentifier",
																						"src": "2759:20:10"
																					},
																					"nativeSrc": "2759:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2759:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2747:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2747:6:10"
																			},
																			"nativeSrc": "2747:50:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2747:50:10"
																		},
																		"nativeSrc": "2747:50:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2747:50:10"
																	},
																	{
																		"nativeSrc": "2810:21:10",
																		"nodeType": "YulAssignment",
																		"src": "2810:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2821:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2821:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2826:4:10",
																					"nodeType": "YulLiteral",
																					"src": "2826:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2817:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2817:3:10"
																			},
																			"nativeSrc": "2817:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2817:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2810:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2810:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2650:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2650:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2655:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2655:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2647:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2647:2:10"
																},
																"nativeSrc": "2647:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2647:15:10"
															},
															"nativeSrc": "2621:220:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2663:25:10",
																"nodeType": "YulBlock",
																"src": "2663:25:10",
																"statements": [
																	{
																		"nativeSrc": "2665:21:10",
																		"nodeType": "YulAssignment",
																		"src": "2665:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2676:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2676:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2681:4:10",
																					"nodeType": "YulLiteral",
																					"src": "2681:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2672:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2672:3:10"
																			},
																			"nativeSrc": "2672:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2672:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2665:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2665:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2625:21:10",
																"nodeType": "YulBlock",
																"src": "2625:21:10",
																"statements": [
																	{
																		"nativeSrc": "2627:17:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2627:17:10",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "2638:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2638:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "2631:3:10",
																				"nodeType": "YulTypedName",
																				"src": "2631:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2621:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "2137:710:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2209:6:10",
														"nodeType": "YulTypedName",
														"src": "2209:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2217:6:10",
														"nodeType": "YulTypedName",
														"src": "2217:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2225:3:10",
														"nodeType": "YulTypedName",
														"src": "2225:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2233:5:10",
														"nodeType": "YulTypedName",
														"src": "2233:5:10",
														"type": ""
													}
												],
												"src": "2137:710:10"
											},
											{
												"body": {
													"nativeSrc": "2947:293:10",
													"nodeType": "YulBlock",
													"src": "2947:293:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2996:83:10",
																"nodeType": "YulBlock",
																"src": "2996:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2998:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2998:77:10"
																			},
																			"nativeSrc": "2998:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2998:79:10"
																		},
																		"nativeSrc": "2998:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2998:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2975:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2975:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2983:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2983:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2971:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2971:3:10"
																				},
																				"nativeSrc": "2971:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2971:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2990:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2990:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2967:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2967:3:10"
																		},
																		"nativeSrc": "2967:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2967:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2960:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2960:6:10"
																},
																"nativeSrc": "2960:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2960:35:10"
															},
															"nativeSrc": "2957:122:10",
															"nodeType": "YulIf",
															"src": "2957:122:10"
														},
														{
															"nativeSrc": "3088:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3088:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3115:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3115:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3102:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3102:12:10"
																},
																"nativeSrc": "3102:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3102:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3092:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3092:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3131:103:10",
															"nodeType": "YulAssignment",
															"src": "3131:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3207:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3207:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3215:4:10",
																				"nodeType": "YulLiteral",
																				"src": "3215:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3203:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3203:3:10"
																		},
																		"nativeSrc": "3203:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3203:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3222:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3222:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3230:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3230:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "3140:62:10",
																	"nodeType": "YulIdentifier",
																	"src": "3140:62:10"
																},
																"nativeSrc": "3140:94:10",
																"nodeType": "YulFunctionCall",
																"src": "3140:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3131:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3131:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "2870:370:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2925:6:10",
														"nodeType": "YulTypedName",
														"src": "2925:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2933:3:10",
														"nodeType": "YulTypedName",
														"src": "2933:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2941:5:10",
														"nodeType": "YulTypedName",
														"src": "2941:5:10",
														"type": ""
													}
												],
												"src": "2870:370:10"
											},
											{
												"body": {
													"nativeSrc": "3335:28:10",
													"nodeType": "YulBlock",
													"src": "3335:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3352:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3352:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3355:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3345:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3345:6:10"
																},
																"nativeSrc": "3345:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3345:12:10"
															},
															"nativeSrc": "3345:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "3345:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "3246:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3246:117:10"
											},
											{
												"body": {
													"nativeSrc": "3435:241:10",
													"nodeType": "YulBlock",
													"src": "3435:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3540:22:10",
																"nodeType": "YulBlock",
																"src": "3540:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3542:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "3542:16:10"
																			},
																			"nativeSrc": "3542:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3542:18:10"
																		},
																		"nativeSrc": "3542:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3512:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3512:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3520:18:10",
																		"nodeType": "YulLiteral",
																		"src": "3520:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3509:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3509:2:10"
																},
																"nativeSrc": "3509:30:10",
																"nodeType": "YulFunctionCall",
																"src": "3509:30:10"
															},
															"nativeSrc": "3506:56:10",
															"nodeType": "YulIf",
															"src": "3506:56:10"
														},
														{
															"nativeSrc": "3572:37:10",
															"nodeType": "YulAssignment",
															"src": "3572:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3602:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3602:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "3580:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "3580:21:10"
																},
																"nativeSrc": "3580:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3580:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3572:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3572:4:10"
																}
															]
														},
														{
															"nativeSrc": "3646:23:10",
															"nodeType": "YulAssignment",
															"src": "3646:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "3658:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3658:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3664:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3664:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3654:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3654:3:10"
																},
																"nativeSrc": "3654:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3654:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3646:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3646:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "3369:307:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "3419:6:10",
														"nodeType": "YulTypedName",
														"src": "3419:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "3430:4:10",
														"nodeType": "YulTypedName",
														"src": "3430:4:10",
														"type": ""
													}
												],
												"src": "3369:307:10"
											},
											{
												"body": {
													"nativeSrc": "3746:84:10",
													"nodeType": "YulBlock",
													"src": "3746:84:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3770:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3770:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3775:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3775:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3780:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3757:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3757:12:10"
																},
																"nativeSrc": "3757:30:10",
																"nodeType": "YulFunctionCall",
																"src": "3757:30:10"
															},
															"nativeSrc": "3757:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "3757:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3807:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3807:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3812:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3812:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3803:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3803:3:10"
																		},
																		"nativeSrc": "3803:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3803:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3821:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3821:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3796:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3796:6:10"
																},
																"nativeSrc": "3796:27:10",
																"nodeType": "YulFunctionCall",
																"src": "3796:27:10"
															},
															"nativeSrc": "3796:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "3796:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "3682:148:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3728:3:10",
														"nodeType": "YulTypedName",
														"src": "3728:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3733:3:10",
														"nodeType": "YulTypedName",
														"src": "3733:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3738:6:10",
														"nodeType": "YulTypedName",
														"src": "3738:6:10",
														"type": ""
													}
												],
												"src": "3682:148:10"
											},
											{
												"body": {
													"nativeSrc": "3919:340:10",
													"nodeType": "YulBlock",
													"src": "3919:340:10",
													"statements": [
														{
															"nativeSrc": "3929:74:10",
															"nodeType": "YulAssignment",
															"src": "3929:74:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3995:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3995:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "3954:40:10",
																			"nodeType": "YulIdentifier",
																			"src": "3954:40:10"
																		},
																		"nativeSrc": "3954:48:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3954:48:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3938:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "3938:15:10"
																},
																"nativeSrc": "3938:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3938:65:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3929:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3929:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4019:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4019:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4026:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4026:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4012:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4012:6:10"
																},
																"nativeSrc": "4012:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4012:21:10"
															},
															"nativeSrc": "4012:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4012:21:10"
														},
														{
															"nativeSrc": "4042:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4042:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4057:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4057:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4064:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4064:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4053:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4053:3:10"
																},
																"nativeSrc": "4053:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4053:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4046:3:10",
																	"nodeType": "YulTypedName",
																	"src": "4046:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4107:83:10",
																"nodeType": "YulBlock",
																"src": "4107:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "4109:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4109:77:10"
																			},
																			"nativeSrc": "4109:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4109:79:10"
																		},
																		"nativeSrc": "4109:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4109:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "4088:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4088:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4093:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4093:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4084:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4084:3:10"
																		},
																		"nativeSrc": "4084:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4084:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4102:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4102:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4081:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4081:2:10"
																},
																"nativeSrc": "4081:25:10",
																"nodeType": "YulFunctionCall",
																"src": "4081:25:10"
															},
															"nativeSrc": "4078:112:10",
															"nodeType": "YulIf",
															"src": "4078:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4236:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4236:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "4241:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4241:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4246:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4246:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "4199:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "4199:36:10"
																},
																"nativeSrc": "4199:54:10",
																"nodeType": "YulFunctionCall",
																"src": "4199:54:10"
															},
															"nativeSrc": "4199:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "4199:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "3836:423:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3892:3:10",
														"nodeType": "YulTypedName",
														"src": "3892:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3897:6:10",
														"nodeType": "YulTypedName",
														"src": "3897:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3905:3:10",
														"nodeType": "YulTypedName",
														"src": "3905:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3913:5:10",
														"nodeType": "YulTypedName",
														"src": "3913:5:10",
														"type": ""
													}
												],
												"src": "3836:423:10"
											},
											{
												"body": {
													"nativeSrc": "4339:277:10",
													"nodeType": "YulBlock",
													"src": "4339:277:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4388:83:10",
																"nodeType": "YulBlock",
																"src": "4388:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "4390:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4390:77:10"
																			},
																			"nativeSrc": "4390:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4390:79:10"
																		},
																		"nativeSrc": "4390:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4390:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4367:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4367:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4375:4:10",
																						"nodeType": "YulLiteral",
																						"src": "4375:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4363:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4363:3:10"
																				},
																				"nativeSrc": "4363:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4363:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4382:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4382:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4359:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4359:3:10"
																		},
																		"nativeSrc": "4359:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4359:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4352:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4352:6:10"
																},
																"nativeSrc": "4352:35:10",
																"nodeType": "YulFunctionCall",
																"src": "4352:35:10"
															},
															"nativeSrc": "4349:122:10",
															"nodeType": "YulIf",
															"src": "4349:122:10"
														},
														{
															"nativeSrc": "4480:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4480:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4507:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4507:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4494:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4494:12:10"
																},
																"nativeSrc": "4494:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4494:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4484:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4484:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4523:87:10",
															"nodeType": "YulAssignment",
															"src": "4523:87:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4583:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4583:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4591:4:10",
																				"nodeType": "YulLiteral",
																				"src": "4591:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4579:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4579:3:10"
																		},
																		"nativeSrc": "4579:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4598:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4598:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4606:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4606:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "4532:46:10",
																	"nodeType": "YulIdentifier",
																	"src": "4532:46:10"
																},
																"nativeSrc": "4532:78:10",
																"nodeType": "YulFunctionCall",
																"src": "4532:78:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4523:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4523:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "4278:338:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4317:6:10",
														"nodeType": "YulTypedName",
														"src": "4317:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4325:3:10",
														"nodeType": "YulTypedName",
														"src": "4325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4333:5:10",
														"nodeType": "YulTypedName",
														"src": "4333:5:10",
														"type": ""
													}
												],
												"src": "4278:338:10"
											},
											{
												"body": {
													"nativeSrc": "4756:873:10",
													"nodeType": "YulBlock",
													"src": "4756:873:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4802:83:10",
																"nodeType": "YulBlock",
																"src": "4802:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4804:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4804:77:10"
																			},
																			"nativeSrc": "4804:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4804:79:10"
																		},
																		"nativeSrc": "4804:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4804:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4777:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4777:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4786:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4786:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4773:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4773:3:10"
																		},
																		"nativeSrc": "4773:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4773:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4798:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4798:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4769:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4769:3:10"
																},
																"nativeSrc": "4769:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4769:32:10"
															},
															"nativeSrc": "4766:119:10",
															"nodeType": "YulIf",
															"src": "4766:119:10"
														},
														{
															"nativeSrc": "4895:302:10",
															"nodeType": "YulBlock",
															"src": "4895:302:10",
															"statements": [
																{
																	"nativeSrc": "4910:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4910:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4941:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4941:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4952:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4952:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4937:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4937:3:10"
																				},
																				"nativeSrc": "4937:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4937:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4924:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "4924:12:10"
																		},
																		"nativeSrc": "4924:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4924:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4914:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4914:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5002:83:10",
																		"nodeType": "YulBlock",
																		"src": "5002:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5004:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "5004:77:10"
																					},
																					"nativeSrc": "5004:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5004:79:10"
																				},
																				"nativeSrc": "5004:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "5004:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4974:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4974:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4982:18:10",
																				"nodeType": "YulLiteral",
																				"src": "4982:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4971:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4971:2:10"
																		},
																		"nativeSrc": "4971:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4971:30:10"
																	},
																	"nativeSrc": "4968:117:10",
																	"nodeType": "YulIf",
																	"src": "4968:117:10"
																},
																{
																	"nativeSrc": "5099:88:10",
																	"nodeType": "YulAssignment",
																	"src": "5099:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5159:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5159:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5170:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5170:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5155:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5155:3:10"
																				},
																				"nativeSrc": "5155:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5155:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5179:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5179:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "5109:45:10",
																			"nodeType": "YulIdentifier",
																			"src": "5109:45:10"
																		},
																		"nativeSrc": "5109:78:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5109:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5099:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5099:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5207:287:10",
															"nodeType": "YulBlock",
															"src": "5207:287:10",
															"statements": [
																{
																	"nativeSrc": "5222:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5222:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5253:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5253:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5264:2:10",
																						"nodeType": "YulLiteral",
																						"src": "5264:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5249:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5249:3:10"
																				},
																				"nativeSrc": "5249:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5249:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5236:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "5236:12:10"
																		},
																		"nativeSrc": "5236:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5236:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5226:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5226:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5315:83:10",
																		"nodeType": "YulBlock",
																		"src": "5315:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5317:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "5317:77:10"
																					},
																					"nativeSrc": "5317:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5317:79:10"
																				},
																				"nativeSrc": "5317:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "5317:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5287:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5287:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5295:18:10",
																				"nodeType": "YulLiteral",
																				"src": "5295:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5284:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5284:2:10"
																		},
																		"nativeSrc": "5284:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5284:30:10"
																	},
																	"nativeSrc": "5281:117:10",
																	"nodeType": "YulIf",
																	"src": "5281:117:10"
																},
																{
																	"nativeSrc": "5412:72:10",
																	"nodeType": "YulAssignment",
																	"src": "5412:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5456:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5456:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5467:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5467:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5452:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5452:3:10"
																				},
																				"nativeSrc": "5452:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5452:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5476:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5476:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "5422:29:10",
																			"nodeType": "YulIdentifier",
																			"src": "5422:29:10"
																		},
																		"nativeSrc": "5422:62:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5422:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5412:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5412:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5504:118:10",
															"nodeType": "YulBlock",
															"src": "5504:118:10",
															"statements": [
																{
																	"nativeSrc": "5519:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5519:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5533:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5533:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5523:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5523:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5549:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5549:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5584:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5584:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5595:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5595:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5580:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5580:3:10"
																				},
																				"nativeSrc": "5580:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5580:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5604:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5604:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5559:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5559:20:10"
																		},
																		"nativeSrc": "5559:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5559:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5549:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5549:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bytes_memory_ptrt_address",
												"nativeSrc": "4622:1007:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4710:9:10",
														"nodeType": "YulTypedName",
														"src": "4710:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4721:7:10",
														"nodeType": "YulTypedName",
														"src": "4721:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4733:6:10",
														"nodeType": "YulTypedName",
														"src": "4733:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4741:6:10",
														"nodeType": "YulTypedName",
														"src": "4741:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4749:6:10",
														"nodeType": "YulTypedName",
														"src": "4749:6:10",
														"type": ""
													}
												],
												"src": "4622:1007:10"
											},
											{
												"body": {
													"nativeSrc": "5667:28:10",
													"nodeType": "YulBlock",
													"src": "5667:28:10",
													"statements": [
														{
															"nativeSrc": "5677:12:10",
															"nodeType": "YulAssignment",
															"src": "5677:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5684:5:10",
																"nodeType": "YulIdentifier",
																"src": "5684:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5677:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5677:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5635:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5653:5:10",
														"nodeType": "YulTypedName",
														"src": "5653:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5663:3:10",
														"nodeType": "YulTypedName",
														"src": "5663:3:10",
														"type": ""
													}
												],
												"src": "5635:60:10"
											},
											{
												"body": {
													"nativeSrc": "5761:82:10",
													"nodeType": "YulBlock",
													"src": "5761:82:10",
													"statements": [
														{
															"nativeSrc": "5771:66:10",
															"nodeType": "YulAssignment",
															"src": "5771:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5829:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5829:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5811:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5811:17:10"
																				},
																				"nativeSrc": "5811:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5811:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5802:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "5802:8:10"
																		},
																		"nativeSrc": "5802:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5802:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5784:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5784:17:10"
																},
																"nativeSrc": "5784:53:10",
																"nodeType": "YulFunctionCall",
																"src": "5784:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5771:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5771:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5701:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5741:5:10",
														"nodeType": "YulTypedName",
														"src": "5741:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5751:9:10",
														"nodeType": "YulTypedName",
														"src": "5751:9:10",
														"type": ""
													}
												],
												"src": "5701:142:10"
											},
											{
												"body": {
													"nativeSrc": "5909:66:10",
													"nodeType": "YulBlock",
													"src": "5909:66:10",
													"statements": [
														{
															"nativeSrc": "5919:50:10",
															"nodeType": "YulAssignment",
															"src": "5919:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5963:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5963:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5932:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5932:30:10"
																},
																"nativeSrc": "5932:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5932:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5919:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5919:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5849:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5889:5:10",
														"nodeType": "YulTypedName",
														"src": "5889:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5899:9:10",
														"nodeType": "YulTypedName",
														"src": "5899:9:10",
														"type": ""
													}
												],
												"src": "5849:126:10"
											},
											{
												"body": {
													"nativeSrc": "6054:66:10",
													"nodeType": "YulBlock",
													"src": "6054:66:10",
													"statements": [
														{
															"nativeSrc": "6064:50:10",
															"nodeType": "YulAssignment",
															"src": "6064:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6108:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6108:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6077:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "6077:30:10"
																},
																"nativeSrc": "6077:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6077:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6064:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "6064:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IAllo_$359_to_t_address",
												"nativeSrc": "5981:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6034:5:10",
														"nodeType": "YulTypedName",
														"src": "6034:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6044:9:10",
														"nodeType": "YulTypedName",
														"src": "6044:9:10",
														"type": ""
													}
												],
												"src": "5981:139:10"
											},
											{
												"body": {
													"nativeSrc": "6204:79:10",
													"nodeType": "YulBlock",
													"src": "6204:79:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6221:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6221:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6270:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6270:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IAllo_$359_to_t_address",
																			"nativeSrc": "6226:43:10",
																			"nodeType": "YulIdentifier",
																			"src": "6226:43:10"
																		},
																		"nativeSrc": "6226:50:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6226:50:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6214:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6214:6:10"
																},
																"nativeSrc": "6214:63:10",
																"nodeType": "YulFunctionCall",
																"src": "6214:63:10"
															},
															"nativeSrc": "6214:63:10",
															"nodeType": "YulExpressionStatement",
															"src": "6214:63:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IAllo_$359_to_t_address_fromStack",
												"nativeSrc": "6126:157:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6192:5:10",
														"nodeType": "YulTypedName",
														"src": "6192:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6199:3:10",
														"nodeType": "YulTypedName",
														"src": "6199:3:10",
														"type": ""
													}
												],
												"src": "6126:157:10"
											},
											{
												"body": {
													"nativeSrc": "6400:137:10",
													"nodeType": "YulBlock",
													"src": "6400:137:10",
													"statements": [
														{
															"nativeSrc": "6410:26:10",
															"nodeType": "YulAssignment",
															"src": "6410:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6422:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6422:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6433:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6433:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6418:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6418:3:10"
																},
																"nativeSrc": "6418:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6418:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6410:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6410:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6503:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6503:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6516:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6516:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6527:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6527:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6512:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6512:3:10"
																		},
																		"nativeSrc": "6512:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6512:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IAllo_$359_to_t_address_fromStack",
																	"nativeSrc": "6446:56:10",
																	"nodeType": "YulIdentifier",
																	"src": "6446:56:10"
																},
																"nativeSrc": "6446:84:10",
																"nodeType": "YulFunctionCall",
																"src": "6446:84:10"
															},
															"nativeSrc": "6446:84:10",
															"nodeType": "YulExpressionStatement",
															"src": "6446:84:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IAllo_$359__to_t_address__fromStack_reversed",
												"nativeSrc": "6289:248:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6372:9:10",
														"nodeType": "YulTypedName",
														"src": "6372:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6384:6:10",
														"nodeType": "YulTypedName",
														"src": "6384:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6395:4:10",
														"nodeType": "YulTypedName",
														"src": "6395:4:10",
														"type": ""
													}
												],
												"src": "6289:248:10"
											},
											{
												"body": {
													"nativeSrc": "6635:560:10",
													"nodeType": "YulBlock",
													"src": "6635:560:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6681:83:10",
																"nodeType": "YulBlock",
																"src": "6681:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6683:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6683:77:10"
																			},
																			"nativeSrc": "6683:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6683:79:10"
																		},
																		"nativeSrc": "6683:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6683:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6656:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6656:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6665:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6665:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6652:3:10"
																		},
																		"nativeSrc": "6652:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6652:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6677:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6677:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6648:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6648:3:10"
																},
																"nativeSrc": "6648:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6648:32:10"
															},
															"nativeSrc": "6645:119:10",
															"nodeType": "YulIf",
															"src": "6645:119:10"
														},
														{
															"nativeSrc": "6774:286:10",
															"nodeType": "YulBlock",
															"src": "6774:286:10",
															"statements": [
																{
																	"nativeSrc": "6789:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6789:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6820:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6820:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6831:1:10",
																						"nodeType": "YulLiteral",
																						"src": "6831:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6816:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6816:3:10"
																				},
																				"nativeSrc": "6816:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6816:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6803:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "6803:12:10"
																		},
																		"nativeSrc": "6803:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6803:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6793:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6793:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6881:83:10",
																		"nodeType": "YulBlock",
																		"src": "6881:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6883:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "6883:77:10"
																					},
																					"nativeSrc": "6883:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6883:79:10"
																				},
																				"nativeSrc": "6883:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6883:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6853:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6853:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6861:18:10",
																				"nodeType": "YulLiteral",
																				"src": "6861:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6850:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6850:2:10"
																		},
																		"nativeSrc": "6850:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6850:30:10"
																	},
																	"nativeSrc": "6847:117:10",
																	"nodeType": "YulIf",
																	"src": "6847:117:10"
																},
																{
																	"nativeSrc": "6978:72:10",
																	"nodeType": "YulAssignment",
																	"src": "6978:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7022:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7022:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7033:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7033:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7018:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7018:3:10"
																				},
																				"nativeSrc": "7018:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7018:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7042:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7042:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "6988:29:10",
																			"nodeType": "YulIdentifier",
																			"src": "6988:29:10"
																		},
																		"nativeSrc": "6988:62:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6988:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6978:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6978:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7070:118:10",
															"nodeType": "YulBlock",
															"src": "7070:118:10",
															"statements": [
																{
																	"nativeSrc": "7085:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7085:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7099:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7099:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7089:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7089:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7115:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7115:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7150:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7150:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7161:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7161:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7146:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7146:3:10"
																				},
																				"nativeSrc": "7146:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7146:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7170:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7170:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7125:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7125:20:10"
																		},
																		"nativeSrc": "7125:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7125:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7115:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7115:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptrt_address",
												"nativeSrc": "6543:652:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6597:9:10",
														"nodeType": "YulTypedName",
														"src": "6597:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6608:7:10",
														"nodeType": "YulTypedName",
														"src": "6608:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6620:6:10",
														"nodeType": "YulTypedName",
														"src": "6620:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6628:6:10",
														"nodeType": "YulTypedName",
														"src": "6628:6:10",
														"type": ""
													}
												],
												"src": "6543:652:10"
											},
											{
												"body": {
													"nativeSrc": "7266:53:10",
													"nodeType": "YulBlock",
													"src": "7266:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7283:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7283:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7306:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7306:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7288:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "7288:17:10"
																		},
																		"nativeSrc": "7288:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7288:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7276:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7276:6:10"
																},
																"nativeSrc": "7276:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7276:37:10"
															},
															"nativeSrc": "7276:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "7276:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7201:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7254:5:10",
														"nodeType": "YulTypedName",
														"src": "7254:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7261:3:10",
														"nodeType": "YulTypedName",
														"src": "7261:3:10",
														"type": ""
													}
												],
												"src": "7201:118:10"
											},
											{
												"body": {
													"nativeSrc": "7423:124:10",
													"nodeType": "YulBlock",
													"src": "7423:124:10",
													"statements": [
														{
															"nativeSrc": "7433:26:10",
															"nodeType": "YulAssignment",
															"src": "7433:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7445:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7445:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7456:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7456:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7441:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7441:3:10"
																},
																"nativeSrc": "7441:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7441:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7433:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7433:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7513:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7513:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7526:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7526:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7537:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7537:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7522:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7522:3:10"
																		},
																		"nativeSrc": "7522:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7522:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7469:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7469:43:10"
																},
																"nativeSrc": "7469:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7469:71:10"
															},
															"nativeSrc": "7469:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7469:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7325:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7395:9:10",
														"nodeType": "YulTypedName",
														"src": "7395:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7407:6:10",
														"nodeType": "YulTypedName",
														"src": "7407:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7418:4:10",
														"nodeType": "YulTypedName",
														"src": "7418:4:10",
														"type": ""
													}
												],
												"src": "7325:222:10"
											},
											{
												"body": {
													"nativeSrc": "7598:32:10",
													"nodeType": "YulBlock",
													"src": "7598:32:10",
													"statements": [
														{
															"nativeSrc": "7608:16:10",
															"nodeType": "YulAssignment",
															"src": "7608:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "7619:5:10",
																"nodeType": "YulIdentifier",
																"src": "7619:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7608:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "7608:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7553:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7580:5:10",
														"nodeType": "YulTypedName",
														"src": "7580:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7590:7:10",
														"nodeType": "YulTypedName",
														"src": "7590:7:10",
														"type": ""
													}
												],
												"src": "7553:77:10"
											},
											{
												"body": {
													"nativeSrc": "7701:53:10",
													"nodeType": "YulBlock",
													"src": "7701:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7718:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7718:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7741:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7741:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7723:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "7723:17:10"
																		},
																		"nativeSrc": "7723:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7723:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7711:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7711:6:10"
																},
																"nativeSrc": "7711:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7711:37:10"
															},
															"nativeSrc": "7711:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "7711:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7636:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7689:5:10",
														"nodeType": "YulTypedName",
														"src": "7689:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7696:3:10",
														"nodeType": "YulTypedName",
														"src": "7696:3:10",
														"type": ""
													}
												],
												"src": "7636:118:10"
											},
											{
												"body": {
													"nativeSrc": "7858:124:10",
													"nodeType": "YulBlock",
													"src": "7858:124:10",
													"statements": [
														{
															"nativeSrc": "7868:26:10",
															"nodeType": "YulAssignment",
															"src": "7868:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7880:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7880:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7891:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7891:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7876:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7876:3:10"
																},
																"nativeSrc": "7876:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7876:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7868:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7868:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7948:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7948:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7961:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7961:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7972:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7972:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7957:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7957:3:10"
																		},
																		"nativeSrc": "7957:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7957:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7904:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7904:43:10"
																},
																"nativeSrc": "7904:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7904:71:10"
															},
															"nativeSrc": "7904:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7904:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7760:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7830:9:10",
														"nodeType": "YulTypedName",
														"src": "7830:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7842:6:10",
														"nodeType": "YulTypedName",
														"src": "7842:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7853:4:10",
														"nodeType": "YulTypedName",
														"src": "7853:4:10",
														"type": ""
													}
												],
												"src": "7760:222:10"
											},
											{
												"body": {
													"nativeSrc": "8033:32:10",
													"nodeType": "YulBlock",
													"src": "8033:32:10",
													"statements": [
														{
															"nativeSrc": "8043:16:10",
															"nodeType": "YulAssignment",
															"src": "8043:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "8054:5:10",
																"nodeType": "YulIdentifier",
																"src": "8054:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8043:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8043:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "7988:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8015:5:10",
														"nodeType": "YulTypedName",
														"src": "8015:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8025:7:10",
														"nodeType": "YulTypedName",
														"src": "8025:7:10",
														"type": ""
													}
												],
												"src": "7988:77:10"
											},
											{
												"body": {
													"nativeSrc": "8136:53:10",
													"nodeType": "YulBlock",
													"src": "8136:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8153:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8153:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8176:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8176:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8158:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "8158:17:10"
																		},
																		"nativeSrc": "8158:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8158:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8146:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8146:6:10"
																},
																"nativeSrc": "8146:37:10",
																"nodeType": "YulFunctionCall",
																"src": "8146:37:10"
															},
															"nativeSrc": "8146:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "8146:37:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8071:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8124:5:10",
														"nodeType": "YulTypedName",
														"src": "8124:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8131:3:10",
														"nodeType": "YulTypedName",
														"src": "8131:3:10",
														"type": ""
													}
												],
												"src": "8071:118:10"
											},
											{
												"body": {
													"nativeSrc": "8293:124:10",
													"nodeType": "YulBlock",
													"src": "8293:124:10",
													"statements": [
														{
															"nativeSrc": "8303:26:10",
															"nodeType": "YulAssignment",
															"src": "8303:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8315:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8315:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8326:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8326:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8311:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8311:3:10"
																},
																"nativeSrc": "8311:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8311:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8303:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8303:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8383:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8383:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8396:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8396:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8407:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8407:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8392:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8392:3:10"
																		},
																		"nativeSrc": "8392:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8392:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8339:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8339:43:10"
																},
																"nativeSrc": "8339:71:10",
																"nodeType": "YulFunctionCall",
																"src": "8339:71:10"
															},
															"nativeSrc": "8339:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "8339:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "8195:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8265:9:10",
														"nodeType": "YulTypedName",
														"src": "8265:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8277:6:10",
														"nodeType": "YulTypedName",
														"src": "8277:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8288:4:10",
														"nodeType": "YulTypedName",
														"src": "8288:4:10",
														"type": ""
													}
												],
												"src": "8195:222:10"
											},
											{
												"body": {
													"nativeSrc": "8489:263:10",
													"nodeType": "YulBlock",
													"src": "8489:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8535:83:10",
																"nodeType": "YulBlock",
																"src": "8535:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8537:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8537:77:10"
																			},
																			"nativeSrc": "8537:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8537:79:10"
																		},
																		"nativeSrc": "8537:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8537:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8510:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8510:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8519:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8519:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8506:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8506:3:10"
																		},
																		"nativeSrc": "8506:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8506:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8531:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8531:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8502:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8502:3:10"
																},
																"nativeSrc": "8502:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8502:32:10"
															},
															"nativeSrc": "8499:119:10",
															"nodeType": "YulIf",
															"src": "8499:119:10"
														},
														{
															"nativeSrc": "8628:117:10",
															"nodeType": "YulBlock",
															"src": "8628:117:10",
															"statements": [
																{
																	"nativeSrc": "8643:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8643:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8657:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8657:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8647:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8647:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8672:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8672:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8707:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8707:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8718:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8718:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8703:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8703:3:10"
																				},
																				"nativeSrc": "8703:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8703:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8727:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8727:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8682:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8682:20:10"
																		},
																		"nativeSrc": "8682:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8682:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8672:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8672:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8423:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8459:9:10",
														"nodeType": "YulTypedName",
														"src": "8459:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8470:7:10",
														"nodeType": "YulTypedName",
														"src": "8470:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8482:6:10",
														"nodeType": "YulTypedName",
														"src": "8482:6:10",
														"type": ""
													}
												],
												"src": "8423:329:10"
											},
											{
												"body": {
													"nativeSrc": "8800:48:10",
													"nodeType": "YulBlock",
													"src": "8800:48:10",
													"statements": [
														{
															"nativeSrc": "8810:32:10",
															"nodeType": "YulAssignment",
															"src": "8810:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8835:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8835:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8828:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8828:6:10"
																		},
																		"nativeSrc": "8828:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8828:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8821:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8821:6:10"
																},
																"nativeSrc": "8821:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8821:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8810:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8810:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "8758:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8782:5:10",
														"nodeType": "YulTypedName",
														"src": "8782:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8792:7:10",
														"nodeType": "YulTypedName",
														"src": "8792:7:10",
														"type": ""
													}
												],
												"src": "8758:90:10"
											},
											{
												"body": {
													"nativeSrc": "8913:50:10",
													"nodeType": "YulBlock",
													"src": "8913:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8930:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8930:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8950:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8950:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "8935:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "8935:14:10"
																		},
																		"nativeSrc": "8935:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8935:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8923:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8923:6:10"
																},
																"nativeSrc": "8923:34:10",
																"nodeType": "YulFunctionCall",
																"src": "8923:34:10"
															},
															"nativeSrc": "8923:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "8923:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "8854:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8901:5:10",
														"nodeType": "YulTypedName",
														"src": "8901:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8908:3:10",
														"nodeType": "YulTypedName",
														"src": "8908:3:10",
														"type": ""
													}
												],
												"src": "8854:109:10"
											},
											{
												"body": {
													"nativeSrc": "9061:118:10",
													"nodeType": "YulBlock",
													"src": "9061:118:10",
													"statements": [
														{
															"nativeSrc": "9071:26:10",
															"nodeType": "YulAssignment",
															"src": "9071:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9083:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9083:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9094:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9094:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9079:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9079:3:10"
																},
																"nativeSrc": "9079:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9079:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9071:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9071:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9145:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9145:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9158:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9158:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9169:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9169:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9154:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9154:3:10"
																		},
																		"nativeSrc": "9154:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9154:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "9107:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "9107:37:10"
																},
																"nativeSrc": "9107:65:10",
																"nodeType": "YulFunctionCall",
																"src": "9107:65:10"
															},
															"nativeSrc": "9107:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "9107:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "8969:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9033:9:10",
														"nodeType": "YulTypedName",
														"src": "9033:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9045:6:10",
														"nodeType": "YulTypedName",
														"src": "9045:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9056:4:10",
														"nodeType": "YulTypedName",
														"src": "9056:4:10",
														"type": ""
													}
												],
												"src": "8969:210:10"
											},
											{
												"body": {
													"nativeSrc": "9276:229:10",
													"nodeType": "YulBlock",
													"src": "9276:229:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9381:22:10",
																"nodeType": "YulBlock",
																"src": "9381:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9383:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9383:16:10"
																			},
																			"nativeSrc": "9383:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9383:18:10"
																		},
																		"nativeSrc": "9383:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9383:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9353:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9353:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9361:18:10",
																		"nodeType": "YulLiteral",
																		"src": "9361:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9350:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9350:2:10"
																},
																"nativeSrc": "9350:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9350:30:10"
															},
															"nativeSrc": "9347:56:10",
															"nodeType": "YulIf",
															"src": "9347:56:10"
														},
														{
															"nativeSrc": "9413:25:10",
															"nodeType": "YulAssignment",
															"src": "9413:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9425:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9425:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9433:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9433:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9421:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9421:3:10"
																},
																"nativeSrc": "9421:17:10",
																"nodeType": "YulFunctionCall",
																"src": "9421:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9413:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9413:4:10"
																}
															]
														},
														{
															"nativeSrc": "9475:23:10",
															"nodeType": "YulAssignment",
															"src": "9475:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9487:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9487:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9493:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9493:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9483:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9483:3:10"
																},
																"nativeSrc": "9483:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9483:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9475:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9475:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "9185:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9260:6:10",
														"nodeType": "YulTypedName",
														"src": "9260:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9271:4:10",
														"nodeType": "YulTypedName",
														"src": "9271:4:10",
														"type": ""
													}
												],
												"src": "9185:320:10"
											},
											{
												"body": {
													"nativeSrc": "9637:831:10",
													"nodeType": "YulBlock",
													"src": "9637:831:10",
													"statements": [
														{
															"nativeSrc": "9647:99:10",
															"nodeType": "YulAssignment",
															"src": "9647:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9738:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9738:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "9672:65:10",
																			"nodeType": "YulIdentifier",
																			"src": "9672:65:10"
																		},
																		"nativeSrc": "9672:73:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9672:73:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9656:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "9656:15:10"
																},
																"nativeSrc": "9656:90:10",
																"nodeType": "YulFunctionCall",
																"src": "9656:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9647:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9647:5:10"
																}
															]
														},
														{
															"nativeSrc": "9755:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9755:16:10",
															"value": {
																"name": "array",
																"nativeSrc": "9766:5:10",
																"nodeType": "YulIdentifier",
																"src": "9766:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9759:3:10",
																	"nodeType": "YulTypedName",
																	"src": "9759:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9788:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9788:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9795:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9795:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9781:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9781:6:10"
																},
																"nativeSrc": "9781:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9781:21:10"
															},
															"nativeSrc": "9781:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "9781:21:10"
														},
														{
															"nativeSrc": "9811:23:10",
															"nodeType": "YulAssignment",
															"src": "9811:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9822:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9822:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9829:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9829:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9818:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9818:3:10"
																},
																"nativeSrc": "9818:16:10",
																"nodeType": "YulFunctionCall",
																"src": "9818:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "9811:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9811:3:10"
																}
															]
														},
														{
															"nativeSrc": "9844:44:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9844:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9862:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9862:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9874:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9874:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9882:4:10",
																				"nodeType": "YulLiteral",
																				"src": "9882:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "9870:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9870:3:10"
																		},
																		"nativeSrc": "9870:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9870:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9858:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9858:3:10"
																},
																"nativeSrc": "9858:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9858:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "9848:6:10",
																	"nodeType": "YulTypedName",
																	"src": "9848:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9916:103:10",
																"nodeType": "YulBlock",
																"src": "9916:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "9930:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9930:77:10"
																			},
																			"nativeSrc": "9930:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9930:79:10"
																		},
																		"nativeSrc": "9930:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9930:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "9903:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9903:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9911:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9911:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9900:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9900:2:10"
																},
																"nativeSrc": "9900:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9900:15:10"
															},
															"nativeSrc": "9897:122:10",
															"nodeType": "YulIf",
															"src": "9897:122:10"
														},
														{
															"body": {
																"nativeSrc": "10104:358:10",
																"nodeType": "YulBlock",
																"src": "10104:358:10",
																"statements": [
																	{
																		"nativeSrc": "10119:36:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10119:36:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "10151:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10151:3:10"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "10138:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "10138:12:10"
																			},
																			"nativeSrc": "10138:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10138:17:10"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nativeSrc": "10123:11:10",
																				"nodeType": "YulTypedName",
																				"src": "10123:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "10207:83:10",
																			"nodeType": "YulBlock",
																			"src": "10207:83:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																							"nativeSrc": "10209:77:10",
																							"nodeType": "YulIdentifier",
																							"src": "10209:77:10"
																						},
																						"nativeSrc": "10209:79:10",
																						"nodeType": "YulFunctionCall",
																						"src": "10209:79:10"
																					},
																					"nativeSrc": "10209:79:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "10209:79:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nativeSrc": "10174:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "10174:11:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10187:18:10",
																					"nodeType": "YulLiteral",
																					"src": "10187:18:10",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10171:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "10171:2:10"
																			},
																			"nativeSrc": "10171:35:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10171:35:10"
																		},
																		"nativeSrc": "10168:122:10",
																		"nodeType": "YulIf",
																		"src": "10168:122:10"
																	},
																	{
																		"nativeSrc": "10303:42:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10303:42:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nativeSrc": "10325:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "10325:6:10"
																				},
																				{
																					"name": "innerOffset",
																					"nativeSrc": "10333:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "10333:11:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10321:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10321:3:10"
																			},
																			"nativeSrc": "10321:24:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10321:24:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "10307:10:10",
																				"nodeType": "YulTypedName",
																				"src": "10307:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "10366:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10366:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "10401:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "10401:10:10"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "10413:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "10413:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_bytes_memory_ptr",
																						"nativeSrc": "10371:29:10",
																						"nodeType": "YulIdentifier",
																						"src": "10371:29:10"
																					},
																					"nativeSrc": "10371:46:10",
																					"nodeType": "YulFunctionCall",
																					"src": "10371:46:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10359:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10359:6:10"
																			},
																			"nativeSrc": "10359:59:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10359:59:10"
																		},
																		"nativeSrc": "10359:59:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10359:59:10"
																	},
																	{
																		"nativeSrc": "10431:21:10",
																		"nodeType": "YulAssignment",
																		"src": "10431:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "10442:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10442:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10447:4:10",
																					"nodeType": "YulLiteral",
																					"src": "10447:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10438:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10438:3:10"
																			},
																			"nativeSrc": "10438:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10438:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "10431:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10431:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10057:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10057:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "10062:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10062:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10054:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10054:2:10"
																},
																"nativeSrc": "10054:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10054:15:10"
															},
															"nativeSrc": "10028:434:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10070:25:10",
																"nodeType": "YulBlock",
																"src": "10070:25:10",
																"statements": [
																	{
																		"nativeSrc": "10072:21:10",
																		"nodeType": "YulAssignment",
																		"src": "10072:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "10083:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10083:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10088:4:10",
																					"nodeType": "YulLiteral",
																					"src": "10088:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10079:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10079:3:10"
																			},
																			"nativeSrc": "10079:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10079:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "10072:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10072:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10032:21:10",
																"nodeType": "YulBlock",
																"src": "10032:21:10",
																"statements": [
																	{
																		"nativeSrc": "10034:17:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10034:17:10",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "10045:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10045:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "10038:3:10",
																				"nodeType": "YulTypedName",
																				"src": "10038:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10028:434:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "9526:942:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9607:6:10",
														"nodeType": "YulTypedName",
														"src": "9607:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9615:6:10",
														"nodeType": "YulTypedName",
														"src": "9615:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9623:3:10",
														"nodeType": "YulTypedName",
														"src": "9623:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9631:5:10",
														"nodeType": "YulTypedName",
														"src": "9631:5:10",
														"type": ""
													}
												],
												"src": "9526:942:10"
											},
											{
												"body": {
													"nativeSrc": "10575:302:10",
													"nodeType": "YulBlock",
													"src": "10575:302:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10624:83:10",
																"nodeType": "YulBlock",
																"src": "10624:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10626:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "10626:77:10"
																			},
																			"nativeSrc": "10626:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10626:79:10"
																		},
																		"nativeSrc": "10626:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10626:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10603:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10603:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10611:4:10",
																						"nodeType": "YulLiteral",
																						"src": "10611:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10599:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10599:3:10"
																				},
																				"nativeSrc": "10599:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10599:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10618:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10618:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10595:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10595:3:10"
																		},
																		"nativeSrc": "10595:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10595:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10588:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10588:6:10"
																},
																"nativeSrc": "10588:35:10",
																"nodeType": "YulFunctionCall",
																"src": "10588:35:10"
															},
															"nativeSrc": "10585:122:10",
															"nodeType": "YulIf",
															"src": "10585:122:10"
														},
														{
															"nativeSrc": "10716:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10716:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10743:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10743:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10730:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "10730:12:10"
																},
																"nativeSrc": "10730:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10730:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10720:6:10",
																	"nodeType": "YulTypedName",
																	"src": "10720:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10759:112:10",
															"nodeType": "YulAssignment",
															"src": "10759:112:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10844:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10844:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10852:4:10",
																				"nodeType": "YulLiteral",
																				"src": "10852:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10840:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10840:3:10"
																		},
																		"nativeSrc": "10840:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10840:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10859:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10859:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10867:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10867:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "10768:71:10",
																	"nodeType": "YulIdentifier",
																	"src": "10768:71:10"
																},
																"nativeSrc": "10768:103:10",
																"nodeType": "YulFunctionCall",
																"src": "10768:103:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10759:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10759:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "10489:388:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10553:6:10",
														"nodeType": "YulTypedName",
														"src": "10553:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10561:3:10",
														"nodeType": "YulTypedName",
														"src": "10561:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10569:5:10",
														"nodeType": "YulTypedName",
														"src": "10569:5:10",
														"type": ""
													}
												],
												"src": "10489:388:10"
											},
											{
												"body": {
													"nativeSrc": "11025:770:10",
													"nodeType": "YulBlock",
													"src": "11025:770:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11071:83:10",
																"nodeType": "YulBlock",
																"src": "11071:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11073:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "11073:77:10"
																			},
																			"nativeSrc": "11073:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11073:79:10"
																		},
																		"nativeSrc": "11073:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11073:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11046:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11046:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11055:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11055:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11042:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11042:3:10"
																		},
																		"nativeSrc": "11042:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11042:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11067:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11067:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11038:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11038:3:10"
																},
																"nativeSrc": "11038:32:10",
																"nodeType": "YulFunctionCall",
																"src": "11038:32:10"
															},
															"nativeSrc": "11035:119:10",
															"nodeType": "YulIf",
															"src": "11035:119:10"
														},
														{
															"nativeSrc": "11164:302:10",
															"nodeType": "YulBlock",
															"src": "11164:302:10",
															"statements": [
																{
																	"nativeSrc": "11179:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11179:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11210:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11210:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11221:1:10",
																						"nodeType": "YulLiteral",
																						"src": "11221:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11206:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11206:3:10"
																				},
																				"nativeSrc": "11206:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11206:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11193:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "11193:12:10"
																		},
																		"nativeSrc": "11193:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11193:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11183:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11183:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11271:83:10",
																		"nodeType": "YulBlock",
																		"src": "11271:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11273:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "11273:77:10"
																					},
																					"nativeSrc": "11273:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "11273:79:10"
																				},
																				"nativeSrc": "11273:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "11273:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11243:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11243:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11251:18:10",
																				"nodeType": "YulLiteral",
																				"src": "11251:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11240:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "11240:2:10"
																		},
																		"nativeSrc": "11240:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11240:30:10"
																	},
																	"nativeSrc": "11237:117:10",
																	"nodeType": "YulIf",
																	"src": "11237:117:10"
																},
																{
																	"nativeSrc": "11368:88:10",
																	"nodeType": "YulAssignment",
																	"src": "11368:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11428:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11428:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11439:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11439:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11424:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11424:3:10"
																				},
																				"nativeSrc": "11424:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11424:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11448:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11448:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "11378:45:10",
																			"nodeType": "YulIdentifier",
																			"src": "11378:45:10"
																		},
																		"nativeSrc": "11378:78:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11378:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11368:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11368:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11476:312:10",
															"nodeType": "YulBlock",
															"src": "11476:312:10",
															"statements": [
																{
																	"nativeSrc": "11491:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11491:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11522:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11522:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11533:2:10",
																						"nodeType": "YulLiteral",
																						"src": "11533:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11518:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11518:3:10"
																				},
																				"nativeSrc": "11518:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11518:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11505:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "11505:12:10"
																		},
																		"nativeSrc": "11505:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11505:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11495:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11495:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11584:83:10",
																		"nodeType": "YulBlock",
																		"src": "11584:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11586:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "11586:77:10"
																					},
																					"nativeSrc": "11586:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "11586:79:10"
																				},
																				"nativeSrc": "11586:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "11586:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11556:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11556:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11564:18:10",
																				"nodeType": "YulLiteral",
																				"src": "11564:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11553:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "11553:2:10"
																		},
																		"nativeSrc": "11553:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11553:30:10"
																	},
																	"nativeSrc": "11550:117:10",
																	"nodeType": "YulIf",
																	"src": "11550:117:10"
																},
																{
																	"nativeSrc": "11681:97:10",
																	"nodeType": "YulAssignment",
																	"src": "11681:97:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11750:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11750:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11761:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11761:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11746:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11746:3:10"
																				},
																				"nativeSrc": "11746:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11746:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11770:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11770:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "11691:54:10",
																			"nodeType": "YulIdentifier",
																			"src": "11691:54:10"
																		},
																		"nativeSrc": "11691:87:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11691:87:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11681:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11681:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "10883:912:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10987:9:10",
														"nodeType": "YulTypedName",
														"src": "10987:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10998:7:10",
														"nodeType": "YulTypedName",
														"src": "10998:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11010:6:10",
														"nodeType": "YulTypedName",
														"src": "11010:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11018:6:10",
														"nodeType": "YulTypedName",
														"src": "11018:6:10",
														"type": ""
													}
												],
												"src": "10883:912:10"
											},
											{
												"body": {
													"nativeSrc": "11905:40:10",
													"nodeType": "YulBlock",
													"src": "11905:40:10",
													"statements": [
														{
															"nativeSrc": "11916:22:10",
															"nodeType": "YulAssignment",
															"src": "11916:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11932:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11932:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11926:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11926:5:10"
																},
																"nativeSrc": "11926:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11926:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11916:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11916:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "11801:144:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11888:5:10",
														"nodeType": "YulTypedName",
														"src": "11888:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11898:6:10",
														"nodeType": "YulTypedName",
														"src": "11898:6:10",
														"type": ""
													}
												],
												"src": "11801:144:10"
											},
											{
												"body": {
													"nativeSrc": "12092:73:10",
													"nodeType": "YulBlock",
													"src": "12092:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12109:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12109:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12114:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12114:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12102:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12102:6:10"
																},
																"nativeSrc": "12102:19:10",
																"nodeType": "YulFunctionCall",
																"src": "12102:19:10"
															},
															"nativeSrc": "12102:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "12102:19:10"
														},
														{
															"nativeSrc": "12130:29:10",
															"nodeType": "YulAssignment",
															"src": "12130:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12149:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12149:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12154:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12154:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12145:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12145:3:10"
																},
																"nativeSrc": "12145:14:10",
																"nodeType": "YulFunctionCall",
																"src": "12145:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12130:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "12130:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "11951:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12064:3:10",
														"nodeType": "YulTypedName",
														"src": "12064:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12069:6:10",
														"nodeType": "YulTypedName",
														"src": "12069:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12080:11:10",
														"nodeType": "YulTypedName",
														"src": "12080:11:10",
														"type": ""
													}
												],
												"src": "11951:214:10"
											},
											{
												"body": {
													"nativeSrc": "12273:60:10",
													"nodeType": "YulBlock",
													"src": "12273:60:10",
													"statements": [
														{
															"nativeSrc": "12283:11:10",
															"nodeType": "YulAssignment",
															"src": "12283:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "12291:3:10",
																"nodeType": "YulIdentifier",
																"src": "12291:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12283:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12283:4:10"
																}
															]
														},
														{
															"nativeSrc": "12304:22:10",
															"nodeType": "YulAssignment",
															"src": "12304:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "12316:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12316:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12321:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12321:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12312:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12312:3:10"
																},
																"nativeSrc": "12312:14:10",
																"nodeType": "YulFunctionCall",
																"src": "12312:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12304:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12304:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "12171:162:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12260:3:10",
														"nodeType": "YulTypedName",
														"src": "12260:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "12268:4:10",
														"nodeType": "YulTypedName",
														"src": "12268:4:10",
														"type": ""
													}
												],
												"src": "12171:162:10"
											},
											{
												"body": {
													"nativeSrc": "12394:53:10",
													"nodeType": "YulBlock",
													"src": "12394:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12411:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12411:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12434:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "12434:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12416:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "12416:17:10"
																		},
																		"nativeSrc": "12416:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12416:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12404:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12404:6:10"
																},
																"nativeSrc": "12404:37:10",
																"nodeType": "YulFunctionCall",
																"src": "12404:37:10"
															},
															"nativeSrc": "12404:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "12404:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "12339:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12382:5:10",
														"nodeType": "YulTypedName",
														"src": "12382:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12389:3:10",
														"nodeType": "YulTypedName",
														"src": "12389:3:10",
														"type": ""
													}
												],
												"src": "12339:108:10"
											},
											{
												"body": {
													"nativeSrc": "12508:53:10",
													"nodeType": "YulBlock",
													"src": "12508:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12525:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12525:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12548:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "12548:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12530:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "12530:17:10"
																		},
																		"nativeSrc": "12530:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12530:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12518:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12518:6:10"
																},
																"nativeSrc": "12518:37:10",
																"nodeType": "YulFunctionCall",
																"src": "12518:37:10"
															},
															"nativeSrc": "12518:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "12518:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "12453:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12496:5:10",
														"nodeType": "YulTypedName",
														"src": "12496:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12503:3:10",
														"nodeType": "YulTypedName",
														"src": "12503:3:10",
														"type": ""
													}
												],
												"src": "12453:108:10"
											},
											{
												"body": {
													"nativeSrc": "12755:405:10",
													"nodeType": "YulBlock",
													"src": "12755:405:10",
													"statements": [
														{
															"nativeSrc": "12765:26:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12765:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12781:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12781:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12786:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12786:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12777:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12777:3:10"
																},
																"nativeSrc": "12777:14:10",
																"nodeType": "YulFunctionCall",
																"src": "12777:14:10"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "12769:4:10",
																	"nodeType": "YulTypedName",
																	"src": "12769:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12801:176:10",
															"nodeType": "YulBlock",
															"src": "12801:176:10",
															"statements": [
																{
																	"nativeSrc": "12848:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12848:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12878:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "12878:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12885:4:10",
																						"nodeType": "YulLiteral",
																						"src": "12885:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12874:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12874:3:10"
																				},
																				"nativeSrc": "12874:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12874:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12868:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "12868:5:10"
																		},
																		"nativeSrc": "12868:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12868:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12852:12:10",
																			"nodeType": "YulTypedName",
																			"src": "12852:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12938:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "12938:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12956:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "12956:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12961:4:10",
																						"nodeType": "YulLiteral",
																						"src": "12961:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12952:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12952:3:10"
																				},
																				"nativeSrc": "12952:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12952:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "12904:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "12904:33:10"
																		},
																		"nativeSrc": "12904:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12904:63:10"
																	},
																	"nativeSrc": "12904:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "12904:63:10"
																}
															]
														},
														{
															"nativeSrc": "12987:166:10",
															"nodeType": "YulBlock",
															"src": "12987:166:10",
															"statements": [
																{
																	"nativeSrc": "13024:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13024:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13054:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "13054:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13061:4:10",
																						"nodeType": "YulLiteral",
																						"src": "13061:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13050:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13050:3:10"
																				},
																				"nativeSrc": "13050:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13050:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13044:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "13044:5:10"
																		},
																		"nativeSrc": "13044:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13044:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13028:12:10",
																			"nodeType": "YulTypedName",
																			"src": "13028:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13114:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "13114:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13132:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "13132:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13137:4:10",
																						"nodeType": "YulLiteral",
																						"src": "13137:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13128:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13128:3:10"
																				},
																				"nativeSrc": "13128:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13128:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "13080:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "13080:33:10"
																		},
																		"nativeSrc": "13080:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13080:63:10"
																	},
																	"nativeSrc": "13080:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "13080:63:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_PayoutSummary_$572_memory_ptr_to_t_struct$_PayoutSummary_$572_memory_ptr",
												"nativeSrc": "12639:521:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12742:5:10",
														"nodeType": "YulTypedName",
														"src": "12742:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12749:3:10",
														"nodeType": "YulTypedName",
														"src": "12749:3:10",
														"type": ""
													}
												],
												"src": "12639:521:10"
											},
											{
												"body": {
													"nativeSrc": "13306:159:10",
													"nodeType": "YulBlock",
													"src": "13306:159:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13410:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13410:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13418:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13418:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_PayoutSummary_$572_memory_ptr_to_t_struct$_PayoutSummary_$572_memory_ptr",
																	"nativeSrc": "13316:93:10",
																	"nodeType": "YulIdentifier",
																	"src": "13316:93:10"
																},
																"nativeSrc": "13316:106:10",
																"nodeType": "YulFunctionCall",
																"src": "13316:106:10"
															},
															"nativeSrc": "13316:106:10",
															"nodeType": "YulExpressionStatement",
															"src": "13316:106:10"
														},
														{
															"nativeSrc": "13431:28:10",
															"nodeType": "YulAssignment",
															"src": "13431:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13449:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13449:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13454:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13454:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13445:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13445:3:10"
																},
																"nativeSrc": "13445:14:10",
																"nodeType": "YulFunctionCall",
																"src": "13445:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "13431:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "13431:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_PayoutSummary_$572_memory_ptr_to_t_struct$_PayoutSummary_$572_memory_ptr",
												"nativeSrc": "13166:299:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "13279:6:10",
														"nodeType": "YulTypedName",
														"src": "13279:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13287:3:10",
														"nodeType": "YulTypedName",
														"src": "13287:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "13295:10:10",
														"nodeType": "YulTypedName",
														"src": "13295:10:10",
														"type": ""
													}
												],
												"src": "13166:299:10"
											},
											{
												"body": {
													"nativeSrc": "13576:38:10",
													"nodeType": "YulBlock",
													"src": "13576:38:10",
													"statements": [
														{
															"nativeSrc": "13586:22:10",
															"nodeType": "YulAssignment",
															"src": "13586:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "13598:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13598:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13603:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13603:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13594:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13594:3:10"
																},
																"nativeSrc": "13594:14:10",
																"nodeType": "YulFunctionCall",
																"src": "13594:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "13586:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13586:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "13471:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13563:3:10",
														"nodeType": "YulTypedName",
														"src": "13563:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "13571:4:10",
														"nodeType": "YulTypedName",
														"src": "13571:4:10",
														"type": ""
													}
												],
												"src": "13471:143:10"
											},
											{
												"body": {
													"nativeSrc": "13880:788:10",
													"nodeType": "YulBlock",
													"src": "13880:788:10",
													"statements": [
														{
															"nativeSrc": "13890:98:10",
															"nodeType": "YulVariableDeclaration",
															"src": "13890:98:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13982:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13982:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "13904:77:10",
																	"nodeType": "YulIdentifier",
																	"src": "13904:77:10"
																},
																"nativeSrc": "13904:84:10",
																"nodeType": "YulFunctionCall",
																"src": "13904:84:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13894:6:10",
																	"nodeType": "YulTypedName",
																	"src": "13894:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13997:123:10",
															"nodeType": "YulAssignment",
															"src": "13997:123:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14108:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14108:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14113:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14113:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14004:103:10",
																	"nodeType": "YulIdentifier",
																	"src": "14004:103:10"
																},
																"nativeSrc": "14004:116:10",
																"nodeType": "YulFunctionCall",
																"src": "14004:116:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13997:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13997:3:10"
																}
															]
														},
														{
															"nativeSrc": "14129:101:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14129:101:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14224:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "14224:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "14144:79:10",
																	"nodeType": "YulIdentifier",
																	"src": "14144:79:10"
																},
																"nativeSrc": "14144:86:10",
																"nodeType": "YulFunctionCall",
																"src": "14144:86:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "14133:7:10",
																	"nodeType": "YulTypedName",
																	"src": "14133:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14239:21:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14239:21:10",
															"value": {
																"name": "baseRef",
																"nativeSrc": "14253:7:10",
																"nodeType": "YulIdentifier",
																"src": "14253:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "14243:6:10",
																	"nodeType": "YulTypedName",
																	"src": "14243:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14329:314:10",
																"nodeType": "YulBlock",
																"src": "14329:314:10",
																"statements": [
																	{
																		"nativeSrc": "14343:34:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14343:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "14370:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "14370:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "14364:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14364:5:10"
																			},
																			"nativeSrc": "14364:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14364:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "14347:13:10",
																				"nodeType": "YulTypedName",
																				"src": "14347:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "14390:130:10",
																		"nodeType": "YulAssignment",
																		"src": "14390:130:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "14501:13:10",
																					"nodeType": "YulIdentifier",
																					"src": "14501:13:10"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "14516:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "14516:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_PayoutSummary_$572_memory_ptr_to_t_struct$_PayoutSummary_$572_memory_ptr",
																				"nativeSrc": "14397:103:10",
																				"nodeType": "YulIdentifier",
																				"src": "14397:103:10"
																			},
																			"nativeSrc": "14397:123:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14397:123:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "14390:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "14390:3:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14533:100:10",
																		"nodeType": "YulAssignment",
																		"src": "14533:100:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "14626:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "14626:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "14543:82:10",
																				"nodeType": "YulIdentifier",
																				"src": "14543:82:10"
																			},
																			"nativeSrc": "14543:90:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14543:90:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "14533:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14533:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "14291:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14291:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14294:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14294:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14288:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "14288:2:10"
																},
																"nativeSrc": "14288:13:10",
																"nodeType": "YulFunctionCall",
																"src": "14288:13:10"
															},
															"nativeSrc": "14269:374:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "14302:18:10",
																"nodeType": "YulBlock",
																"src": "14302:18:10",
																"statements": [
																	{
																		"nativeSrc": "14304:14:10",
																		"nodeType": "YulAssignment",
																		"src": "14304:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "14313:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "14313:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14316:1:10",
																					"nodeType": "YulLiteral",
																					"src": "14316:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14309:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "14309:3:10"
																			},
																			"nativeSrc": "14309:9:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14309:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "14304:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "14304:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "14273:14:10",
																"nodeType": "YulBlock",
																"src": "14273:14:10",
																"statements": [
																	{
																		"nativeSrc": "14275:10:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14275:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14284:1:10",
																			"nodeType": "YulLiteral",
																			"src": "14284:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "14279:1:10",
																				"nodeType": "YulTypedName",
																				"src": "14279:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "14269:374:10"
														},
														{
															"nativeSrc": "14652:10:10",
															"nodeType": "YulAssignment",
															"src": "14652:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "14659:3:10",
																"nodeType": "YulIdentifier",
																"src": "14659:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14652:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14652:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "13696:972:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13859:5:10",
														"nodeType": "YulTypedName",
														"src": "13859:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13866:3:10",
														"nodeType": "YulTypedName",
														"src": "13866:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13875:3:10",
														"nodeType": "YulTypedName",
														"src": "13875:3:10",
														"type": ""
													}
												],
												"src": "13696:972:10"
											},
											{
												"body": {
													"nativeSrc": "14882:285:10",
													"nodeType": "YulBlock",
													"src": "14882:285:10",
													"statements": [
														{
															"nativeSrc": "14892:26:10",
															"nodeType": "YulAssignment",
															"src": "14892:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14904:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14904:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14915:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14915:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14900:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14900:3:10"
																},
																"nativeSrc": "14900:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14900:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14892:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14892:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14939:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14939:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14950:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14950:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14935:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14935:3:10"
																		},
																		"nativeSrc": "14935:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14935:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14958:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14958:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14964:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14964:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14954:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14954:3:10"
																		},
																		"nativeSrc": "14954:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14954:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14928:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14928:6:10"
																},
																"nativeSrc": "14928:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14928:47:10"
															},
															"nativeSrc": "14928:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14928:47:10"
														},
														{
															"nativeSrc": "14984:176:10",
															"nodeType": "YulAssignment",
															"src": "14984:176:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15146:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15146:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15155:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15155:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14992:153:10",
																	"nodeType": "YulIdentifier",
																	"src": "14992:153:10"
																},
																"nativeSrc": "14992:168:10",
																"nodeType": "YulFunctionCall",
																"src": "14992:168:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14984:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14984:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "14674:493:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14854:9:10",
														"nodeType": "YulTypedName",
														"src": "14854:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14866:6:10",
														"nodeType": "YulTypedName",
														"src": "14866:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14877:4:10",
														"nodeType": "YulTypedName",
														"src": "14877:4:10",
														"type": ""
													}
												],
												"src": "14674:493:10"
											},
											{
												"body": {
													"nativeSrc": "15216:79:10",
													"nodeType": "YulBlock",
													"src": "15216:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "15273:16:10",
																"nodeType": "YulBlock",
																"src": "15273:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15282:1:10",
																					"nodeType": "YulLiteral",
																					"src": "15282:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15285:1:10",
																					"nodeType": "YulLiteral",
																					"src": "15285:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15275:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15275:6:10"
																			},
																			"nativeSrc": "15275:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15275:12:10"
																		},
																		"nativeSrc": "15275:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15275:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15239:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "15239:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15264:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "15264:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "15246:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "15246:17:10"
																				},
																				"nativeSrc": "15246:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "15246:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15236:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "15236:2:10"
																		},
																		"nativeSrc": "15236:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15236:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15229:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15229:6:10"
																},
																"nativeSrc": "15229:43:10",
																"nodeType": "YulFunctionCall",
																"src": "15229:43:10"
															},
															"nativeSrc": "15226:63:10",
															"nodeType": "YulIf",
															"src": "15226:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "15173:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15209:5:10",
														"nodeType": "YulTypedName",
														"src": "15209:5:10",
														"type": ""
													}
												],
												"src": "15173:122:10"
											},
											{
												"body": {
													"nativeSrc": "15353:87:10",
													"nodeType": "YulBlock",
													"src": "15353:87:10",
													"statements": [
														{
															"nativeSrc": "15363:29:10",
															"nodeType": "YulAssignment",
															"src": "15363:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15385:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15385:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "15372:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "15372:12:10"
																},
																"nativeSrc": "15372:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15372:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15363:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "15363:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15428:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "15428:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "15401:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "15401:26:10"
																},
																"nativeSrc": "15401:33:10",
																"nodeType": "YulFunctionCall",
																"src": "15401:33:10"
															},
															"nativeSrc": "15401:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "15401:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "15301:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15331:6:10",
														"nodeType": "YulTypedName",
														"src": "15331:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15339:3:10",
														"nodeType": "YulTypedName",
														"src": "15339:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15347:5:10",
														"nodeType": "YulTypedName",
														"src": "15347:5:10",
														"type": ""
													}
												],
												"src": "15301:139:10"
											},
											{
												"body": {
													"nativeSrc": "15546:519:10",
													"nodeType": "YulBlock",
													"src": "15546:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "15592:83:10",
																"nodeType": "YulBlock",
																"src": "15592:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15594:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "15594:77:10"
																			},
																			"nativeSrc": "15594:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15594:79:10"
																		},
																		"nativeSrc": "15594:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15594:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15567:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "15567:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15576:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15576:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15563:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15563:3:10"
																		},
																		"nativeSrc": "15563:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15563:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15588:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15588:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15559:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15559:3:10"
																},
																"nativeSrc": "15559:32:10",
																"nodeType": "YulFunctionCall",
																"src": "15559:32:10"
															},
															"nativeSrc": "15556:119:10",
															"nodeType": "YulIf",
															"src": "15556:119:10"
														},
														{
															"nativeSrc": "15685:117:10",
															"nodeType": "YulBlock",
															"src": "15685:117:10",
															"statements": [
																{
																	"nativeSrc": "15700:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15700:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15714:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15714:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15704:6:10",
																			"nodeType": "YulTypedName",
																			"src": "15704:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15729:63:10",
																	"nodeType": "YulAssignment",
																	"src": "15729:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15764:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "15764:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15775:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "15775:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15760:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "15760:3:10"
																				},
																				"nativeSrc": "15760:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "15760:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15784:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "15784:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15739:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "15739:20:10"
																		},
																		"nativeSrc": "15739:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15739:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15729:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "15729:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15812:118:10",
															"nodeType": "YulBlock",
															"src": "15812:118:10",
															"statements": [
																{
																	"nativeSrc": "15827:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15827:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15841:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15841:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15831:6:10",
																			"nodeType": "YulTypedName",
																			"src": "15831:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15857:63:10",
																	"nodeType": "YulAssignment",
																	"src": "15857:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15892:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "15892:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15903:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "15903:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15888:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "15888:3:10"
																				},
																				"nativeSrc": "15888:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "15888:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15912:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "15912:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15867:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "15867:20:10"
																		},
																		"nativeSrc": "15867:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15867:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "15857:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "15857:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15940:118:10",
															"nodeType": "YulBlock",
															"src": "15940:118:10",
															"statements": [
																{
																	"nativeSrc": "15955:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15955:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15969:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15969:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15959:6:10",
																			"nodeType": "YulTypedName",
																			"src": "15959:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15985:63:10",
																	"nodeType": "YulAssignment",
																	"src": "15985:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16020:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "16020:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16031:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "16031:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16016:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "16016:3:10"
																				},
																				"nativeSrc": "16016:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "16016:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16040:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "16040:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "15995:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "15995:20:10"
																		},
																		"nativeSrc": "15995:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15995:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "15985:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "15985:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "15446:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15500:9:10",
														"nodeType": "YulTypedName",
														"src": "15500:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15511:7:10",
														"nodeType": "YulTypedName",
														"src": "15511:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15523:6:10",
														"nodeType": "YulTypedName",
														"src": "15523:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15531:6:10",
														"nodeType": "YulTypedName",
														"src": "15531:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15539:6:10",
														"nodeType": "YulTypedName",
														"src": "15539:6:10",
														"type": ""
													}
												],
												"src": "15446:619:10"
											},
											{
												"body": {
													"nativeSrc": "16099:152:10",
													"nodeType": "YulBlock",
													"src": "16099:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16116:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16116:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16119:77:10",
																		"nodeType": "YulLiteral",
																		"src": "16119:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16109:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16109:6:10"
																},
																"nativeSrc": "16109:88:10",
																"nodeType": "YulFunctionCall",
																"src": "16109:88:10"
															},
															"nativeSrc": "16109:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "16109:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16213:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16213:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16216:4:10",
																		"nodeType": "YulLiteral",
																		"src": "16216:4:10",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16206:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16206:6:10"
																},
																"nativeSrc": "16206:15:10",
																"nodeType": "YulFunctionCall",
																"src": "16206:15:10"
															},
															"nativeSrc": "16206:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "16206:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16237:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16237:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16240:4:10",
																		"nodeType": "YulLiteral",
																		"src": "16240:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16230:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16230:6:10"
																},
																"nativeSrc": "16230:15:10",
																"nodeType": "YulFunctionCall",
																"src": "16230:15:10"
															},
															"nativeSrc": "16230:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "16230:15:10"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "16071:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "16071:180:10"
											},
											{
												"body": {
													"nativeSrc": "16310:62:10",
													"nodeType": "YulBlock",
													"src": "16310:62:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "16344:22:10",
																"nodeType": "YulBlock",
																"src": "16344:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "16346:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "16346:16:10"
																			},
																			"nativeSrc": "16346:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "16346:18:10"
																		},
																		"nativeSrc": "16346:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "16346:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16333:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "16333:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16340:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16340:1:10",
																				"type": "",
																				"value": "7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "16330:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "16330:2:10"
																		},
																		"nativeSrc": "16330:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16330:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16323:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16323:6:10"
																},
																"nativeSrc": "16323:20:10",
																"nodeType": "YulFunctionCall",
																"src": "16323:20:10"
															},
															"nativeSrc": "16320:46:10",
															"nodeType": "YulIf",
															"src": "16320:46:10"
														}
													]
												},
												"name": "validator_assert_t_enum$_Status_$566",
												"nativeSrc": "16257:115:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16303:5:10",
														"nodeType": "YulTypedName",
														"src": "16303:5:10",
														"type": ""
													}
												],
												"src": "16257:115:10"
											},
											{
												"body": {
													"nativeSrc": "16433:76:10",
													"nodeType": "YulBlock",
													"src": "16433:76:10",
													"statements": [
														{
															"nativeSrc": "16443:16:10",
															"nodeType": "YulAssignment",
															"src": "16443:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "16454:5:10",
																"nodeType": "YulIdentifier",
																"src": "16454:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "16443:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "16443:7:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16497:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "16497:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Status_$566",
																	"nativeSrc": "16460:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "16460:36:10"
																},
																"nativeSrc": "16460:43:10",
																"nodeType": "YulFunctionCall",
																"src": "16460:43:10"
															},
															"nativeSrc": "16460:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "16460:43:10"
														}
													]
												},
												"name": "cleanup_t_enum$_Status_$566",
												"nativeSrc": "16378:131:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16415:5:10",
														"nodeType": "YulTypedName",
														"src": "16415:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "16425:7:10",
														"nodeType": "YulTypedName",
														"src": "16425:7:10",
														"type": ""
													}
												],
												"src": "16378:131:10"
											},
											{
												"body": {
													"nativeSrc": "16583:63:10",
													"nodeType": "YulBlock",
													"src": "16583:63:10",
													"statements": [
														{
															"nativeSrc": "16593:47:10",
															"nodeType": "YulAssignment",
															"src": "16593:47:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16634:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "16634:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Status_$566",
																	"nativeSrc": "16606:27:10",
																	"nodeType": "YulIdentifier",
																	"src": "16606:27:10"
																},
																"nativeSrc": "16606:34:10",
																"nodeType": "YulFunctionCall",
																"src": "16606:34:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16593:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "16593:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Status_$566_to_t_uint8",
												"nativeSrc": "16515:131:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16563:5:10",
														"nodeType": "YulTypedName",
														"src": "16563:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16573:9:10",
														"nodeType": "YulTypedName",
														"src": "16573:9:10",
														"type": ""
													}
												],
												"src": "16515:131:10"
											},
											{
												"body": {
													"nativeSrc": "16725:74:10",
													"nodeType": "YulBlock",
													"src": "16725:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16742:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16742:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16786:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "16786:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Status_$566_to_t_uint8",
																			"nativeSrc": "16747:38:10",
																			"nodeType": "YulIdentifier",
																			"src": "16747:38:10"
																		},
																		"nativeSrc": "16747:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16747:45:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16735:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16735:6:10"
																},
																"nativeSrc": "16735:58:10",
																"nodeType": "YulFunctionCall",
																"src": "16735:58:10"
															},
															"nativeSrc": "16735:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "16735:58:10"
														}
													]
												},
												"name": "abi_encode_t_enum$_Status_$566_to_t_uint8_fromStack",
												"nativeSrc": "16652:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16713:5:10",
														"nodeType": "YulTypedName",
														"src": "16713:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16720:3:10",
														"nodeType": "YulTypedName",
														"src": "16720:3:10",
														"type": ""
													}
												],
												"src": "16652:147:10"
											},
											{
												"body": {
													"nativeSrc": "16911:132:10",
													"nodeType": "YulBlock",
													"src": "16911:132:10",
													"statements": [
														{
															"nativeSrc": "16921:26:10",
															"nodeType": "YulAssignment",
															"src": "16921:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16933:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16933:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16944:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16944:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16929:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16929:3:10"
																},
																"nativeSrc": "16929:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16929:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16921:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16921:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17009:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17009:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17022:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17022:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17033:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17033:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17018:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17018:3:10"
																		},
																		"nativeSrc": "17018:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17018:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Status_$566_to_t_uint8_fromStack",
																	"nativeSrc": "16957:51:10",
																	"nodeType": "YulIdentifier",
																	"src": "16957:51:10"
																},
																"nativeSrc": "16957:79:10",
																"nodeType": "YulFunctionCall",
																"src": "16957:79:10"
															},
															"nativeSrc": "16957:79:10",
															"nodeType": "YulExpressionStatement",
															"src": "16957:79:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Status_$566__to_t_uint8__fromStack_reversed",
												"nativeSrc": "16805:238:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16883:9:10",
														"nodeType": "YulTypedName",
														"src": "16883:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16895:6:10",
														"nodeType": "YulTypedName",
														"src": "16895:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16906:4:10",
														"nodeType": "YulTypedName",
														"src": "16906:4:10",
														"type": ""
													}
												],
												"src": "16805:238:10"
											},
											{
												"body": {
													"nativeSrc": "17141:560:10",
													"nodeType": "YulBlock",
													"src": "17141:560:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "17187:83:10",
																"nodeType": "YulBlock",
																"src": "17187:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17189:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "17189:77:10"
																			},
																			"nativeSrc": "17189:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17189:79:10"
																		},
																		"nativeSrc": "17189:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "17189:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17162:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "17162:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17171:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17171:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17158:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17158:3:10"
																		},
																		"nativeSrc": "17158:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17158:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17183:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17183:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17154:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17154:3:10"
																},
																"nativeSrc": "17154:32:10",
																"nodeType": "YulFunctionCall",
																"src": "17154:32:10"
															},
															"nativeSrc": "17151:119:10",
															"nodeType": "YulIf",
															"src": "17151:119:10"
														},
														{
															"nativeSrc": "17280:117:10",
															"nodeType": "YulBlock",
															"src": "17280:117:10",
															"statements": [
																{
																	"nativeSrc": "17295:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17295:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17309:1:10",
																		"nodeType": "YulLiteral",
																		"src": "17309:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17299:6:10",
																			"nodeType": "YulTypedName",
																			"src": "17299:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17324:63:10",
																	"nodeType": "YulAssignment",
																	"src": "17324:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17359:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "17359:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17370:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "17370:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17355:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "17355:3:10"
																				},
																				"nativeSrc": "17355:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "17355:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17379:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "17379:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17334:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "17334:20:10"
																		},
																		"nativeSrc": "17334:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17334:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17324:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "17324:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17407:287:10",
															"nodeType": "YulBlock",
															"src": "17407:287:10",
															"statements": [
																{
																	"nativeSrc": "17422:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17422:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17453:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "17453:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17464:2:10",
																						"nodeType": "YulLiteral",
																						"src": "17464:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17449:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "17449:3:10"
																				},
																				"nativeSrc": "17449:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "17449:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "17436:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "17436:12:10"
																		},
																		"nativeSrc": "17436:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17436:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17426:6:10",
																			"nodeType": "YulTypedName",
																			"src": "17426:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "17515:83:10",
																		"nodeType": "YulBlock",
																		"src": "17515:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "17517:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "17517:77:10"
																					},
																					"nativeSrc": "17517:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "17517:79:10"
																				},
																				"nativeSrc": "17517:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "17517:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "17487:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17487:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17495:18:10",
																				"nodeType": "YulLiteral",
																				"src": "17495:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "17484:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "17484:2:10"
																		},
																		"nativeSrc": "17484:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17484:30:10"
																	},
																	"nativeSrc": "17481:117:10",
																	"nodeType": "YulIf",
																	"src": "17481:117:10"
																},
																{
																	"nativeSrc": "17612:72:10",
																	"nodeType": "YulAssignment",
																	"src": "17612:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17656:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "17656:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17667:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "17667:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17652:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "17652:3:10"
																				},
																				"nativeSrc": "17652:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "17652:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17676:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "17676:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "17622:29:10",
																			"nodeType": "YulIdentifier",
																			"src": "17622:29:10"
																		},
																		"nativeSrc": "17622:62:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17622:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17612:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "17612:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
												"nativeSrc": "17049:652:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17103:9:10",
														"nodeType": "YulTypedName",
														"src": "17103:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17114:7:10",
														"nodeType": "YulTypedName",
														"src": "17114:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17126:6:10",
														"nodeType": "YulTypedName",
														"src": "17126:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17134:6:10",
														"nodeType": "YulTypedName",
														"src": "17134:6:10",
														"type": ""
													}
												],
												"src": "17049:652:10"
											},
											{
												"body": {
													"nativeSrc": "17773:263:10",
													"nodeType": "YulBlock",
													"src": "17773:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "17819:83:10",
																"nodeType": "YulBlock",
																"src": "17819:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17821:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "17821:77:10"
																			},
																			"nativeSrc": "17821:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17821:79:10"
																		},
																		"nativeSrc": "17821:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "17821:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17794:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "17794:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17803:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17803:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17790:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17790:3:10"
																		},
																		"nativeSrc": "17790:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17790:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17815:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17815:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17786:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17786:3:10"
																},
																"nativeSrc": "17786:32:10",
																"nodeType": "YulFunctionCall",
																"src": "17786:32:10"
															},
															"nativeSrc": "17783:119:10",
															"nodeType": "YulIf",
															"src": "17783:119:10"
														},
														{
															"nativeSrc": "17912:117:10",
															"nodeType": "YulBlock",
															"src": "17912:117:10",
															"statements": [
																{
																	"nativeSrc": "17927:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17927:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17941:1:10",
																		"nodeType": "YulLiteral",
																		"src": "17941:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17931:6:10",
																			"nodeType": "YulTypedName",
																			"src": "17931:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17956:63:10",
																	"nodeType": "YulAssignment",
																	"src": "17956:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17991:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "17991:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18002:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "18002:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17987:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "17987:3:10"
																				},
																				"nativeSrc": "17987:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "17987:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18011:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "18011:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17966:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "17966:20:10"
																		},
																		"nativeSrc": "17966:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17966:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17956:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "17956:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "17707:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17743:9:10",
														"nodeType": "YulTypedName",
														"src": "17743:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17754:7:10",
														"nodeType": "YulTypedName",
														"src": "17754:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17766:6:10",
														"nodeType": "YulTypedName",
														"src": "17766:6:10",
														"type": ""
													}
												],
												"src": "17707:329:10"
											},
											{
												"body": {
													"nativeSrc": "18070:152:10",
													"nodeType": "YulBlock",
													"src": "18070:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18087:1:10",
																		"nodeType": "YulLiteral",
																		"src": "18087:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18090:77:10",
																		"nodeType": "YulLiteral",
																		"src": "18090:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18080:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18080:6:10"
																},
																"nativeSrc": "18080:88:10",
																"nodeType": "YulFunctionCall",
																"src": "18080:88:10"
															},
															"nativeSrc": "18080:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "18080:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18184:1:10",
																		"nodeType": "YulLiteral",
																		"src": "18184:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18187:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18187:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18177:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18177:6:10"
																},
																"nativeSrc": "18177:15:10",
																"nodeType": "YulFunctionCall",
																"src": "18177:15:10"
															},
															"nativeSrc": "18177:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "18177:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18208:1:10",
																		"nodeType": "YulLiteral",
																		"src": "18208:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18211:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18211:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18201:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18201:6:10"
																},
																"nativeSrc": "18201:15:10",
																"nodeType": "YulFunctionCall",
																"src": "18201:15:10"
															},
															"nativeSrc": "18201:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "18201:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "18042:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "18042:180:10"
											},
											{
												"body": {
													"nativeSrc": "18286:40:10",
													"nodeType": "YulBlock",
													"src": "18286:40:10",
													"statements": [
														{
															"nativeSrc": "18297:22:10",
															"nodeType": "YulAssignment",
															"src": "18297:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18313:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "18313:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18307:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "18307:5:10"
																},
																"nativeSrc": "18307:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18307:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18297:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18297:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "18228:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18269:5:10",
														"nodeType": "YulTypedName",
														"src": "18269:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18279:6:10",
														"nodeType": "YulTypedName",
														"src": "18279:6:10",
														"type": ""
													}
												],
												"src": "18228:98:10"
											},
											{
												"body": {
													"nativeSrc": "18427:73:10",
													"nodeType": "YulBlock",
													"src": "18427:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18444:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18444:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18449:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18449:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18437:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18437:6:10"
																},
																"nativeSrc": "18437:19:10",
																"nodeType": "YulFunctionCall",
																"src": "18437:19:10"
															},
															"nativeSrc": "18437:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "18437:19:10"
														},
														{
															"nativeSrc": "18465:29:10",
															"nodeType": "YulAssignment",
															"src": "18465:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18484:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18484:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18489:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18489:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18480:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18480:3:10"
																},
																"nativeSrc": "18480:14:10",
																"nodeType": "YulFunctionCall",
																"src": "18480:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18465:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "18465:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18332:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18399:3:10",
														"nodeType": "YulTypedName",
														"src": "18399:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18404:6:10",
														"nodeType": "YulTypedName",
														"src": "18404:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18415:11:10",
														"nodeType": "YulTypedName",
														"src": "18415:11:10",
														"type": ""
													}
												],
												"src": "18332:168:10"
											},
											{
												"body": {
													"nativeSrc": "18568:77:10",
													"nodeType": "YulBlock",
													"src": "18568:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "18585:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18585:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "18590:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18590:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18595:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18595:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "18579:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "18579:5:10"
																},
																"nativeSrc": "18579:23:10",
																"nodeType": "YulFunctionCall",
																"src": "18579:23:10"
															},
															"nativeSrc": "18579:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "18579:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "18622:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "18622:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "18627:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18627:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18618:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18618:3:10"
																		},
																		"nativeSrc": "18618:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18618:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18636:1:10",
																		"nodeType": "YulLiteral",
																		"src": "18636:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18611:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18611:6:10"
																},
																"nativeSrc": "18611:27:10",
																"nodeType": "YulFunctionCall",
																"src": "18611:27:10"
															},
															"nativeSrc": "18611:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "18611:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "18506:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "18550:3:10",
														"nodeType": "YulTypedName",
														"src": "18550:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "18555:3:10",
														"nodeType": "YulTypedName",
														"src": "18555:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18560:6:10",
														"nodeType": "YulTypedName",
														"src": "18560:6:10",
														"type": ""
													}
												],
												"src": "18506:139:10"
											},
											{
												"body": {
													"nativeSrc": "18741:283:10",
													"nodeType": "YulBlock",
													"src": "18741:283:10",
													"statements": [
														{
															"nativeSrc": "18751:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "18751:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18797:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "18797:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "18765:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "18765:31:10"
																},
																"nativeSrc": "18765:38:10",
																"nodeType": "YulFunctionCall",
																"src": "18765:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18755:6:10",
																	"nodeType": "YulTypedName",
																	"src": "18755:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18812:77:10",
															"nodeType": "YulAssignment",
															"src": "18812:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18877:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18877:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18882:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18882:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "18819:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "18819:57:10"
																},
																"nativeSrc": "18819:70:10",
																"nodeType": "YulFunctionCall",
																"src": "18819:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18812:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18812:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18937:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "18937:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18944:4:10",
																				"nodeType": "YulLiteral",
																				"src": "18944:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18933:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18933:3:10"
																		},
																		"nativeSrc": "18933:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18933:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18951:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18951:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18956:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18956:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18898:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "18898:34:10"
																},
																"nativeSrc": "18898:65:10",
																"nodeType": "YulFunctionCall",
																"src": "18898:65:10"
															},
															"nativeSrc": "18898:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "18898:65:10"
														},
														{
															"nativeSrc": "18972:46:10",
															"nodeType": "YulAssignment",
															"src": "18972:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18983:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18983:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "19010:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19010:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "18988:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "18988:21:10"
																		},
																		"nativeSrc": "18988:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18988:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18979:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18979:3:10"
																},
																"nativeSrc": "18979:39:10",
																"nodeType": "YulFunctionCall",
																"src": "18979:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18972:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18972:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18651:373:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18722:5:10",
														"nodeType": "YulTypedName",
														"src": "18722:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18729:3:10",
														"nodeType": "YulTypedName",
														"src": "18729:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18737:3:10",
														"nodeType": "YulTypedName",
														"src": "18737:3:10",
														"type": ""
													}
												],
												"src": "18651:373:10"
											},
											{
												"body": {
													"nativeSrc": "19174:275:10",
													"nodeType": "YulBlock",
													"src": "19174:275:10",
													"statements": [
														{
															"nativeSrc": "19184:26:10",
															"nodeType": "YulAssignment",
															"src": "19184:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19196:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19196:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19207:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19207:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19192:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19192:3:10"
																},
																"nativeSrc": "19192:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19192:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19184:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19184:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19264:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19264:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19277:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19277:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19288:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19288:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19273:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19273:3:10"
																		},
																		"nativeSrc": "19273:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19273:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19220:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "19220:43:10"
																},
																"nativeSrc": "19220:71:10",
																"nodeType": "YulFunctionCall",
																"src": "19220:71:10"
															},
															"nativeSrc": "19220:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "19220:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19312:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19312:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19323:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19323:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19308:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19308:3:10"
																		},
																		"nativeSrc": "19308:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19308:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19332:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19332:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19338:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19338:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19328:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19328:3:10"
																		},
																		"nativeSrc": "19328:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19328:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19301:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19301:6:10"
																},
																"nativeSrc": "19301:48:10",
																"nodeType": "YulFunctionCall",
																"src": "19301:48:10"
															},
															"nativeSrc": "19301:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "19301:48:10"
														},
														{
															"nativeSrc": "19358:84:10",
															"nodeType": "YulAssignment",
															"src": "19358:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19428:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19428:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19437:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19437:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "19366:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "19366:61:10"
																},
																"nativeSrc": "19366:76:10",
																"nodeType": "YulFunctionCall",
																"src": "19366:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19358:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19358:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "19030:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19138:9:10",
														"nodeType": "YulTypedName",
														"src": "19138:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19150:6:10",
														"nodeType": "YulTypedName",
														"src": "19150:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19158:6:10",
														"nodeType": "YulTypedName",
														"src": "19158:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19169:4:10",
														"nodeType": "YulTypedName",
														"src": "19169:4:10",
														"type": ""
													}
												],
												"src": "19030:419:10"
											},
											{
												"body": {
													"nativeSrc": "19483:152:10",
													"nodeType": "YulBlock",
													"src": "19483:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19500:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19500:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19503:77:10",
																		"nodeType": "YulLiteral",
																		"src": "19503:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19493:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19493:6:10"
																},
																"nativeSrc": "19493:88:10",
																"nodeType": "YulFunctionCall",
																"src": "19493:88:10"
															},
															"nativeSrc": "19493:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "19493:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19597:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19597:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19600:4:10",
																		"nodeType": "YulLiteral",
																		"src": "19600:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19590:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19590:6:10"
																},
																"nativeSrc": "19590:15:10",
																"nodeType": "YulFunctionCall",
																"src": "19590:15:10"
															},
															"nativeSrc": "19590:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "19590:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19621:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19621:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19624:4:10",
																		"nodeType": "YulLiteral",
																		"src": "19624:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19614:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19614:6:10"
																},
																"nativeSrc": "19614:15:10",
																"nodeType": "YulFunctionCall",
																"src": "19614:15:10"
															},
															"nativeSrc": "19614:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "19614:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "19455:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "19455:180:10"
											},
											{
												"body": {
													"nativeSrc": "19685:147:10",
													"nodeType": "YulBlock",
													"src": "19685:147:10",
													"statements": [
														{
															"nativeSrc": "19695:25:10",
															"nodeType": "YulAssignment",
															"src": "19695:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19718:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19718:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19700:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "19700:17:10"
																},
																"nativeSrc": "19700:20:10",
																"nodeType": "YulFunctionCall",
																"src": "19700:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19695:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "19695:1:10"
																}
															]
														},
														{
															"nativeSrc": "19729:25:10",
															"nodeType": "YulAssignment",
															"src": "19729:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19752:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19752:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19734:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "19734:17:10"
																},
																"nativeSrc": "19734:20:10",
																"nodeType": "YulFunctionCall",
																"src": "19734:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19729:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "19729:1:10"
																}
															]
														},
														{
															"nativeSrc": "19763:16:10",
															"nodeType": "YulAssignment",
															"src": "19763:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19774:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19774:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19777:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19777:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19770:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19770:3:10"
																},
																"nativeSrc": "19770:9:10",
																"nodeType": "YulFunctionCall",
																"src": "19770:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "19763:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19763:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19803:22:10",
																"nodeType": "YulBlock",
																"src": "19803:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19805:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "19805:16:10"
																			},
																			"nativeSrc": "19805:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "19805:18:10"
																		},
																		"nativeSrc": "19805:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "19805:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19795:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19795:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "19798:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19798:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19792:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "19792:2:10"
																},
																"nativeSrc": "19792:10:10",
																"nodeType": "YulFunctionCall",
																"src": "19792:10:10"
															},
															"nativeSrc": "19789:36:10",
															"nodeType": "YulIf",
															"src": "19789:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "19641:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19672:1:10",
														"nodeType": "YulTypedName",
														"src": "19672:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19675:1:10",
														"nodeType": "YulTypedName",
														"src": "19675:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "19681:3:10",
														"nodeType": "YulTypedName",
														"src": "19681:3:10",
														"type": ""
													}
												],
												"src": "19641:191:10"
											},
											{
												"body": {
													"nativeSrc": "19964:206:10",
													"nodeType": "YulBlock",
													"src": "19964:206:10",
													"statements": [
														{
															"nativeSrc": "19974:26:10",
															"nodeType": "YulAssignment",
															"src": "19974:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19986:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19986:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19997:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19997:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19982:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19982:3:10"
																},
																"nativeSrc": "19982:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19982:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19974:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19974:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20054:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20054:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20067:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20067:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20078:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20078:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20063:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20063:3:10"
																		},
																		"nativeSrc": "20063:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20063:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20010:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20010:43:10"
																},
																"nativeSrc": "20010:71:10",
																"nodeType": "YulFunctionCall",
																"src": "20010:71:10"
															},
															"nativeSrc": "20010:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "20010:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20135:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20135:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20148:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20148:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20159:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20159:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20144:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20144:3:10"
																		},
																		"nativeSrc": "20144:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20144:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20091:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20091:43:10"
																},
																"nativeSrc": "20091:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20091:72:10"
															},
															"nativeSrc": "20091:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20091:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "19838:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19928:9:10",
														"nodeType": "YulTypedName",
														"src": "19928:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19940:6:10",
														"nodeType": "YulTypedName",
														"src": "19940:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19948:6:10",
														"nodeType": "YulTypedName",
														"src": "19948:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19959:4:10",
														"nodeType": "YulTypedName",
														"src": "19959:4:10",
														"type": ""
													}
												],
												"src": "19838:332:10"
											},
											{
												"body": {
													"nativeSrc": "20216:76:10",
													"nodeType": "YulBlock",
													"src": "20216:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "20270:16:10",
																"nodeType": "YulBlock",
																"src": "20270:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20279:1:10",
																					"nodeType": "YulLiteral",
																					"src": "20279:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20282:1:10",
																					"nodeType": "YulLiteral",
																					"src": "20282:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20272:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20272:6:10"
																			},
																			"nativeSrc": "20272:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "20272:12:10"
																		},
																		"nativeSrc": "20272:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "20272:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20239:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "20239:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20261:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "20261:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "20246:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "20246:14:10"
																				},
																				"nativeSrc": "20246:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "20246:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20236:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "20236:2:10"
																		},
																		"nativeSrc": "20236:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20236:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20229:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20229:6:10"
																},
																"nativeSrc": "20229:40:10",
																"nodeType": "YulFunctionCall",
																"src": "20229:40:10"
															},
															"nativeSrc": "20226:60:10",
															"nodeType": "YulIf",
															"src": "20226:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "20176:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20209:5:10",
														"nodeType": "YulTypedName",
														"src": "20209:5:10",
														"type": ""
													}
												],
												"src": "20176:116:10"
											},
											{
												"body": {
													"nativeSrc": "20358:77:10",
													"nodeType": "YulBlock",
													"src": "20358:77:10",
													"statements": [
														{
															"nativeSrc": "20368:22:10",
															"nodeType": "YulAssignment",
															"src": "20368:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20383:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20383:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20377:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "20377:5:10"
																},
																"nativeSrc": "20377:13:10",
																"nodeType": "YulFunctionCall",
																"src": "20377:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20368:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "20368:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20423:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "20423:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "20399:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "20399:23:10"
																},
																"nativeSrc": "20399:30:10",
																"nodeType": "YulFunctionCall",
																"src": "20399:30:10"
															},
															"nativeSrc": "20399:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "20399:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "20298:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20336:6:10",
														"nodeType": "YulTypedName",
														"src": "20336:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20344:3:10",
														"nodeType": "YulTypedName",
														"src": "20344:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20352:5:10",
														"nodeType": "YulTypedName",
														"src": "20352:5:10",
														"type": ""
													}
												],
												"src": "20298:137:10"
											},
											{
												"body": {
													"nativeSrc": "20515:271:10",
													"nodeType": "YulBlock",
													"src": "20515:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "20561:83:10",
																"nodeType": "YulBlock",
																"src": "20561:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20563:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "20563:77:10"
																			},
																			"nativeSrc": "20563:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "20563:79:10"
																		},
																		"nativeSrc": "20563:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "20563:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20536:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "20536:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20545:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20545:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20532:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20532:3:10"
																		},
																		"nativeSrc": "20532:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20532:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20557:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20557:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20528:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20528:3:10"
																},
																"nativeSrc": "20528:32:10",
																"nodeType": "YulFunctionCall",
																"src": "20528:32:10"
															},
															"nativeSrc": "20525:119:10",
															"nodeType": "YulIf",
															"src": "20525:119:10"
														},
														{
															"nativeSrc": "20654:125:10",
															"nodeType": "YulBlock",
															"src": "20654:125:10",
															"statements": [
																{
																	"nativeSrc": "20669:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20669:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20683:1:10",
																		"nodeType": "YulLiteral",
																		"src": "20683:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20673:6:10",
																			"nodeType": "YulTypedName",
																			"src": "20673:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20698:71:10",
																	"nodeType": "YulAssignment",
																	"src": "20698:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20741:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "20741:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20752:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "20752:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20737:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "20737:3:10"
																				},
																				"nativeSrc": "20737:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "20737:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20761:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "20761:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "20708:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "20708:28:10"
																		},
																		"nativeSrc": "20708:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20708:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20698:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "20698:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "20441:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20485:9:10",
														"nodeType": "YulTypedName",
														"src": "20485:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20496:7:10",
														"nodeType": "YulTypedName",
														"src": "20496:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20508:6:10",
														"nodeType": "YulTypedName",
														"src": "20508:6:10",
														"type": ""
													}
												],
												"src": "20441:345:10"
											},
											{
												"body": {
													"nativeSrc": "20855:80:10",
													"nodeType": "YulBlock",
													"src": "20855:80:10",
													"statements": [
														{
															"nativeSrc": "20865:22:10",
															"nodeType": "YulAssignment",
															"src": "20865:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20880:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20880:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20874:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "20874:5:10"
																},
																"nativeSrc": "20874:13:10",
																"nodeType": "YulFunctionCall",
																"src": "20874:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20865:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "20865:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20923:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "20923:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "20896:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "20896:26:10"
																},
																"nativeSrc": "20896:33:10",
																"nodeType": "YulFunctionCall",
																"src": "20896:33:10"
															},
															"nativeSrc": "20896:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "20896:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "20792:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20833:6:10",
														"nodeType": "YulTypedName",
														"src": "20833:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20841:3:10",
														"nodeType": "YulTypedName",
														"src": "20841:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20849:5:10",
														"nodeType": "YulTypedName",
														"src": "20849:5:10",
														"type": ""
													}
												],
												"src": "20792:143:10"
											},
											{
												"body": {
													"nativeSrc": "21071:619:10",
													"nodeType": "YulBlock",
													"src": "21071:619:10",
													"statements": [
														{
															"nativeSrc": "21081:90:10",
															"nodeType": "YulAssignment",
															"src": "21081:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21163:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "21163:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "21106:56:10",
																			"nodeType": "YulIdentifier",
																			"src": "21106:56:10"
																		},
																		"nativeSrc": "21106:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21106:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "21090:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "21090:15:10"
																},
																"nativeSrc": "21090:81:10",
																"nodeType": "YulFunctionCall",
																"src": "21090:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "21081:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "21081:5:10"
																}
															]
														},
														{
															"nativeSrc": "21180:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "21180:16:10",
															"value": {
																"name": "array",
																"nativeSrc": "21191:5:10",
																"nodeType": "YulIdentifier",
																"src": "21191:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "21184:3:10",
																	"nodeType": "YulTypedName",
																	"src": "21184:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "21213:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "21213:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21220:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21220:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21206:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21206:6:10"
																},
																"nativeSrc": "21206:21:10",
																"nodeType": "YulFunctionCall",
																"src": "21206:21:10"
															},
															"nativeSrc": "21206:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "21206:21:10"
														},
														{
															"nativeSrc": "21236:23:10",
															"nodeType": "YulAssignment",
															"src": "21236:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "21247:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "21247:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21254:4:10",
																		"nodeType": "YulLiteral",
																		"src": "21254:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21243:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21243:3:10"
																},
																"nativeSrc": "21243:16:10",
																"nodeType": "YulFunctionCall",
																"src": "21243:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "21236:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21236:3:10"
																}
															]
														},
														{
															"nativeSrc": "21269:44:10",
															"nodeType": "YulVariableDeclaration",
															"src": "21269:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21287:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21287:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21299:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "21299:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21307:4:10",
																				"nodeType": "YulLiteral",
																				"src": "21307:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "21295:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21295:3:10"
																		},
																		"nativeSrc": "21295:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21295:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21283:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21283:3:10"
																},
																"nativeSrc": "21283:30:10",
																"nodeType": "YulFunctionCall",
																"src": "21283:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "21273:6:10",
																	"nodeType": "YulTypedName",
																	"src": "21273:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21341:103:10",
																"nodeType": "YulBlock",
																"src": "21341:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "21355:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "21355:77:10"
																			},
																			"nativeSrc": "21355:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21355:79:10"
																		},
																		"nativeSrc": "21355:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "21355:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "21328:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21328:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "21336:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21336:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21325:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "21325:2:10"
																},
																"nativeSrc": "21325:15:10",
																"nodeType": "YulFunctionCall",
																"src": "21325:15:10"
															},
															"nativeSrc": "21322:122:10",
															"nodeType": "YulIf",
															"src": "21322:122:10"
														},
														{
															"body": {
																"nativeSrc": "21529:155:10",
																"nodeType": "YulBlock",
																"src": "21529:155:10",
																"statements": [
																	{
																		"nativeSrc": "21544:21:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "21544:21:10",
																		"value": {
																			"name": "src",
																			"nativeSrc": "21562:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21562:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "21548:10:10",
																				"nodeType": "YulTypedName",
																				"src": "21548:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "21586:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "21586:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "21623:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "21623:10:10"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "21635:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "21635:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nativeSrc": "21591:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "21591:31:10"
																					},
																					"nativeSrc": "21591:48:10",
																					"nodeType": "YulFunctionCall",
																					"src": "21591:48:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "21579:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "21579:6:10"
																			},
																			"nativeSrc": "21579:61:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21579:61:10"
																		},
																		"nativeSrc": "21579:61:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "21579:61:10"
																	},
																	{
																		"nativeSrc": "21653:21:10",
																		"nodeType": "YulAssignment",
																		"src": "21653:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "21664:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "21664:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21669:4:10",
																					"nodeType": "YulLiteral",
																					"src": "21669:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "21660:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "21660:3:10"
																			},
																			"nativeSrc": "21660:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21660:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "21653:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "21653:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "21482:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21482:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "21487:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21487:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "21479:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "21479:2:10"
																},
																"nativeSrc": "21479:15:10",
																"nodeType": "YulFunctionCall",
																"src": "21479:15:10"
															},
															"nativeSrc": "21453:231:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "21495:25:10",
																"nodeType": "YulBlock",
																"src": "21495:25:10",
																"statements": [
																	{
																		"nativeSrc": "21497:21:10",
																		"nodeType": "YulAssignment",
																		"src": "21497:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "21508:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "21508:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21513:4:10",
																					"nodeType": "YulLiteral",
																					"src": "21513:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "21504:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "21504:3:10"
																			},
																			"nativeSrc": "21504:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21504:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "21497:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "21497:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "21457:21:10",
																"nodeType": "YulBlock",
																"src": "21457:21:10",
																"statements": [
																	{
																		"nativeSrc": "21459:17:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "21459:17:10",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "21470:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "21470:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "21463:3:10",
																				"nodeType": "YulTypedName",
																				"src": "21463:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "21453:231:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "20958:732:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21041:6:10",
														"nodeType": "YulTypedName",
														"src": "21041:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "21049:6:10",
														"nodeType": "YulTypedName",
														"src": "21049:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21057:3:10",
														"nodeType": "YulTypedName",
														"src": "21057:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "21065:5:10",
														"nodeType": "YulTypedName",
														"src": "21065:5:10",
														"type": ""
													}
												],
												"src": "20958:732:10"
											},
											{
												"body": {
													"nativeSrc": "21801:297:10",
													"nodeType": "YulBlock",
													"src": "21801:297:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "21850:83:10",
																"nodeType": "YulBlock",
																"src": "21850:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "21852:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "21852:77:10"
																			},
																			"nativeSrc": "21852:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21852:79:10"
																		},
																		"nativeSrc": "21852:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "21852:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "21829:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "21829:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "21837:4:10",
																						"nodeType": "YulLiteral",
																						"src": "21837:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21825:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "21825:3:10"
																				},
																				"nativeSrc": "21825:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "21825:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "21844:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "21844:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "21821:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21821:3:10"
																		},
																		"nativeSrc": "21821:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21821:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21814:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21814:6:10"
																},
																"nativeSrc": "21814:35:10",
																"nodeType": "YulFunctionCall",
																"src": "21814:35:10"
															},
															"nativeSrc": "21811:122:10",
															"nodeType": "YulIf",
															"src": "21811:122:10"
														},
														{
															"nativeSrc": "21942:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "21942:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21962:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21962:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21956:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "21956:5:10"
																},
																"nativeSrc": "21956:13:10",
																"nodeType": "YulFunctionCall",
																"src": "21956:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "21946:6:10",
																	"nodeType": "YulTypedName",
																	"src": "21946:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21978:114:10",
															"nodeType": "YulAssignment",
															"src": "21978:114:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "22065:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "22065:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22073:4:10",
																				"nodeType": "YulLiteral",
																				"src": "22073:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22061:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22061:3:10"
																		},
																		"nativeSrc": "22061:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22061:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22080:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22080:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "22088:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22088:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "21987:73:10",
																	"nodeType": "YulIdentifier",
																	"src": "21987:73:10"
																},
																"nativeSrc": "21987:105:10",
																"nodeType": "YulFunctionCall",
																"src": "21987:105:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "21978:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "21978:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "21713:385:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21779:6:10",
														"nodeType": "YulTypedName",
														"src": "21779:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21787:3:10",
														"nodeType": "YulTypedName",
														"src": "21787:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "21795:5:10",
														"nodeType": "YulTypedName",
														"src": "21795:5:10",
														"type": ""
													}
												],
												"src": "21713:385:10"
											},
											{
												"body": {
													"nativeSrc": "22186:229:10",
													"nodeType": "YulBlock",
													"src": "22186:229:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "22291:22:10",
																"nodeType": "YulBlock",
																"src": "22291:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "22293:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "22293:16:10"
																			},
																			"nativeSrc": "22293:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "22293:18:10"
																		},
																		"nativeSrc": "22293:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "22293:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "22263:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22263:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22271:18:10",
																		"nodeType": "YulLiteral",
																		"src": "22271:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22260:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "22260:2:10"
																},
																"nativeSrc": "22260:30:10",
																"nodeType": "YulFunctionCall",
																"src": "22260:30:10"
															},
															"nativeSrc": "22257:56:10",
															"nodeType": "YulIf",
															"src": "22257:56:10"
														},
														{
															"nativeSrc": "22323:25:10",
															"nodeType": "YulAssignment",
															"src": "22323:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "22335:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22335:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22343:4:10",
																		"nodeType": "YulLiteral",
																		"src": "22343:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "22331:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22331:3:10"
																},
																"nativeSrc": "22331:17:10",
																"nodeType": "YulFunctionCall",
																"src": "22331:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "22323:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22323:4:10"
																}
															]
														},
														{
															"nativeSrc": "22385:23:10",
															"nodeType": "YulAssignment",
															"src": "22385:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "22397:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "22397:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22403:4:10",
																		"nodeType": "YulLiteral",
																		"src": "22403:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22393:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22393:3:10"
																},
																"nativeSrc": "22393:15:10",
																"nodeType": "YulFunctionCall",
																"src": "22393:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "22385:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22385:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "22104:311:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "22170:6:10",
														"nodeType": "YulTypedName",
														"src": "22170:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "22181:4:10",
														"nodeType": "YulTypedName",
														"src": "22181:4:10",
														"type": ""
													}
												],
												"src": "22104:311:10"
											},
											{
												"body": {
													"nativeSrc": "22484:80:10",
													"nodeType": "YulBlock",
													"src": "22484:80:10",
													"statements": [
														{
															"nativeSrc": "22494:22:10",
															"nodeType": "YulAssignment",
															"src": "22494:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "22509:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22509:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "22503:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "22503:5:10"
																},
																"nativeSrc": "22503:13:10",
																"nodeType": "YulFunctionCall",
																"src": "22503:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22494:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "22494:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22552:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "22552:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "22525:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "22525:26:10"
																},
																"nativeSrc": "22525:33:10",
																"nodeType": "YulFunctionCall",
																"src": "22525:33:10"
															},
															"nativeSrc": "22525:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "22525:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "22421:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "22462:6:10",
														"nodeType": "YulTypedName",
														"src": "22462:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "22470:3:10",
														"nodeType": "YulTypedName",
														"src": "22470:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "22478:5:10",
														"nodeType": "YulTypedName",
														"src": "22478:5:10",
														"type": ""
													}
												],
												"src": "22421:143:10"
											},
											{
												"body": {
													"nativeSrc": "22700:619:10",
													"nodeType": "YulBlock",
													"src": "22700:619:10",
													"statements": [
														{
															"nativeSrc": "22710:90:10",
															"nodeType": "YulAssignment",
															"src": "22710:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "22792:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "22792:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "22735:56:10",
																			"nodeType": "YulIdentifier",
																			"src": "22735:56:10"
																		},
																		"nativeSrc": "22735:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22735:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "22719:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "22719:15:10"
																},
																"nativeSrc": "22719:81:10",
																"nodeType": "YulFunctionCall",
																"src": "22719:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "22710:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "22710:5:10"
																}
															]
														},
														{
															"nativeSrc": "22809:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "22809:16:10",
															"value": {
																"name": "array",
																"nativeSrc": "22820:5:10",
																"nodeType": "YulIdentifier",
																"src": "22820:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "22813:3:10",
																	"nodeType": "YulTypedName",
																	"src": "22813:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "22842:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "22842:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22849:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22849:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22835:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22835:6:10"
																},
																"nativeSrc": "22835:21:10",
																"nodeType": "YulFunctionCall",
																"src": "22835:21:10"
															},
															"nativeSrc": "22835:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "22835:21:10"
														},
														{
															"nativeSrc": "22865:23:10",
															"nodeType": "YulAssignment",
															"src": "22865:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "22876:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "22876:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22883:4:10",
																		"nodeType": "YulLiteral",
																		"src": "22883:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22872:3:10"
																},
																"nativeSrc": "22872:16:10",
																"nodeType": "YulFunctionCall",
																"src": "22872:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "22865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22865:3:10"
																}
															]
														},
														{
															"nativeSrc": "22898:44:10",
															"nodeType": "YulVariableDeclaration",
															"src": "22898:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "22916:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22916:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "22928:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "22928:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22936:4:10",
																				"nodeType": "YulLiteral",
																				"src": "22936:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "22924:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22924:3:10"
																		},
																		"nativeSrc": "22924:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22924:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22912:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22912:3:10"
																},
																"nativeSrc": "22912:30:10",
																"nodeType": "YulFunctionCall",
																"src": "22912:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "22902:6:10",
																	"nodeType": "YulTypedName",
																	"src": "22902:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22970:103:10",
																"nodeType": "YulBlock",
																"src": "22970:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "22984:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "22984:77:10"
																			},
																			"nativeSrc": "22984:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "22984:79:10"
																		},
																		"nativeSrc": "22984:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "22984:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "22957:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22957:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "22965:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22965:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22954:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "22954:2:10"
																},
																"nativeSrc": "22954:15:10",
																"nodeType": "YulFunctionCall",
																"src": "22954:15:10"
															},
															"nativeSrc": "22951:122:10",
															"nodeType": "YulIf",
															"src": "22951:122:10"
														},
														{
															"body": {
																"nativeSrc": "23158:155:10",
																"nodeType": "YulBlock",
																"src": "23158:155:10",
																"statements": [
																	{
																		"nativeSrc": "23173:21:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23173:21:10",
																		"value": {
																			"name": "src",
																			"nativeSrc": "23191:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23191:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "23177:10:10",
																				"nodeType": "YulTypedName",
																				"src": "23177:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "23215:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "23215:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "23252:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "23252:10:10"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "23264:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "23264:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nativeSrc": "23220:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "23220:31:10"
																					},
																					"nativeSrc": "23220:48:10",
																					"nodeType": "YulFunctionCall",
																					"src": "23220:48:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "23208:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "23208:6:10"
																			},
																			"nativeSrc": "23208:61:10",
																			"nodeType": "YulFunctionCall",
																			"src": "23208:61:10"
																		},
																		"nativeSrc": "23208:61:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "23208:61:10"
																	},
																	{
																		"nativeSrc": "23282:21:10",
																		"nodeType": "YulAssignment",
																		"src": "23282:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "23293:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "23293:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23298:4:10",
																					"nodeType": "YulLiteral",
																					"src": "23298:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23289:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "23289:3:10"
																			},
																			"nativeSrc": "23289:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "23289:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "23282:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "23282:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "23111:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23111:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "23116:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23116:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "23108:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "23108:2:10"
																},
																"nativeSrc": "23108:15:10",
																"nodeType": "YulFunctionCall",
																"src": "23108:15:10"
															},
															"nativeSrc": "23082:231:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "23124:25:10",
																"nodeType": "YulBlock",
																"src": "23124:25:10",
																"statements": [
																	{
																		"nativeSrc": "23126:21:10",
																		"nodeType": "YulAssignment",
																		"src": "23126:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "23137:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "23137:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23142:4:10",
																					"nodeType": "YulLiteral",
																					"src": "23142:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23133:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "23133:3:10"
																			},
																			"nativeSrc": "23133:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "23133:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "23126:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "23126:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "23086:21:10",
																"nodeType": "YulBlock",
																"src": "23086:21:10",
																"statements": [
																	{
																		"nativeSrc": "23088:17:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23088:17:10",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "23099:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "23099:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "23092:3:10",
																				"nodeType": "YulTypedName",
																				"src": "23092:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "23082:231:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "22587:732:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "22670:6:10",
														"nodeType": "YulTypedName",
														"src": "22670:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "22678:6:10",
														"nodeType": "YulTypedName",
														"src": "22678:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "22686:3:10",
														"nodeType": "YulTypedName",
														"src": "22686:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "22694:5:10",
														"nodeType": "YulTypedName",
														"src": "22694:5:10",
														"type": ""
													}
												],
												"src": "22587:732:10"
											},
											{
												"body": {
													"nativeSrc": "23430:297:10",
													"nodeType": "YulBlock",
													"src": "23430:297:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "23479:83:10",
																"nodeType": "YulBlock",
																"src": "23479:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "23481:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "23481:77:10"
																			},
																			"nativeSrc": "23481:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "23481:79:10"
																		},
																		"nativeSrc": "23481:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "23481:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "23458:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "23458:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "23466:4:10",
																						"nodeType": "YulLiteral",
																						"src": "23466:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "23454:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "23454:3:10"
																				},
																				"nativeSrc": "23454:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "23454:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "23473:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "23473:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "23450:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23450:3:10"
																		},
																		"nativeSrc": "23450:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23450:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "23443:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23443:6:10"
																},
																"nativeSrc": "23443:35:10",
																"nodeType": "YulFunctionCall",
																"src": "23443:35:10"
															},
															"nativeSrc": "23440:122:10",
															"nodeType": "YulIf",
															"src": "23440:122:10"
														},
														{
															"nativeSrc": "23571:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "23571:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "23591:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23591:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23585:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "23585:5:10"
																},
																"nativeSrc": "23585:13:10",
																"nodeType": "YulFunctionCall",
																"src": "23585:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "23575:6:10",
																	"nodeType": "YulTypedName",
																	"src": "23575:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23607:114:10",
															"nodeType": "YulAssignment",
															"src": "23607:114:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "23694:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "23694:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23702:4:10",
																				"nodeType": "YulLiteral",
																				"src": "23702:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23690:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23690:3:10"
																		},
																		"nativeSrc": "23690:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23690:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23709:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23709:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "23717:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23717:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "23616:73:10",
																	"nodeType": "YulIdentifier",
																	"src": "23616:73:10"
																},
																"nativeSrc": "23616:105:10",
																"nodeType": "YulFunctionCall",
																"src": "23616:105:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "23607:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "23607:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "23342:385:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "23408:6:10",
														"nodeType": "YulTypedName",
														"src": "23408:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23416:3:10",
														"nodeType": "YulTypedName",
														"src": "23416:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "23424:5:10",
														"nodeType": "YulTypedName",
														"src": "23424:5:10",
														"type": ""
													}
												],
												"src": "23342:385:10"
											},
											{
												"body": {
													"nativeSrc": "23786:51:10",
													"nodeType": "YulBlock",
													"src": "23786:51:10",
													"statements": [
														{
															"nativeSrc": "23796:35:10",
															"nodeType": "YulAssignment",
															"src": "23796:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23825:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "23825:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "23807:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "23807:17:10"
																},
																"nativeSrc": "23807:24:10",
																"nodeType": "YulFunctionCall",
																"src": "23807:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "23796:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "23796:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "23733:104:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23768:5:10",
														"nodeType": "YulTypedName",
														"src": "23768:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "23778:7:10",
														"nodeType": "YulTypedName",
														"src": "23778:7:10",
														"type": ""
													}
												],
												"src": "23733:104:10"
											},
											{
												"body": {
													"nativeSrc": "23894:87:10",
													"nodeType": "YulBlock",
													"src": "23894:87:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "23959:16:10",
																"nodeType": "YulBlock",
																"src": "23959:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "23968:1:10",
																					"nodeType": "YulLiteral",
																					"src": "23968:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23971:1:10",
																					"nodeType": "YulLiteral",
																					"src": "23971:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "23961:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "23961:6:10"
																			},
																			"nativeSrc": "23961:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "23961:12:10"
																		},
																		"nativeSrc": "23961:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "23961:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23917:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "23917:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23950:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "23950:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "23924:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "23924:25:10"
																				},
																				"nativeSrc": "23924:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "23924:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "23914:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "23914:2:10"
																		},
																		"nativeSrc": "23914:43:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23914:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "23907:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23907:6:10"
																},
																"nativeSrc": "23907:51:10",
																"nodeType": "YulFunctionCall",
																"src": "23907:51:10"
															},
															"nativeSrc": "23904:71:10",
															"nodeType": "YulIf",
															"src": "23904:71:10"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "23843:138:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23887:5:10",
														"nodeType": "YulTypedName",
														"src": "23887:5:10",
														"type": ""
													}
												],
												"src": "23843:138:10"
											},
											{
												"body": {
													"nativeSrc": "24058:88:10",
													"nodeType": "YulBlock",
													"src": "24058:88:10",
													"statements": [
														{
															"nativeSrc": "24068:22:10",
															"nodeType": "YulAssignment",
															"src": "24068:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "24083:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24083:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24077:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "24077:5:10"
																},
																"nativeSrc": "24077:13:10",
																"nodeType": "YulFunctionCall",
																"src": "24077:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "24068:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "24068:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24134:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "24134:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "24099:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "24099:34:10"
																},
																"nativeSrc": "24099:41:10",
																"nodeType": "YulFunctionCall",
																"src": "24099:41:10"
															},
															"nativeSrc": "24099:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "24099:41:10"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nativeSrc": "23987:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "24036:6:10",
														"nodeType": "YulTypedName",
														"src": "24036:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "24044:3:10",
														"nodeType": "YulTypedName",
														"src": "24044:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "24052:5:10",
														"nodeType": "YulTypedName",
														"src": "24052:5:10",
														"type": ""
													}
												],
												"src": "23987:159:10"
											},
											{
												"body": {
													"nativeSrc": "24321:916:10",
													"nodeType": "YulBlock",
													"src": "24321:916:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "24367:83:10",
																"nodeType": "YulBlock",
																"src": "24367:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "24369:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "24369:77:10"
																			},
																			"nativeSrc": "24369:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "24369:79:10"
																		},
																		"nativeSrc": "24369:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "24369:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24342:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "24342:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24351:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24351:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24338:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24338:3:10"
																		},
																		"nativeSrc": "24338:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24338:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24363:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24363:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "24334:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24334:3:10"
																},
																"nativeSrc": "24334:32:10",
																"nodeType": "YulFunctionCall",
																"src": "24334:32:10"
															},
															"nativeSrc": "24331:119:10",
															"nodeType": "YulIf",
															"src": "24331:119:10"
														},
														{
															"nativeSrc": "24460:306:10",
															"nodeType": "YulBlock",
															"src": "24460:306:10",
															"statements": [
																{
																	"nativeSrc": "24475:38:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "24475:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "24499:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "24499:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "24510:1:10",
																						"nodeType": "YulLiteral",
																						"src": "24510:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "24495:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "24495:3:10"
																				},
																				"nativeSrc": "24495:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "24495:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "24489:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "24489:5:10"
																		},
																		"nativeSrc": "24489:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24489:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "24479:6:10",
																			"nodeType": "YulTypedName",
																			"src": "24479:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "24560:83:10",
																		"nodeType": "YulBlock",
																		"src": "24560:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "24562:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "24562:77:10"
																					},
																					"nativeSrc": "24562:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "24562:79:10"
																				},
																				"nativeSrc": "24562:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "24562:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "24532:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "24532:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24540:18:10",
																				"nodeType": "YulLiteral",
																				"src": "24540:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "24529:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "24529:2:10"
																		},
																		"nativeSrc": "24529:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24529:30:10"
																	},
																	"nativeSrc": "24526:117:10",
																	"nodeType": "YulIf",
																	"src": "24526:117:10"
																},
																{
																	"nativeSrc": "24657:99:10",
																	"nodeType": "YulAssignment",
																	"src": "24657:99:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "24728:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "24728:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "24739:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "24739:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "24724:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "24724:3:10"
																				},
																				"nativeSrc": "24724:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "24724:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24748:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "24748:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "24667:56:10",
																			"nodeType": "YulIdentifier",
																			"src": "24667:56:10"
																		},
																		"nativeSrc": "24667:89:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24667:89:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "24657:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "24657:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "24776:307:10",
															"nodeType": "YulBlock",
															"src": "24776:307:10",
															"statements": [
																{
																	"nativeSrc": "24791:39:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "24791:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "24815:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "24815:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "24826:2:10",
																						"nodeType": "YulLiteral",
																						"src": "24826:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "24811:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "24811:3:10"
																				},
																				"nativeSrc": "24811:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "24811:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "24805:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "24805:5:10"
																		},
																		"nativeSrc": "24805:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24805:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "24795:6:10",
																			"nodeType": "YulTypedName",
																			"src": "24795:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "24877:83:10",
																		"nodeType": "YulBlock",
																		"src": "24877:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "24879:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "24879:77:10"
																					},
																					"nativeSrc": "24879:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "24879:79:10"
																				},
																				"nativeSrc": "24879:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "24879:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "24849:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "24849:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24857:18:10",
																				"nodeType": "YulLiteral",
																				"src": "24857:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "24846:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "24846:2:10"
																		},
																		"nativeSrc": "24846:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24846:30:10"
																	},
																	"nativeSrc": "24843:117:10",
																	"nodeType": "YulIf",
																	"src": "24843:117:10"
																},
																{
																	"nativeSrc": "24974:99:10",
																	"nodeType": "YulAssignment",
																	"src": "24974:99:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "25045:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "25045:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "25056:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "25056:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25041:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "25041:3:10"
																				},
																				"nativeSrc": "25041:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "25041:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "25065:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "25065:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "24984:56:10",
																			"nodeType": "YulIdentifier",
																			"src": "24984:56:10"
																		},
																		"nativeSrc": "24984:89:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24984:89:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "24974:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "24974:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "25093:137:10",
															"nodeType": "YulBlock",
															"src": "25093:137:10",
															"statements": [
																{
																	"nativeSrc": "25108:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "25108:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25122:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25122:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "25112:6:10",
																			"nodeType": "YulTypedName",
																			"src": "25112:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "25138:82:10",
																	"nodeType": "YulAssignment",
																	"src": "25138:82:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "25192:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "25192:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "25203:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "25203:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25188:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "25188:3:10"
																				},
																				"nativeSrc": "25188:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "25188:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "25212:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "25212:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nativeSrc": "25148:39:10",
																			"nodeType": "YulIdentifier",
																			"src": "25148:39:10"
																		},
																		"nativeSrc": "25148:72:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25148:72:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "25138:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "25138:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_address_payable_fromMemory",
												"nativeSrc": "24152:1085:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24275:9:10",
														"nodeType": "YulTypedName",
														"src": "24275:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "24286:7:10",
														"nodeType": "YulTypedName",
														"src": "24286:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "24298:6:10",
														"nodeType": "YulTypedName",
														"src": "24298:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24306:6:10",
														"nodeType": "YulTypedName",
														"src": "24306:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24314:6:10",
														"nodeType": "YulTypedName",
														"src": "24314:6:10",
														"type": ""
													}
												],
												"src": "24152:1085:10"
											},
											{
												"body": {
													"nativeSrc": "25397:288:10",
													"nodeType": "YulBlock",
													"src": "25397:288:10",
													"statements": [
														{
															"nativeSrc": "25407:26:10",
															"nodeType": "YulAssignment",
															"src": "25407:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25419:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "25419:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25430:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25430:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25415:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25415:3:10"
																},
																"nativeSrc": "25415:18:10",
																"nodeType": "YulFunctionCall",
																"src": "25415:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25407:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "25407:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25487:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "25487:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25500:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25500:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25511:1:10",
																				"nodeType": "YulLiteral",
																				"src": "25511:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25496:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25496:3:10"
																		},
																		"nativeSrc": "25496:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25496:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25443:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "25443:43:10"
																},
																"nativeSrc": "25443:71:10",
																"nodeType": "YulFunctionCall",
																"src": "25443:71:10"
															},
															"nativeSrc": "25443:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "25443:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25568:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "25568:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25581:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25581:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25592:2:10",
																				"nodeType": "YulLiteral",
																				"src": "25592:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25577:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25577:3:10"
																		},
																		"nativeSrc": "25577:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25577:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25524:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "25524:43:10"
																},
																"nativeSrc": "25524:72:10",
																"nodeType": "YulFunctionCall",
																"src": "25524:72:10"
															},
															"nativeSrc": "25524:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "25524:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25650:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "25650:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25663:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25663:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25674:2:10",
																				"nodeType": "YulLiteral",
																				"src": "25674:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25659:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25659:3:10"
																		},
																		"nativeSrc": "25659:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25659:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25606:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "25606:43:10"
																},
																"nativeSrc": "25606:72:10",
																"nodeType": "YulFunctionCall",
																"src": "25606:72:10"
															},
															"nativeSrc": "25606:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "25606:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed",
												"nativeSrc": "25243:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25353:9:10",
														"nodeType": "YulTypedName",
														"src": "25353:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25365:6:10",
														"nodeType": "YulTypedName",
														"src": "25365:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25373:6:10",
														"nodeType": "YulTypedName",
														"src": "25373:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25381:6:10",
														"nodeType": "YulTypedName",
														"src": "25381:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25392:4:10",
														"nodeType": "YulTypedName",
														"src": "25392:4:10",
														"type": ""
													}
												],
												"src": "25243:442:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bytes_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IAllo_$359_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IAllo_$359_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IAllo_$359_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IAllo_$359__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IAllo_$359_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptrt_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bytes[]\n    function abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_bytes_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct IStrategy.PayoutSummary -> struct IStrategy.PayoutSummary\n    function abi_encode_t_struct$_PayoutSummary_$572_memory_ptr_to_t_struct$_PayoutSummary_$572_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // recipientAddress\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_PayoutSummary_$572_memory_ptr_to_t_struct$_PayoutSummary_$572_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_PayoutSummary_$572_memory_ptr_to_t_struct$_PayoutSummary_$572_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct IStrategy.PayoutSummary[] -> struct IStrategy.PayoutSummary[]\n    function abi_encode_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_PayoutSummary_$572_memory_ptr_to_t_struct$_PayoutSummary_$572_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Status_$566(value) {\n        if iszero(lt(value, 7)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Status_$566(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$566(value)\n    }\n\n    function convert_t_enum$_Status_$566_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$566(value)\n    }\n\n    function abi_encode_t_enum$_Status_$566_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$566_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Status_$566__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Status_$566_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_address_payable_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1062": [
									{
										"length": 32,
										"start": 971
									},
									{
										"length": 32,
										"start": 1672
									},
									{
										"length": 32,
										"start": 2096
									}
								],
								"1064": [
									{
										"length": 32,
										"start": 1074
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100eb575f3560e01c8063a0cf0aea11610089578063eb11af9311610058578063eb11af93146102ea578063edd146cc14610326578063ef2920fc1461034e578063f5b0dfb71461036a576100f2565b8063a0cf0aea14610232578063b2b878d01461025c578063d9caed1214610298578063df868ed3146102c0576100f2565b806338fff2d0116100c557806338fff2d01461017857806342fda9c7146101a25780634ab4ba42146101cc5780634d31d087146101f6576100f2565b80630a6f0ee9146100f657806315cc481e1461011e5780632bbe0cae14610148576100f2565b366100f257005b5f5ffd5b348015610101575f5ffd5b5061011c60048036038101906101179190610e9d565b610392565b005b348015610129575f5ffd5b506101326103c8565b60405161013f9190610f80565b60405180910390f35b610162600480360381019061015d9190610f99565b6103ef565b60405161016f9190611002565b60405180910390f35b348015610183575f5ffd5b5061018c610426565b6040516101999190611033565b60405180910390f35b3480156101ad575f5ffd5b506101b661042f565b6040516101c39190611064565b60405180910390f35b3480156101d7575f5ffd5b506101e0610456565b6040516101ed9190611033565b60405180910390f35b348015610201575f5ffd5b5061021c6004803603810190610217919061107d565b61045f565b60405161022991906110c2565b60405180910390f35b34801561023d575f5ffd5b50610246610470565b6040516102539190611002565b60405180910390f35b348015610267575f5ffd5b50610282600480360381019061027d91906111b9565b610488565b60405161028f9190611322565b60405180910390f35b3480156102a3575f5ffd5b506102be60048036038101906102b9919061136c565b61059f565b005b3480156102cb575f5ffd5b506102d46105ba565b6040516102e191906110c2565b60405180910390f35b3480156102f5575f5ffd5b50610310600480360381019061030b919061107d565b6105c8565b60405161031d919061142f565b60405180910390f35b348015610331575f5ffd5b5061034c60048036038101906103479190611448565b6105d9565b005b61036860048036038101906103639190610f99565b61061f565b005b348015610375575f5ffd5b50610390600480360381019061038b91906114a2565b610651565b005b61039a610686565b6103a261070d565b6103ad83838361074a565b6103b883838361074f565b6103c3838383610781565b505050565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f6103f8610686565b61040061070d565b61040a8383610786565b610414838361078a565b905061042083836107bd565b92915050565b5f600154905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f600254905090565b5f610469826107c1565b9050919050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b60605f83519050825181146104c9576040517f7b49805600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8167ffffffffffffffff8111156104e4576104e3610c57565b5b60405190808252806020026020018201604052801561051d57816020015b61050a610c04565b8152602001906001900390816105025790505b5090505f5b82811015610593576105688682815181106105405761053f6114cd565b5b602002602001015186838151811061055b5761055a6114cd565b5b60200260200101516107f4565b82828151811061057b5761057a6114cd565b5b60200260200101819052508080600101915050610522565b50809250505092915050565b336105a98161082e565b6105b4848484610903565b50505050565b5f6105c361096a565b905090565b5f6105d28261097e565b9050919050565b6105e2826109b1565b7f91efa3d50feccde0d0d202f8ae5c41ca0b2be614cebcb2bd2f4b019396e6568a828260405161061392919061155a565b60405180910390a15050565b610627610686565b61062f61070d565b6106398282610a37565b6106438282610a3b565b61064d8282610b94565b5050565b610659610686565b61066281610b98565b8060025f82825461067391906115b5565b9250508190555061068381610b9b565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070b576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f60015403610748576040517f3da3f98c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b505050565b6040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b5050565b5f6040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b5f6040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107fc610c04565b6040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166329e40d4b600154836040518363ffffffff1660e01b815260040161088b9291906115e8565b602060405180830381865afa1580156108a6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ca9190611639565b610900576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610959576109548282610b9e565b610965565b610964838383610bbb565b5b505050565b5f5f5f9054906101000a900460ff16905090565b5f6040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109b9610686565b5f600154146109f4576040517f439a74c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8103610a2d576040517f7fcce2a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060018190555050565b5050565b80610a458161082e565b5f5f5f85806020019051810190610a5c919061181c565b9250925092505f835190505f8103610aa0576040517ffb76571500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82518114610ada576040517ffb76571500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b81811015610b8a575f848281518110610af857610af76114cd565b5b602002602001015190505f868381518110610b1657610b156114cd565b5b60200260200101519050610b2b858284610903565b8073ffffffffffffffffffffffffffffffffffffffff167f463ffc2cf8b1596445c417388ed30e53eb67cf6668cb2be7f0addf8a78c8441b83878c604051610b75939291906118a4565b60405180910390a28260010192505050610adc565b5050505050505050565b5050565b50565b50565b5f5f5f5f84865af1610bb75763b12d13eb5f526004601cfd5b5050565b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af13d1560015f51141716610bfb576390b8ec185f526004601cfd5b5f603452505050565b60405180604001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81525090565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610c8d82610c47565b810181811067ffffffffffffffff82111715610cac57610cab610c57565b5b80604052505050565b5f610cbe610c32565b9050610cca8282610c84565b919050565b5f67ffffffffffffffff821115610ce957610ce8610c57565b5b602082029050602081019050919050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d2782610cfe565b9050919050565b610d3781610d1d565b8114610d41575f5ffd5b50565b5f81359050610d5281610d2e565b92915050565b5f610d6a610d6584610ccf565b610cb5565b90508083825260208201905060208402830185811115610d8d57610d8c610cfa565b5b835b81811015610db65780610da28882610d44565b845260208401935050602081019050610d8f565b5050509392505050565b5f82601f830112610dd457610dd3610c43565b5b8135610de4848260208601610d58565b91505092915050565b5f5ffd5b5f67ffffffffffffffff821115610e0b57610e0a610c57565b5b610e1482610c47565b9050602081019050919050565b828183375f83830152505050565b5f610e41610e3c84610df1565b610cb5565b905082815260208101848484011115610e5d57610e5c610ded565b5b610e68848285610e21565b509392505050565b5f82601f830112610e8457610e83610c43565b5b8135610e94848260208601610e2f565b91505092915050565b5f5f5f60608486031215610eb457610eb3610c3b565b5b5f84013567ffffffffffffffff811115610ed157610ed0610c3f565b5b610edd86828701610dc0565b935050602084013567ffffffffffffffff811115610efe57610efd610c3f565b5b610f0a86828701610e70565b9250506040610f1b86828701610d44565b9150509250925092565b5f819050919050565b5f610f48610f43610f3e84610cfe565b610f25565b610cfe565b9050919050565b5f610f5982610f2e565b9050919050565b5f610f6a82610f4f565b9050919050565b610f7a81610f60565b82525050565b5f602082019050610f935f830184610f71565b92915050565b5f5f60408385031215610faf57610fae610c3b565b5b5f83013567ffffffffffffffff811115610fcc57610fcb610c3f565b5b610fd885828601610e70565b9250506020610fe985828601610d44565b9150509250929050565b610ffc81610d1d565b82525050565b5f6020820190506110155f830184610ff3565b92915050565b5f819050919050565b61102d8161101b565b82525050565b5f6020820190506110465f830184611024565b92915050565b5f819050919050565b61105e8161104c565b82525050565b5f6020820190506110775f830184611055565b92915050565b5f6020828403121561109257611091610c3b565b5b5f61109f84828501610d44565b91505092915050565b5f8115159050919050565b6110bc816110a8565b82525050565b5f6020820190506110d55f8301846110b3565b92915050565b5f67ffffffffffffffff8211156110f5576110f4610c57565b5b602082029050602081019050919050565b5f611118611113846110db565b610cb5565b9050808382526020820190506020840283018581111561113b5761113a610cfa565b5b835b8181101561118257803567ffffffffffffffff8111156111605761115f610c43565b5b80860161116d8982610e70565b8552602085019450505060208101905061113d565b5050509392505050565b5f82601f8301126111a05761119f610c43565b5b81356111b0848260208601611106565b91505092915050565b5f5f604083850312156111cf576111ce610c3b565b5b5f83013567ffffffffffffffff8111156111ec576111eb610c3f565b5b6111f885828601610dc0565b925050602083013567ffffffffffffffff81111561121957611218610c3f565b5b6112258582860161118c565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61126181610d1d565b82525050565b6112708161101b565b82525050565b604082015f82015161128a5f850182611258565b50602082015161129d6020850182611267565b50505050565b5f6112ae8383611276565b60408301905092915050565b5f602082019050919050565b5f6112d08261122f565b6112da8185611239565b93506112e583611249565b805f5b838110156113155781516112fc88826112a3565b9750611307836112ba565b9250506001810190506112e8565b5085935050505092915050565b5f6020820190508181035f83015261133a81846112c6565b905092915050565b61134b8161101b565b8114611355575f5ffd5b50565b5f8135905061136681611342565b92915050565b5f5f5f6060848603121561138357611382610c3b565b5b5f61139086828701610d44565b93505060206113a186828701610d44565b92505060406113b286828701611358565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600781106113fa576113f96113bc565b5b50565b5f81905061140a826113e9565b919050565b5f611419826113fd565b9050919050565b6114298161140f565b82525050565b5f6020820190506114425f830184611420565b92915050565b5f5f6040838503121561145e5761145d610c3b565b5b5f61146b85828601611358565b925050602083013567ffffffffffffffff81111561148c5761148b610c3f565b5b61149885828601610e70565b9150509250929050565b5f602082840312156114b7576114b6610c3b565b5b5f6114c484828501611358565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f61152c826114fa565b6115368185611504565b9350611546818560208601611514565b61154f81610c47565b840191505092915050565b5f60408201905061156d5f830185611024565b818103602083015261157f8184611522565b90509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115bf8261101b565b91506115ca8361101b565b92508282019050808211156115e2576115e1611588565b5b92915050565b5f6040820190506115fb5f830185611024565b6116086020830184610ff3565b9392505050565b611618816110a8565b8114611622575f5ffd5b50565b5f815190506116338161160f565b92915050565b5f6020828403121561164e5761164d610c3b565b5b5f61165b84828501611625565b91505092915050565b5f8151905061167281610d2e565b92915050565b5f61168a61168584610ccf565b610cb5565b905080838252602082019050602084028301858111156116ad576116ac610cfa565b5b835b818110156116d657806116c28882611664565b8452602084019350506020810190506116af565b5050509392505050565b5f82601f8301126116f4576116f3610c43565b5b8151611704848260208601611678565b91505092915050565b5f67ffffffffffffffff82111561172757611726610c57565b5b602082029050602081019050919050565b5f8151905061174681611342565b92915050565b5f61175e6117598461170d565b610cb5565b9050808382526020820190506020840283018581111561178157611780610cfa565b5b835b818110156117aa57806117968882611738565b845260208401935050602081019050611783565b5050509392505050565b5f82601f8301126117c8576117c7610c43565b5b81516117d884826020860161174c565b91505092915050565b5f6117eb82610cfe565b9050919050565b6117fb816117e1565b8114611805575f5ffd5b50565b5f81519050611816816117f2565b92915050565b5f5f5f6060848603121561183357611832610c3b565b5b5f84015167ffffffffffffffff8111156118505761184f610c3f565b5b61185c868287016116e0565b935050602084015167ffffffffffffffff81111561187d5761187c610c3f565b5b611889868287016117b4565b925050604061189a86828701611808565b9150509250925092565b5f6060820190506118b75f830186611024565b6118c46020830185610ff3565b6118d16040830184610ff3565b94935050505056fea264697066735822122012c4e530567e7b87f67a652e44161d8493261144681370f393508b81a2e1a38964736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0CF0AEA GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xEB11AF93 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xEB11AF93 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xEDD146CC EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xEF2920FC EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xF5B0DFB7 EQ PUSH2 0x36A JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0xA0CF0AEA EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xB2B878D0 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xD9CAED12 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xDF868ED3 EQ PUSH2 0x2C0 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x38FFF2D0 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x42FDA9C7 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x4AB4BA42 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x4D31D087 EQ PUSH2 0x1F6 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0xA6F0EE9 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x15CC481E EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x2BBE0CAE EQ PUSH2 0x148 JUMPI PUSH2 0xF2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xF2 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xF99 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x246 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x11B9 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x136C JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0xF99 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39A PUSH2 0x686 JUMP JUMPDEST PUSH2 0x3A2 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x3AD DUP4 DUP4 DUP4 PUSH2 0x74A JUMP JUMPDEST PUSH2 0x3B8 DUP4 DUP4 DUP4 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x3C3 DUP4 DUP4 DUP4 PUSH2 0x781 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3F8 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x400 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x40A DUP4 DUP4 PUSH2 0x786 JUMP JUMPDEST PUSH2 0x414 DUP4 DUP4 PUSH2 0x78A JUMP JUMPDEST SWAP1 POP PUSH2 0x420 DUP4 DUP4 PUSH2 0x7BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x469 DUP3 PUSH2 0x7C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP4 MLOAD SWAP1 POP DUP3 MLOAD DUP2 EQ PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7B49805600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4E4 JUMPI PUSH2 0x4E3 PUSH2 0xC57 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x51D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x50A PUSH2 0xC04 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x502 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH2 0x568 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x540 JUMPI PUSH2 0x53F PUSH2 0x14CD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x55B JUMPI PUSH2 0x55A PUSH2 0x14CD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x7F4 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57B JUMPI PUSH2 0x57A PUSH2 0x14CD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x522 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0x5A9 DUP2 PUSH2 0x82E JUMP JUMPDEST PUSH2 0x5B4 DUP5 DUP5 DUP5 PUSH2 0x903 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5C3 PUSH2 0x96A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5D2 DUP3 PUSH2 0x97E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E2 DUP3 PUSH2 0x9B1 JUMP JUMPDEST PUSH32 0x91EFA3D50FECCDE0D0D202F8AE5C41CA0B2BE614CEBCB2BD2F4B019396E6568A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x613 SWAP3 SWAP2 SWAP1 PUSH2 0x155A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x627 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x62F PUSH2 0x70D JUMP JUMPDEST PUSH2 0x639 DUP3 DUP3 PUSH2 0xA37 JUMP JUMPDEST PUSH2 0x643 DUP3 DUP3 PUSH2 0xA3B JUMP JUMPDEST PUSH2 0x64D DUP3 DUP3 PUSH2 0xB94 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x659 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x662 DUP2 PUSH2 0xB98 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x673 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x683 DUP2 PUSH2 0xB9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH32 0x75FD2B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SUB PUSH2 0x748 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DA3F98C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7FC PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29E40D4B PUSH1 0x1 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88B SWAP3 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x900 JUMPI PUSH1 0x40 MLOAD PUSH32 0x75FD2B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x959 JUMPI PUSH2 0x954 DUP3 DUP3 PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x965 JUMP JUMPDEST PUSH2 0x964 DUP4 DUP4 DUP4 PUSH2 0xBBB JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B9 PUSH2 0x686 JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD EQ PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x439A74C900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0xA2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x7FCCE2A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH2 0xA45 DUP2 PUSH2 0x82E JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xA5C SWAP2 SWAP1 PUSH2 0x181C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH0 DUP4 MLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB76571500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP2 EQ PUSH2 0xADA JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB76571500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB8A JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAF8 JUMPI PUSH2 0xAF7 PUSH2 0x14CD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB16 JUMPI PUSH2 0xB15 PUSH2 0x14CD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0xB2B DUP6 DUP3 DUP5 PUSH2 0x903 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x463FFC2CF8B1596445C417388ED30E53EB67CF6668CB2BE7F0ADDF8A78C8441B DUP4 DUP8 DUP13 PUSH1 0x40 MLOAD PUSH2 0xB75 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0xADC JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP5 DUP7 GAS CALL PUSH2 0xBB7 JUMPI PUSH4 0xB12D13EB PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH1 0x14 MSTORE DUP1 PUSH1 0x34 MSTORE PUSH16 0xA9059CBB000000000000000000000000 PUSH0 MSTORE PUSH1 0x20 PUSH0 PUSH1 0x44 PUSH1 0x10 PUSH0 DUP8 GAS CALL RETURNDATASIZE ISZERO PUSH1 0x1 PUSH0 MLOAD EQ OR AND PUSH2 0xBFB JUMPI PUSH4 0x90B8EC18 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH0 PUSH1 0x34 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xC8D DUP3 PUSH2 0xC47 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCAC JUMPI PUSH2 0xCAB PUSH2 0xC57 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCBE PUSH2 0xC32 JUMP JUMPDEST SWAP1 POP PUSH2 0xCCA DUP3 DUP3 PUSH2 0xC84 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0xC57 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD27 DUP3 PUSH2 0xCFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD37 DUP2 PUSH2 0xD1D JUMP JUMPDEST DUP2 EQ PUSH2 0xD41 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD52 DUP2 PUSH2 0xD2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD6A PUSH2 0xD65 DUP5 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xD8D JUMPI PUSH2 0xD8C PUSH2 0xCFA JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDB6 JUMPI DUP1 PUSH2 0xDA2 DUP9 DUP3 PUSH2 0xD44 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD8F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDD4 JUMPI PUSH2 0xDD3 PUSH2 0xC43 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDE4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE0B JUMPI PUSH2 0xE0A PUSH2 0xC57 JUMP JUMPDEST JUMPDEST PUSH2 0xE14 DUP3 PUSH2 0xC47 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE41 PUSH2 0xE3C DUP5 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xE5D JUMPI PUSH2 0xE5C PUSH2 0xDED JUMP JUMPDEST JUMPDEST PUSH2 0xE68 DUP5 DUP3 DUP6 PUSH2 0xE21 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE84 JUMPI PUSH2 0xE83 PUSH2 0xC43 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE94 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEB4 JUMPI PUSH2 0xEB3 PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED1 JUMPI PUSH2 0xED0 PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0xEDD DUP7 DUP3 DUP8 ADD PUSH2 0xDC0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEFE JUMPI PUSH2 0xEFD PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0xF0A DUP7 DUP3 DUP8 ADD PUSH2 0xE70 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF1B DUP7 DUP3 DUP8 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF48 PUSH2 0xF43 PUSH2 0xF3E DUP5 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0xF25 JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF59 DUP3 PUSH2 0xF2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF6A DUP3 PUSH2 0xF4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7A DUP2 PUSH2 0xF60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF93 PUSH0 DUP4 ADD DUP5 PUSH2 0xF71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFAF JUMPI PUSH2 0xFAE PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFCC JUMPI PUSH2 0xFCB PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0xFD8 DUP6 DUP3 DUP7 ADD PUSH2 0xE70 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFE9 DUP6 DUP3 DUP7 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFC DUP2 PUSH2 0xD1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1015 PUSH0 DUP4 ADD DUP5 PUSH2 0xFF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102D DUP2 PUSH2 0x101B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1046 PUSH0 DUP4 ADD DUP5 PUSH2 0x1024 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105E DUP2 PUSH2 0x104C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1077 PUSH0 DUP4 ADD DUP5 PUSH2 0x1055 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1091 PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x109F DUP5 DUP3 DUP6 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10BC DUP2 PUSH2 0x10A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D5 PUSH0 DUP4 ADD DUP5 PUSH2 0x10B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10F5 JUMPI PUSH2 0x10F4 PUSH2 0xC57 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1118 PUSH2 0x1113 DUP5 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x113B JUMPI PUSH2 0x113A PUSH2 0xCFA JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1182 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1160 JUMPI PUSH2 0x115F PUSH2 0xC43 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x116D DUP10 DUP3 PUSH2 0xE70 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x113D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11A0 JUMPI PUSH2 0x119F PUSH2 0xC43 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11B0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1106 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11CF JUMPI PUSH2 0x11CE PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11EC JUMPI PUSH2 0x11EB PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0x11F8 DUP6 DUP3 DUP7 ADD PUSH2 0xDC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1219 JUMPI PUSH2 0x1218 PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0x1225 DUP6 DUP3 DUP7 ADD PUSH2 0x118C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1261 DUP2 PUSH2 0xD1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1270 DUP2 PUSH2 0x101B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x128A PUSH0 DUP6 ADD DUP3 PUSH2 0x1258 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x129D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1267 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12AE DUP4 DUP4 PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12D0 DUP3 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x12DA DUP2 DUP6 PUSH2 0x1239 JUMP JUMPDEST SWAP4 POP PUSH2 0x12E5 DUP4 PUSH2 0x1249 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1315 JUMPI DUP2 MLOAD PUSH2 0x12FC DUP9 DUP3 PUSH2 0x12A3 JUMP JUMPDEST SWAP8 POP PUSH2 0x1307 DUP4 PUSH2 0x12BA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x12E8 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x133A DUP2 DUP5 PUSH2 0x12C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x134B DUP2 PUSH2 0x101B JUMP JUMPDEST DUP2 EQ PUSH2 0x1355 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1366 DUP2 PUSH2 0x1342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1383 JUMPI PUSH2 0x1382 PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1390 DUP7 DUP3 DUP8 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13A1 DUP7 DUP3 DUP8 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13B2 DUP7 DUP3 DUP8 ADD PUSH2 0x1358 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x13FA JUMPI PUSH2 0x13F9 PUSH2 0x13BC JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x140A DUP3 PUSH2 0x13E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1419 DUP3 PUSH2 0x13FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1429 DUP2 PUSH2 0x140F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1442 PUSH0 DUP4 ADD DUP5 PUSH2 0x1420 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145E JUMPI PUSH2 0x145D PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x146B DUP6 DUP3 DUP7 ADD PUSH2 0x1358 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x148C JUMPI PUSH2 0x148B PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0x1498 DUP6 DUP3 DUP7 ADD PUSH2 0xE70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B7 JUMPI PUSH2 0x14B6 PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14C4 DUP5 DUP3 DUP6 ADD PUSH2 0x1358 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x152C DUP3 PUSH2 0x14FA JUMP JUMPDEST PUSH2 0x1536 DUP2 DUP6 PUSH2 0x1504 JUMP JUMPDEST SWAP4 POP PUSH2 0x1546 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x154F DUP2 PUSH2 0xC47 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x156D PUSH0 DUP4 ADD DUP6 PUSH2 0x1024 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x157F DUP2 DUP5 PUSH2 0x1522 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15BF DUP3 PUSH2 0x101B JUMP JUMPDEST SWAP2 POP PUSH2 0x15CA DUP4 PUSH2 0x101B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15E2 JUMPI PUSH2 0x15E1 PUSH2 0x1588 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15FB PUSH0 DUP4 ADD DUP6 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0x1608 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFF3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1618 DUP2 PUSH2 0x10A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1622 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1633 DUP2 PUSH2 0x160F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164E JUMPI PUSH2 0x164D PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x165B DUP5 DUP3 DUP6 ADD PUSH2 0x1625 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1672 DUP2 PUSH2 0xD2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x168A PUSH2 0x1685 DUP5 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x16AD JUMPI PUSH2 0x16AC PUSH2 0xCFA JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16D6 JUMPI DUP1 PUSH2 0x16C2 DUP9 DUP3 PUSH2 0x1664 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16AF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16F4 JUMPI PUSH2 0x16F3 PUSH2 0xC43 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1704 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1678 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1727 JUMPI PUSH2 0x1726 PUSH2 0xC57 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1746 DUP2 PUSH2 0x1342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x175E PUSH2 0x1759 DUP5 PUSH2 0x170D JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1781 JUMPI PUSH2 0x1780 PUSH2 0xCFA JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17AA JUMPI DUP1 PUSH2 0x1796 DUP9 DUP3 PUSH2 0x1738 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1783 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17C8 JUMPI PUSH2 0x17C7 PUSH2 0xC43 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x17D8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x174C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17EB DUP3 PUSH2 0xCFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17FB DUP2 PUSH2 0x17E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1805 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1816 DUP2 PUSH2 0x17F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1833 JUMPI PUSH2 0x1832 PUSH2 0xC3B JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1850 JUMPI PUSH2 0x184F PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0x185C DUP7 DUP3 DUP8 ADD PUSH2 0x16E0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x187D JUMPI PUSH2 0x187C PUSH2 0xC3F JUMP JUMPDEST JUMPDEST PUSH2 0x1889 DUP7 DUP3 DUP8 ADD PUSH2 0x17B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x189A DUP7 DUP3 DUP8 ADD PUSH2 0x1808 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18B7 PUSH0 DUP4 ADD DUP7 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0x18C4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x18D1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFF3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xC4 0xE5 ADDRESS JUMP PUSH31 0x7B87F67A652E44161D8493261144681370F393508B81A2E1A38964736F6C63 NUMBER STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "421:2607:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10705:325:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6785:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9429:344;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6953:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7135:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7326:108;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12395:145;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4413:75:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11367:704:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;962:169:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7566:101:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7823:146;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;604:170:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10092:220:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8816:197;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10705:325;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;10866:48:::2;10884:13;10899:5;10906:7;10866:17;:48::i;:::-;10924:42;10936:13;10951:5;10958:7;10924:11;:42::i;:::-;10976:47;10993:13;11008:5;11015:7;10976:16;:47::i;:::-;10705:325:::0;;;:::o;6785:86::-;6836:5;6860:4;6853:11;;6785:86;:::o;9429:344::-;9584:19;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;9619:40:::2;9644:5;9651:7;9619:24;:40::i;:::-;9683:34;9702:5;9709:7;9683:18;:34::i;:::-;9669:48;;9727:39;9751:5;9758:7;9727:23;:39::i;:::-;9429:344:::0;;;;:::o;6953:92::-;7006:7;7032:6;;7025:13;;6953:92;:::o;7135:100::-;7192:7;7218:10;7211:17;;7135:100;:::o;7326:108::-;7391:7;7417:10;;7410:17;;7326:108;:::o;12395:145::-;12481:4;12504:29;12522:10;12504:17;:29::i;:::-;12497:36;;12395:145;;;:::o;4413:75:5:-;4446:42;4413:75;:::o;11367:704:7:-;11521:22;11559:23;11585:13;:20;11559:46;;11741:5;:12;11722:15;:31;11718:60;;11762:16;;;;;;;;;;;;;;11718:60;11789:30;11842:15;11822:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;11789:69;;11873:9;11868:173;11888:15;11884:1;:19;11868:173;;;11933:38;11944:13;11958:1;11944:16;;;;;;;;:::i;:::-;;;;;;;;11962:5;11968:1;11962:8;;;;;;;;:::i;:::-;;;;;;;;11933:10;:38::i;:::-;11920:7;11928:1;11920:10;;;;;;;;:::i;:::-;;;;;;;:51;;;;12013:3;;;;;;;11868:173;;;;12057:7;12050:14;;;;11367:704;;;;:::o;962:169:9:-;1058:10;5954:30:7;5976:7;5954:21;:30::i;:::-;1080:44:9::1;1096:6;1104:10;1116:7;1080:15;:44::i;:::-;962:169:::0;;;;:::o;7566:101:7:-;7622:4;7645:15;:13;:15::i;:::-;7638:22;;7566:101;:::o;7823:146::-;7904:6;7929:33;7949:12;7929:19;:33::i;:::-;7922:40;;7823:146;;;:::o;604:170:9:-;697:28;717:7;697:19;:28::i;:::-;740:27;752:7;761:5;740:27;;;;;;;:::i;:::-;;;;;;;;604:170;;:::o;10092:220:7:-;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;10199:31:::2;10215:5;10222:7;10199:15;:31::i;:::-;10240:25;10250:5;10257:7;10240:9;:25::i;:::-;10275:30;10290:5;10297:7;10275:14;:30::i;:::-;10092:220:::0;;:::o;8816:197::-;5660:16;:14;:16::i;:::-;8898:34:::1;8924:7;8898:25;:34::i;:::-;8956:7;8942:10;;:21;;;;;;;:::i;:::-;;;;;;;;8973:33;8998:7;8973:24;:33::i;:::-;8816:197:::0;:::o;12814:111::-;12890:4;12868:27;;:10;:27;;;12864:54;;12904:14;;;;;;;;;;;;;;12864:54;12814:111::o;13771:105::-;13842:1;13832:6;;:11;13828:41;;13852:17;;;;;;;;;;;;;;13828:41;13771:105::o;18949:115::-;;;;:::o;2396:118:9:-;2501:6;;;;;;;;;;;;;;19320:114:7;;;;:::o;17810:90::-;;;:::o;2760:125:9:-;2846:7;2872:6;;;;;;;;;;;;;;18077:89:7;;;:::o;2642:112:9:-;2718:4;2741:6;;;;;;;;;;;;;;2891:135;2974:20;;:::i;:::-;3013:6;;;;;;;;;;;;;;13122:142:7;13199:4;:18;;;13218:6;;13226:7;13199:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13194:63;;13243:14;;;;;;;;;;;;;;13194:63;13122:142;:::o;6762:277:6:-;4446:42:5;6864:16:6;;:6;:16;;;6860:173;;6896:45;6928:3;6933:7;6896:31;:45::i;:::-;6860:173;;;6972:50;7001:6;7009:3;7014:7;6972:28;:50::i;:::-;6860:173;6762:277;;;:::o;14400:96:7:-;14456:4;14479:10;;;;;;;;;;;14472:17;;14400:96;:::o;2520:116:9:-;2598:6;2623;;;;;;;;;;;;;;8269:350:7;5660:16;:14;:16::i;:::-;8438:1:::1;8428:6;;:11;8424:45;;8448:21;;;;;;;;;;;;;;8424:45;8567:1;8556:7;:12:::0;8552:34:::1;;8577:9;;;;;;;;;;;;;;8552:34;8605:7;8596:6;:16;;;;8269:350:::0;:::o;18349:81::-;;;:::o;1337:1020:9:-;1435:7;5954:30:7;5976:7;5954:21;:30::i;:::-;1482::9::1;1514:25;1541:14;1582:5;1571:50;;;;;;;;;;;;:::i;:::-;1481:140;;;;;;1632:20;1655:13;:20;1632:43;;1747:1;1731:12;:17:::0;1727:78:::1;;1771:23;;;;;;;;;;;;;;1727:78;1892:8;:15;1876:12;:31;1872:92;;1930:23;;;;;;;;;;;;;;1872:92;2026:9;2021:330;2041:12;2037:1;:16;2021:330;;;2070:15;2088:8;2097:1;2088:11;;;;;;;;:::i;:::-;;;;;;;;2070:29;;2113:20;2136:13;2150:1;2136:16;;;;;;;;:::i;:::-;;;;;;;;2113:39;;2167:46;2183:6;2191:12;2205:7;2167:15;:46::i;:::-;2242:12;2232:49;;;2256:7;2265:6;2273:7;2232:49;;;;;;;;:::i;:::-;;;;;;;;2323:3;;;;;2056:295;;2021:330;;;;1444:913;;;;1337:1020:::0;;;:::o;18612:80:7:-;;;:::o;17365:71::-;;:::o;17562:70::-;;:::o;2455:490:8:-;2711:4;2705;2699;2693;2685:6;2681:2;2674:5;2669:47;2659:270;;2822:10;2816:4;2809:24;2910:4;2904;2897:18;2659:270;2455:490;;:::o;11454:1189::-;11617:2;11611:4;11604:16;11674:6;11668:4;11661:20;11814:34;11808:4;11801:48;12272:4;12266;12260;12254;12251:1;12244:5;12237;12232:45;12192:16;12185:24;12181:1;12174:4;12168:11;12165:18;12162:48;11890:405;11863:655;;12411:10;12405:4;12398:24;12499:4;12493;12486:18;11863:655;12625:1;12619:4;12612:15;11454:1189;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:139::-;2021:5;2059:6;2046:20;2037:29;;2075:33;2102:5;2075:33;:::i;:::-;1975:139;;;;:::o;2137:710::-;2233:5;2258:81;2274:64;2331:6;2274:64;:::i;:::-;2258:81;:::i;:::-;2249:90;;2359:5;2388:6;2381:5;2374:21;2422:4;2415:5;2411:16;2404:23;;2475:4;2467:6;2463:17;2455:6;2451:30;2504:3;2496:6;2493:15;2490:122;;;2523:79;;:::i;:::-;2490:122;2638:6;2621:220;2655:6;2650:3;2647:15;2621:220;;;2730:3;2759:37;2792:3;2780:10;2759:37;:::i;:::-;2754:3;2747:50;2826:4;2821:3;2817:14;2810:21;;2697:144;2681:4;2676:3;2672:14;2665:21;;2621:220;;;2625:21;2239:608;;2137:710;;;;;:::o;2870:370::-;2941:5;2990:3;2983:4;2975:6;2971:17;2967:27;2957:122;;2998:79;;:::i;:::-;2957:122;3115:6;3102:20;3140:94;3230:3;3222:6;3215:4;3207:6;3203:17;3140:94;:::i;:::-;3131:103;;2947:293;2870:370;;;;:::o;3246:117::-;3355:1;3352;3345:12;3369:307;3430:4;3520:18;3512:6;3509:30;3506:56;;;3542:18;;:::i;:::-;3506:56;3580:29;3602:6;3580:29;:::i;:::-;3572:37;;3664:4;3658;3654:15;3646:23;;3369:307;;;:::o;3682:148::-;3780:6;3775:3;3770;3757:30;3821:1;3812:6;3807:3;3803:16;3796:27;3682:148;;;:::o;3836:423::-;3913:5;3938:65;3954:48;3995:6;3954:48;:::i;:::-;3938:65;:::i;:::-;3929:74;;4026:6;4019:5;4012:21;4064:4;4057:5;4053:16;4102:3;4093:6;4088:3;4084:16;4081:25;4078:112;;;4109:79;;:::i;:::-;4078:112;4199:54;4246:6;4241:3;4236;4199:54;:::i;:::-;3919:340;3836:423;;;;;:::o;4278:338::-;4333:5;4382:3;4375:4;4367:6;4363:17;4359:27;4349:122;;4390:79;;:::i;:::-;4349:122;4507:6;4494:20;4532:78;4606:3;4598:6;4591:4;4583:6;4579:17;4532:78;:::i;:::-;4523:87;;4339:277;4278:338;;;;:::o;4622:1007::-;4733:6;4741;4749;4798:2;4786:9;4777:7;4773:23;4769:32;4766:119;;;4804:79;;:::i;:::-;4766:119;4952:1;4941:9;4937:17;4924:31;4982:18;4974:6;4971:30;4968:117;;;5004:79;;:::i;:::-;4968:117;5109:78;5179:7;5170:6;5159:9;5155:22;5109:78;:::i;:::-;5099:88;;4895:302;5264:2;5253:9;5249:18;5236:32;5295:18;5287:6;5284:30;5281:117;;;5317:79;;:::i;:::-;5281:117;5422:62;5476:7;5467:6;5456:9;5452:22;5422:62;:::i;:::-;5412:72;;5207:287;5533:2;5559:53;5604:7;5595:6;5584:9;5580:22;5559:53;:::i;:::-;5549:63;;5504:118;4622:1007;;;;;:::o;5635:60::-;5663:3;5684:5;5677:12;;5635:60;;;:::o;5701:142::-;5751:9;5784:53;5802:34;5811:24;5829:5;5811:24;:::i;:::-;5802:34;:::i;:::-;5784:53;:::i;:::-;5771:66;;5701:142;;;:::o;5849:126::-;5899:9;5932:37;5963:5;5932:37;:::i;:::-;5919:50;;5849:126;;;:::o;5981:139::-;6044:9;6077:37;6108:5;6077:37;:::i;:::-;6064:50;;5981:139;;;:::o;6126:157::-;6226:50;6270:5;6226:50;:::i;:::-;6221:3;6214:63;6126:157;;:::o;6289:248::-;6395:4;6433:2;6422:9;6418:18;6410:26;;6446:84;6527:1;6516:9;6512:17;6503:6;6446:84;:::i;:::-;6289:248;;;;:::o;6543:652::-;6620:6;6628;6677:2;6665:9;6656:7;6652:23;6648:32;6645:119;;;6683:79;;:::i;:::-;6645:119;6831:1;6820:9;6816:17;6803:31;6861:18;6853:6;6850:30;6847:117;;;6883:79;;:::i;:::-;6847:117;6988:62;7042:7;7033:6;7022:9;7018:22;6988:62;:::i;:::-;6978:72;;6774:286;7099:2;7125:53;7170:7;7161:6;7150:9;7146:22;7125:53;:::i;:::-;7115:63;;7070:118;6543:652;;;;;:::o;7201:118::-;7288:24;7306:5;7288:24;:::i;:::-;7283:3;7276:37;7201:118;;:::o;7325:222::-;7418:4;7456:2;7445:9;7441:18;7433:26;;7469:71;7537:1;7526:9;7522:17;7513:6;7469:71;:::i;:::-;7325:222;;;;:::o;7553:77::-;7590:7;7619:5;7608:16;;7553:77;;;:::o;7636:118::-;7723:24;7741:5;7723:24;:::i;:::-;7718:3;7711:37;7636:118;;:::o;7760:222::-;7853:4;7891:2;7880:9;7876:18;7868:26;;7904:71;7972:1;7961:9;7957:17;7948:6;7904:71;:::i;:::-;7760:222;;;;:::o;7988:77::-;8025:7;8054:5;8043:16;;7988:77;;;:::o;8071:118::-;8158:24;8176:5;8158:24;:::i;:::-;8153:3;8146:37;8071:118;;:::o;8195:222::-;8288:4;8326:2;8315:9;8311:18;8303:26;;8339:71;8407:1;8396:9;8392:17;8383:6;8339:71;:::i;:::-;8195:222;;;;:::o;8423:329::-;8482:6;8531:2;8519:9;8510:7;8506:23;8502:32;8499:119;;;8537:79;;:::i;:::-;8499:119;8657:1;8682:53;8727:7;8718:6;8707:9;8703:22;8682:53;:::i;:::-;8672:63;;8628:117;8423:329;;;;:::o;8758:90::-;8792:7;8835:5;8828:13;8821:21;8810:32;;8758:90;;;:::o;8854:109::-;8935:21;8950:5;8935:21;:::i;:::-;8930:3;8923:34;8854:109;;:::o;8969:210::-;9056:4;9094:2;9083:9;9079:18;9071:26;;9107:65;9169:1;9158:9;9154:17;9145:6;9107:65;:::i;:::-;8969:210;;;;:::o;9185:320::-;9271:4;9361:18;9353:6;9350:30;9347:56;;;9383:18;;:::i;:::-;9347:56;9433:4;9425:6;9421:17;9413:25;;9493:4;9487;9483:15;9475:23;;9185:320;;;:::o;9526:942::-;9631:5;9656:90;9672:73;9738:6;9672:73;:::i;:::-;9656:90;:::i;:::-;9647:99;;9766:5;9795:6;9788:5;9781:21;9829:4;9822:5;9818:16;9811:23;;9882:4;9874:6;9870:17;9862:6;9858:30;9911:3;9903:6;9900:15;9897:122;;;9930:79;;:::i;:::-;9897:122;10045:6;10028:434;10062:6;10057:3;10054:15;10028:434;;;10151:3;10138:17;10187:18;10174:11;10171:35;10168:122;;;10209:79;;:::i;:::-;10168:122;10333:11;10325:6;10321:24;10371:46;10413:3;10401:10;10371:46;:::i;:::-;10366:3;10359:59;10447:4;10442:3;10438:14;10431:21;;10104:358;;10088:4;10083:3;10079:14;10072:21;;10028:434;;;10032:21;9637:831;;9526:942;;;;;:::o;10489:388::-;10569:5;10618:3;10611:4;10603:6;10599:17;10595:27;10585:122;;10626:79;;:::i;:::-;10585:122;10743:6;10730:20;10768:103;10867:3;10859:6;10852:4;10844:6;10840:17;10768:103;:::i;:::-;10759:112;;10575:302;10489:388;;;;:::o;10883:912::-;11010:6;11018;11067:2;11055:9;11046:7;11042:23;11038:32;11035:119;;;11073:79;;:::i;:::-;11035:119;11221:1;11210:9;11206:17;11193:31;11251:18;11243:6;11240:30;11237:117;;;11273:79;;:::i;:::-;11237:117;11378:78;11448:7;11439:6;11428:9;11424:22;11378:78;:::i;:::-;11368:88;;11164:302;11533:2;11522:9;11518:18;11505:32;11564:18;11556:6;11553:30;11550:117;;;11586:79;;:::i;:::-;11550:117;11691:87;11770:7;11761:6;11750:9;11746:22;11691:87;:::i;:::-;11681:97;;11476:312;10883:912;;;;;:::o;11801:144::-;11898:6;11932:5;11926:12;11916:22;;11801:144;;;:::o;11951:214::-;12080:11;12114:6;12109:3;12102:19;12154:4;12149:3;12145:14;12130:29;;11951:214;;;;:::o;12171:162::-;12268:4;12291:3;12283:11;;12321:4;12316:3;12312:14;12304:22;;12171:162;;;:::o;12339:108::-;12416:24;12434:5;12416:24;:::i;:::-;12411:3;12404:37;12339:108;;:::o;12453:::-;12530:24;12548:5;12530:24;:::i;:::-;12525:3;12518:37;12453:108;;:::o;12639:521::-;12786:4;12781:3;12777:14;12885:4;12878:5;12874:16;12868:23;12904:63;12961:4;12956:3;12952:14;12938:12;12904:63;:::i;:::-;12801:176;13061:4;13054:5;13050:16;13044:23;13080:63;13137:4;13132:3;13128:14;13114:12;13080:63;:::i;:::-;12987:166;12755:405;12639:521;;:::o;13166:299::-;13295:10;13316:106;13418:3;13410:6;13316:106;:::i;:::-;13454:4;13449:3;13445:14;13431:28;;13166:299;;;;:::o;13471:143::-;13571:4;13603;13598:3;13594:14;13586:22;;13471:143;;;:::o;13696:972::-;13875:3;13904:84;13982:5;13904:84;:::i;:::-;14004:116;14113:6;14108:3;14004:116;:::i;:::-;13997:123;;14144:86;14224:5;14144:86;:::i;:::-;14253:7;14284:1;14269:374;14294:6;14291:1;14288:13;14269:374;;;14370:6;14364:13;14397:123;14516:3;14501:13;14397:123;:::i;:::-;14390:130;;14543:90;14626:6;14543:90;:::i;:::-;14533:100;;14329:314;14316:1;14313;14309:9;14304:14;;14269:374;;;14273:14;14659:3;14652:10;;13880:788;;;13696:972;;;;:::o;14674:493::-;14877:4;14915:2;14904:9;14900:18;14892:26;;14964:9;14958:4;14954:20;14950:1;14939:9;14935:17;14928:47;14992:168;15155:4;15146:6;14992:168;:::i;:::-;14984:176;;14674:493;;;;:::o;15173:122::-;15246:24;15264:5;15246:24;:::i;:::-;15239:5;15236:35;15226:63;;15285:1;15282;15275:12;15226:63;15173:122;:::o;15301:139::-;15347:5;15385:6;15372:20;15363:29;;15401:33;15428:5;15401:33;:::i;:::-;15301:139;;;;:::o;15446:619::-;15523:6;15531;15539;15588:2;15576:9;15567:7;15563:23;15559:32;15556:119;;;15594:79;;:::i;:::-;15556:119;15714:1;15739:53;15784:7;15775:6;15764:9;15760:22;15739:53;:::i;:::-;15729:63;;15685:117;15841:2;15867:53;15912:7;15903:6;15892:9;15888:22;15867:53;:::i;:::-;15857:63;;15812:118;15969:2;15995:53;16040:7;16031:6;16020:9;16016:22;15995:53;:::i;:::-;15985:63;;15940:118;15446:619;;;;;:::o;16071:180::-;16119:77;16116:1;16109:88;16216:4;16213:1;16206:15;16240:4;16237:1;16230:15;16257:115;16340:1;16333:5;16330:12;16320:46;;16346:18;;:::i;:::-;16320:46;16257:115;:::o;16378:131::-;16425:7;16454:5;16443:16;;16460:43;16497:5;16460:43;:::i;:::-;16378:131;;;:::o;16515:::-;16573:9;16606:34;16634:5;16606:34;:::i;:::-;16593:47;;16515:131;;;:::o;16652:147::-;16747:45;16786:5;16747:45;:::i;:::-;16742:3;16735:58;16652:147;;:::o;16805:238::-;16906:4;16944:2;16933:9;16929:18;16921:26;;16957:79;17033:1;17022:9;17018:17;17009:6;16957:79;:::i;:::-;16805:238;;;;:::o;17049:652::-;17126:6;17134;17183:2;17171:9;17162:7;17158:23;17154:32;17151:119;;;17189:79;;:::i;:::-;17151:119;17309:1;17334:53;17379:7;17370:6;17359:9;17355:22;17334:53;:::i;:::-;17324:63;;17280:117;17464:2;17453:9;17449:18;17436:32;17495:18;17487:6;17484:30;17481:117;;;17517:79;;:::i;:::-;17481:117;17622:62;17676:7;17667:6;17656:9;17652:22;17622:62;:::i;:::-;17612:72;;17407:287;17049:652;;;;;:::o;17707:329::-;17766:6;17815:2;17803:9;17794:7;17790:23;17786:32;17783:119;;;17821:79;;:::i;:::-;17783:119;17941:1;17966:53;18011:7;18002:6;17991:9;17987:22;17966:53;:::i;:::-;17956:63;;17912:117;17707:329;;;;:::o;18042:180::-;18090:77;18087:1;18080:88;18187:4;18184:1;18177:15;18211:4;18208:1;18201:15;18228:98;18279:6;18313:5;18307:12;18297:22;;18228:98;;;:::o;18332:168::-;18415:11;18449:6;18444:3;18437:19;18489:4;18484:3;18480:14;18465:29;;18332:168;;;;:::o;18506:139::-;18595:6;18590:3;18585;18579:23;18636:1;18627:6;18622:3;18618:16;18611:27;18506:139;;;:::o;18651:373::-;18737:3;18765:38;18797:5;18765:38;:::i;:::-;18819:70;18882:6;18877:3;18819:70;:::i;:::-;18812:77;;18898:65;18956:6;18951:3;18944:4;18937:5;18933:16;18898:65;:::i;:::-;18988:29;19010:6;18988:29;:::i;:::-;18983:3;18979:39;18972:46;;18741:283;18651:373;;;;:::o;19030:419::-;19169:4;19207:2;19196:9;19192:18;19184:26;;19220:71;19288:1;19277:9;19273:17;19264:6;19220:71;:::i;:::-;19338:9;19332:4;19328:20;19323:2;19312:9;19308:18;19301:48;19366:76;19437:4;19428:6;19366:76;:::i;:::-;19358:84;;19030:419;;;;;:::o;19455:180::-;19503:77;19500:1;19493:88;19600:4;19597:1;19590:15;19624:4;19621:1;19614:15;19641:191;19681:3;19700:20;19718:1;19700:20;:::i;:::-;19695:25;;19734:20;19752:1;19734:20;:::i;:::-;19729:25;;19777:1;19774;19770:9;19763:16;;19798:3;19795:1;19792:10;19789:36;;;19805:18;;:::i;:::-;19789:36;19641:191;;;;:::o;19838:332::-;19959:4;19997:2;19986:9;19982:18;19974:26;;20010:71;20078:1;20067:9;20063:17;20054:6;20010:71;:::i;:::-;20091:72;20159:2;20148:9;20144:18;20135:6;20091:72;:::i;:::-;19838:332;;;;;:::o;20176:116::-;20246:21;20261:5;20246:21;:::i;:::-;20239:5;20236:32;20226:60;;20282:1;20279;20272:12;20226:60;20176:116;:::o;20298:137::-;20352:5;20383:6;20377:13;20368:22;;20399:30;20423:5;20399:30;:::i;:::-;20298:137;;;;:::o;20441:345::-;20508:6;20557:2;20545:9;20536:7;20532:23;20528:32;20525:119;;;20563:79;;:::i;:::-;20525:119;20683:1;20708:61;20761:7;20752:6;20741:9;20737:22;20708:61;:::i;:::-;20698:71;;20654:125;20441:345;;;;:::o;20792:143::-;20849:5;20880:6;20874:13;20865:22;;20896:33;20923:5;20896:33;:::i;:::-;20792:143;;;;:::o;20958:732::-;21065:5;21090:81;21106:64;21163:6;21106:64;:::i;:::-;21090:81;:::i;:::-;21081:90;;21191:5;21220:6;21213:5;21206:21;21254:4;21247:5;21243:16;21236:23;;21307:4;21299:6;21295:17;21287:6;21283:30;21336:3;21328:6;21325:15;21322:122;;;21355:79;;:::i;:::-;21322:122;21470:6;21453:231;21487:6;21482:3;21479:15;21453:231;;;21562:3;21591:48;21635:3;21623:10;21591:48;:::i;:::-;21586:3;21579:61;21669:4;21664:3;21660:14;21653:21;;21529:155;21513:4;21508:3;21504:14;21497:21;;21453:231;;;21457:21;21071:619;;20958:732;;;;;:::o;21713:385::-;21795:5;21844:3;21837:4;21829:6;21825:17;21821:27;21811:122;;21852:79;;:::i;:::-;21811:122;21962:6;21956:13;21987:105;22088:3;22080:6;22073:4;22065:6;22061:17;21987:105;:::i;:::-;21978:114;;21801:297;21713:385;;;;:::o;22104:311::-;22181:4;22271:18;22263:6;22260:30;22257:56;;;22293:18;;:::i;:::-;22257:56;22343:4;22335:6;22331:17;22323:25;;22403:4;22397;22393:15;22385:23;;22104:311;;;:::o;22421:143::-;22478:5;22509:6;22503:13;22494:22;;22525:33;22552:5;22525:33;:::i;:::-;22421:143;;;;:::o;22587:732::-;22694:5;22719:81;22735:64;22792:6;22735:64;:::i;:::-;22719:81;:::i;:::-;22710:90;;22820:5;22849:6;22842:5;22835:21;22883:4;22876:5;22872:16;22865:23;;22936:4;22928:6;22924:17;22916:6;22912:30;22965:3;22957:6;22954:15;22951:122;;;22984:79;;:::i;:::-;22951:122;23099:6;23082:231;23116:6;23111:3;23108:15;23082:231;;;23191:3;23220:48;23264:3;23252:10;23220:48;:::i;:::-;23215:3;23208:61;23298:4;23293:3;23289:14;23282:21;;23158:155;23142:4;23137:3;23133:14;23126:21;;23082:231;;;23086:21;22700:619;;22587:732;;;;;:::o;23342:385::-;23424:5;23473:3;23466:4;23458:6;23454:17;23450:27;23440:122;;23481:79;;:::i;:::-;23440:122;23591:6;23585:13;23616:105;23717:3;23709:6;23702:4;23694:6;23690:17;23616:105;:::i;:::-;23607:114;;23430:297;23342:385;;;;:::o;23733:104::-;23778:7;23807:24;23825:5;23807:24;:::i;:::-;23796:35;;23733:104;;;:::o;23843:138::-;23924:32;23950:5;23924:32;:::i;:::-;23917:5;23914:43;23904:71;;23971:1;23968;23961:12;23904:71;23843:138;:::o;23987:159::-;24052:5;24083:6;24077:13;24068:22;;24099:41;24134:5;24099:41;:::i;:::-;23987:159;;;;:::o;24152:1085::-;24298:6;24306;24314;24363:2;24351:9;24342:7;24338:23;24334:32;24331:119;;;24369:79;;:::i;:::-;24331:119;24510:1;24499:9;24495:17;24489:24;24540:18;24532:6;24529:30;24526:117;;;24562:79;;:::i;:::-;24526:117;24667:89;24748:7;24739:6;24728:9;24724:22;24667:89;:::i;:::-;24657:99;;24460:306;24826:2;24815:9;24811:18;24805:25;24857:18;24849:6;24846:30;24843:117;;;24879:79;;:::i;:::-;24843:117;24984:89;25065:7;25056:6;25045:9;25041:22;24984:89;:::i;:::-;24974:99;;24776:307;25122:2;25148:72;25212:7;25203:6;25192:9;25188:22;25148:72;:::i;:::-;25138:82;;25093:137;24152:1085;;;;;:::o;25243:442::-;25392:4;25430:2;25419:9;25415:18;25407:26;;25443:71;25511:1;25500:9;25496:17;25487:6;25443:71;:::i;:::-;25524:72;25592:2;25581:9;25577:18;25568:6;25524:72;:::i;:::-;25606;25674:2;25663:9;25659:18;25650:6;25606:72;:::i;:::-;25243:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1283000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"NATIVE()": "396",
								"allocate(bytes,address)": "infinite",
								"distribute(address[],bytes,address)": "infinite",
								"getAllo()": "infinite",
								"getPayouts(address[],bytes[])": "infinite",
								"getPoolAmount()": "2499",
								"getPoolId()": "2455",
								"getRecipientStatus(address)": "527",
								"getStrategyId()": "infinite",
								"increasePoolAmount(uint256)": "infinite",
								"initialize(uint256,bytes)": "infinite",
								"isPoolActive()": "2595",
								"isValidAllocator(address)": "594",
								"registerRecipient(bytes,address)": "infinite",
								"withdraw(address,address,uint256)": "infinite"
							},
							"internal": {
								"_allocate(bytes memory,address)": "infinite",
								"_distribute(address[] memory,bytes memory,address)": "infinite",
								"_getPayout(address,bytes memory)": "infinite",
								"_getRecipientStatus(address)": "infinite",
								"_isValidAllocator(address)": "infinite",
								"_registerRecipient(bytes memory,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 421,
									"end": 3028,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 598,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 598,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 598,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 598,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 521,
									"end": 598,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 521,
									"end": 598,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 521,
									"end": 598,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 521,
									"end": 598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 521,
									"end": 598,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 582,
									"end": 587,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 589,
									"end": 594,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5281,
									"end": 5286,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5331,
									"end": 5336,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5320,
									"end": 5337,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5310,
									"end": 5338,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5310,
									"end": 5338,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5310,
									"end": 5338,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5310,
									"end": 5338,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5310,
									"end": 5338,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5310,
									"end": 5338,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 5297,
									"end": 5338,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 5297,
									"end": 5338,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5297,
									"end": 5338,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5297,
									"end": 5338,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5297,
									"end": 5338,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5297,
									"end": 5338,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 521,
									"end": 598,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 521,
									"end": 598,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1091,
									"end": 1193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1468,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1609,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1385,
									"end": 1666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1733,
									"end": 1753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1959,
									"end": 1977,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1951,
									"end": 1957,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1948,
									"end": 1978,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1981,
									"end": 1999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2019,
									"end": 2048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2097,
									"end": 2101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2093,
									"end": 2108,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1807,
									"end": 2115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2210,
									"end": 2216,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2205,
									"end": 2208,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2200,
									"end": 2203,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2194,
									"end": 2217,
									"name": "MCOPY",
									"source": 10
								},
								{
									"begin": 2251,
									"end": 2252,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2242,
									"end": 2248,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2237,
									"end": 2240,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2233,
									"end": 2249,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2253,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2121,
									"end": 2260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2355,
									"end": 2360,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2438,
									"end": 2444,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2396,
									"end": 2445,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2380,
									"end": 2446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2371,
									"end": 2446,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2371,
									"end": 2446,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2469,
									"end": 2475,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2462,
									"end": 2467,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2455,
									"end": 2476,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2507,
									"end": 2511,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2500,
									"end": 2505,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2496,
									"end": 2512,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2545,
									"end": 2548,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2536,
									"end": 2542,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2534,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2527,
									"end": 2543,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2524,
									"end": 2549,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 2552,
									"end": 2631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2687,
									"end": 2693,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2682,
									"end": 2685,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 2680,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 2642,
									"end": 2694,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2361,
									"end": 2700,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2787,
									"end": 2792,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2836,
									"end": 2839,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2829,
									"end": 2833,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2821,
									"end": 2827,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2817,
									"end": 2834,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2813,
									"end": 2840,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 2844,
									"end": 2923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2948,
									"end": 2961,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 3065,
									"end": 3068,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3057,
									"end": 3063,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3050,
									"end": 3054,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3042,
									"end": 3048,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3038,
									"end": 3055,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 2979,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2970,
									"end": 3069,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2970,
									"end": 3069,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2793,
									"end": 3075,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2720,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 3761,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 3761,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3170,
									"end": 3176,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3178,
									"end": 3184,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3227,
									"end": 3229,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3215,
									"end": 3224,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3206,
									"end": 3213,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3202,
									"end": 3225,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3198,
									"end": 3230,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 3195,
									"end": 3314,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3195,
									"end": 3314,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3195,
									"end": 3314,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3233,
									"end": 3312,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 3233,
									"end": 3312,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 3233,
									"end": 3312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3233,
									"end": 3312,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 3233,
									"end": 3312,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3195,
									"end": 3314,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3195,
									"end": 3314,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3353,
									"end": 3354,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3378,
									"end": 3442,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 3434,
									"end": 3441,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3425,
									"end": 3431,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3414,
									"end": 3423,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3410,
									"end": 3432,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3378,
									"end": 3442,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 3378,
									"end": 3442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3378,
									"end": 3442,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 3378,
									"end": 3442,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3368,
									"end": 3442,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3368,
									"end": 3442,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3324,
									"end": 3452,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3512,
									"end": 3514,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3501,
									"end": 3510,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3515,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3491,
									"end": 3516,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3561,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3535,
									"end": 3541,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3532,
									"end": 3562,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3529,
									"end": 3646,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3529,
									"end": 3646,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3529,
									"end": 3646,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3565,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 3565,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 3565,
									"end": 3644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3565,
									"end": 3644,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 3565,
									"end": 3644,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3529,
									"end": 3646,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3529,
									"end": 3646,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3670,
									"end": 3744,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 3736,
									"end": 3743,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3727,
									"end": 3733,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3716,
									"end": 3725,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3712,
									"end": 3734,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3670,
									"end": 3744,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 3670,
									"end": 3744,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3670,
									"end": 3744,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 3670,
									"end": 3744,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3660,
									"end": 3744,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3660,
									"end": 3744,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3462,
									"end": 3754,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 3761,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 3761,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 3761,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 3761,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 3761,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 3761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3767,
									"end": 3866,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 3767,
									"end": 3866,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3819,
									"end": 3825,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3853,
									"end": 3858,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3847,
									"end": 3859,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3837,
									"end": 3859,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3837,
									"end": 3859,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3767,
									"end": 3866,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3767,
									"end": 3866,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3767,
									"end": 3866,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3767,
									"end": 3866,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3872,
									"end": 4041,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 3872,
									"end": 4041,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3956,
									"end": 3967,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3990,
									"end": 3996,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3985,
									"end": 3988,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3978,
									"end": 3997,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4030,
									"end": 4034,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4025,
									"end": 4028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4021,
									"end": 4035,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4006,
									"end": 4035,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4006,
									"end": 4035,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3872,
									"end": 4041,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3872,
									"end": 4041,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3872,
									"end": 4041,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3872,
									"end": 4041,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3872,
									"end": 4041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4047,
									"end": 4424,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 4047,
									"end": 4424,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4135,
									"end": 4138,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4163,
									"end": 4202,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 4196,
									"end": 4201,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4163,
									"end": 4202,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4163,
									"end": 4202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4163,
									"end": 4202,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 4163,
									"end": 4202,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4218,
									"end": 4289,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 4282,
									"end": 4288,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4277,
									"end": 4280,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4218,
									"end": 4289,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 4218,
									"end": 4289,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4218,
									"end": 4289,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 4218,
									"end": 4289,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4211,
									"end": 4289,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4211,
									"end": 4289,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4298,
									"end": 4363,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 4356,
									"end": 4362,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4351,
									"end": 4354,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4344,
									"end": 4348,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4337,
									"end": 4342,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4333,
									"end": 4349,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4298,
									"end": 4363,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 4298,
									"end": 4363,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4298,
									"end": 4363,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 4298,
									"end": 4363,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4388,
									"end": 4417,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 4410,
									"end": 4416,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4388,
									"end": 4417,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4388,
									"end": 4417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4388,
									"end": 4417,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 4388,
									"end": 4417,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4383,
									"end": 4386,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4379,
									"end": 4418,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4418,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4418,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4139,
									"end": 4424,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4047,
									"end": 4424,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4047,
									"end": 4424,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4047,
									"end": 4424,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4047,
									"end": 4424,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4047,
									"end": 4424,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4430,
									"end": 4743,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4430,
									"end": 4743,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4543,
									"end": 4547,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4581,
									"end": 4583,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4570,
									"end": 4579,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4566,
									"end": 4584,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4558,
									"end": 4584,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4558,
									"end": 4584,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4630,
									"end": 4639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4624,
									"end": 4628,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4620,
									"end": 4640,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4616,
									"end": 4617,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4605,
									"end": 4614,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4601,
									"end": 4618,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4594,
									"end": 4641,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4658,
									"end": 4736,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 4731,
									"end": 4735,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4722,
									"end": 4728,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4658,
									"end": 4736,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 4658,
									"end": 4736,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4658,
									"end": 4736,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 4658,
									"end": 4736,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4650,
									"end": 4736,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4650,
									"end": 4736,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4430,
									"end": 4743,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4430,
									"end": 4743,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4430,
									"end": 4743,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4430,
									"end": 4743,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4430,
									"end": 4743,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "1064"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "1062"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 421,
									"end": 3028,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122012c4e530567e7b87f67a652e44161d8493261144681370f393508b81a2e1a38964736f6c634300081b0033",
									".code": [
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "A0CF0AEA"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "EB11AF93"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "EB11AF93"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "EDD146CC"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "EF2920FC"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "F5B0DFB7"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "A0CF0AEA"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "B2B878D0"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "D9CAED12"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "DF868ED3"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "38FFF2D0"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "38FFF2D0"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "42FDA9C7"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "4AB4BA42"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "4D31D087"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "A6F0EE9"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "15CC481E"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "2BBE0CAE"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 3028,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 10705,
											"end": 11030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 10705,
											"end": 11030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 6785,
											"end": 6871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 6785,
											"end": 6871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 9429,
											"end": 9773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 9429,
											"end": 9773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 9429,
											"end": 9773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 6953,
											"end": 7045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 6953,
											"end": 7045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 7135,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 7135,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 7326,
											"end": 7434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 7326,
											"end": 7434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 12395,
											"end": 12540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 12395,
											"end": 12540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 12395,
											"end": 12540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4413,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 4413,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 11367,
											"end": 12071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 11367,
											"end": 12071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 11367,
											"end": 12071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 962,
											"end": 1131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 962,
											"end": 1131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 7566,
											"end": 7667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 7566,
											"end": 7667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 7823,
											"end": 7969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 7823,
											"end": 7969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 7823,
											"end": 7969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 604,
											"end": 774,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 604,
											"end": 774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 604,
											"end": 774,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 774,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 604,
											"end": 774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 604,
											"end": 774,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 774,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 604,
											"end": 774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 604,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 604,
											"end": 774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 604,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 604,
											"end": 774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 10092,
											"end": 10312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 10092,
											"end": 10312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 8816,
											"end": 9013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 8816,
											"end": 9013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5660,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 5660,
											"end": 5676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 6532,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 6532,
											"end": 6555,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10866,
											"end": 10914,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 10884,
											"end": 10897,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10899,
											"end": 10904,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10906,
											"end": 10913,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10866,
											"end": 10883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 10866,
											"end": 10914,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10866,
											"end": 10914,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 10866,
											"end": 10914,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 10966,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 10936,
											"end": 10949,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10951,
											"end": 10956,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10958,
											"end": 10965,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 10935,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 10924,
											"end": 10966,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 10966,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 10924,
											"end": 10966,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10976,
											"end": 11023,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 10993,
											"end": 11006,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11008,
											"end": 11013,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11015,
											"end": 11022,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10976,
											"end": 10992,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 10976,
											"end": 11023,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10976,
											"end": 11023,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 10976,
											"end": 11023,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6836,
											"end": 6841,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6860,
											"end": 6864,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1062"
										},
										{
											"begin": 6853,
											"end": 6864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6853,
											"end": 6864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9584,
											"end": 9603,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 5660,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 5660,
											"end": 5676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 6532,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 6532,
											"end": 6555,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9619,
											"end": 9659,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 9644,
											"end": 9649,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9651,
											"end": 9658,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9619,
											"end": 9643,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 9619,
											"end": 9659,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9619,
											"end": 9659,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 9619,
											"end": 9659,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9683,
											"end": 9717,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 9702,
											"end": 9707,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9709,
											"end": 9716,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9683,
											"end": 9701,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 9683,
											"end": 9717,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9683,
											"end": 9717,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 9683,
											"end": 9717,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9717,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9717,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9727,
											"end": 9766,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 9751,
											"end": 9756,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9758,
											"end": 9765,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9727,
											"end": 9750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 9727,
											"end": 9766,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9727,
											"end": 9766,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 9727,
											"end": 9766,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7006,
											"end": 7013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7038,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7032,
											"end": 7038,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7228,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1064"
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7391,
											"end": 7398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7417,
											"end": 7427,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7417,
											"end": 7427,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12481,
											"end": 12485,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12504,
											"end": 12533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 12522,
											"end": 12532,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12504,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 12504,
											"end": 12533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12504,
											"end": 12533,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 12504,
											"end": 12533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12497,
											"end": 12533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12497,
											"end": 12533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 4413,
											"end": 4488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11521,
											"end": 11543,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11585,
											"end": 11598,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11585,
											"end": 11605,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11559,
											"end": 11605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11559,
											"end": 11605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11741,
											"end": 11746,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11741,
											"end": 11753,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 11737,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 11753,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11718,
											"end": 11778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 11718,
											"end": 11778,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "PUSH",
											"source": 7,
											"value": "7B49805600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11718,
											"end": 11778,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 11718,
											"end": 11778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11789,
											"end": 11819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11842,
											"end": 11857,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 11822,
											"end": 11858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 11822,
											"end": 11858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11789,
											"end": 11858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11789,
											"end": 11858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11873,
											"end": 11882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11888,
											"end": 11903,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11884,
											"end": 11885,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11884,
											"end": 11903,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11933,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 11944,
											"end": 11957,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11958,
											"end": 11959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 11944,
											"end": 11960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11967,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11968,
											"end": 11969,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 11962,
											"end": 11970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11933,
											"end": 11943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 11933,
											"end": 11971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11933,
											"end": 11971,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 11933,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11928,
											"end": 11929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 11920,
											"end": 11930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11971,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11971,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11971,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12057,
											"end": 12064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12050,
											"end": 12064,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12050,
											"end": 12064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12050,
											"end": 12064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12050,
											"end": 12064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1058,
											"end": 1068,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5976,
											"end": 5983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 5954,
											"end": 5984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1096,
											"end": 1102,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1114,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1123,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1080,
											"end": 1124,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1124,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1080,
											"end": 1124,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7645,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 7645,
											"end": 7660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7904,
											"end": 7910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7929,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 7949,
											"end": 7961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7929,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7929,
											"end": 7962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7929,
											"end": 7962,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 7929,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7922,
											"end": 7962,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7922,
											"end": 7962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 604,
											"end": 774,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 604,
											"end": 774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 717,
											"end": 724,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 697,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 697,
											"end": 725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 697,
											"end": 725,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 740,
											"end": 767,
											"name": "PUSH",
											"source": 9,
											"value": "91EFA3D50FECCDE0D0D202F8AE5C41CA0B2BE614CEBCB2BD2F4B019396E6568A"
										},
										{
											"begin": 752,
											"end": 759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 761,
											"end": 766,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 740,
											"end": 767,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 767,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 740,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 740,
											"end": 767,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 740,
											"end": 767,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 740,
											"end": 767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 740,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 740,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 740,
											"end": 767,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 740,
											"end": 767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 740,
											"end": 767,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 767,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 740,
											"end": 767,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 740,
											"end": 767,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 740,
											"end": 767,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 740,
											"end": 767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 740,
											"end": 767,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 604,
											"end": 774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 5660,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 5660,
											"end": 5676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 6532,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 6532,
											"end": 6555,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10199,
											"end": 10230,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 10215,
											"end": 10220,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10222,
											"end": 10229,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10199,
											"end": 10214,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 10199,
											"end": 10230,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10199,
											"end": 10230,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 10199,
											"end": 10230,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10240,
											"end": 10265,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 10250,
											"end": 10255,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10257,
											"end": 10264,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10240,
											"end": 10249,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 10240,
											"end": 10265,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10240,
											"end": 10265,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 10240,
											"end": 10265,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10305,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 10290,
											"end": 10295,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10297,
											"end": 10304,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10289,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 10275,
											"end": 10305,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10305,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 10275,
											"end": 10305,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 5660,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 5660,
											"end": 5676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 8924,
											"end": 8931,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 8898,
											"end": 8932,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8932,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 8898,
											"end": 8932,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8956,
											"end": 8963,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8942,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 8942,
											"end": 8963,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8973,
											"end": 9006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 8998,
											"end": 9005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8973,
											"end": 8997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 8973,
											"end": 9006,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8973,
											"end": 9006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 8973,
											"end": 9006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12814,
											"end": 12925,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 12814,
											"end": 12925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12890,
											"end": 12894,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1062"
										},
										{
											"begin": 12868,
											"end": 12895,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12868,
											"end": 12895,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12868,
											"end": 12878,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 12868,
											"end": 12895,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12868,
											"end": 12895,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12868,
											"end": 12895,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 12864,
											"end": 12918,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "PUSH",
											"source": 7,
											"value": "75FD2B100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 12918,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 12864,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12814,
											"end": 12925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13771,
											"end": 13876,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 13771,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13842,
											"end": 13843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13832,
											"end": 13838,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13832,
											"end": 13838,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13832,
											"end": 13843,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13828,
											"end": 13869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 13828,
											"end": 13869,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "PUSH",
											"source": 7,
											"value": "3DA3F98C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13828,
											"end": 13869,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 13828,
											"end": 13869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13771,
											"end": 13876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 19064,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 18949,
											"end": 19064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 19064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 19064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 19064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 19064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2514,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2396,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH",
											"source": 9,
											"value": "1569426800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 19320,
											"end": 19434,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 19320,
											"end": 19434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19320,
											"end": 19434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19320,
											"end": 19434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19320,
											"end": 19434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19320,
											"end": 19434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17810,
											"end": 17900,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 17810,
											"end": 17900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17810,
											"end": 17900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17810,
											"end": 17900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17810,
											"end": 17900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2760,
											"end": 2885,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2760,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "PUSH",
											"source": 9,
											"value": "1569426800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 18077,
											"end": 18166,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 18077,
											"end": 18166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18077,
											"end": 18166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18077,
											"end": 18166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18077,
											"end": 18166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2754,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2642,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2722,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "PUSH",
											"source": 9,
											"value": "1569426800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 3026,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2891,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2974,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2974,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2974,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2974,
											"end": 2994,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2974,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "PUSH",
											"source": 9,
											"value": "1569426800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13122,
											"end": 13264,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 13122,
											"end": 13264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13203,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1062"
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "PUSH",
											"source": 7,
											"value": "29E40D4B"
										},
										{
											"begin": 13218,
											"end": 13224,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13218,
											"end": 13224,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13226,
											"end": 13233,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 13199,
											"end": 13234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 13199,
											"end": 13234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13194,
											"end": 13257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 13194,
											"end": 13257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "PUSH",
											"source": 7,
											"value": "75FD2B100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13194,
											"end": 13257,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 13194,
											"end": 13257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13122,
											"end": 13264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13122,
											"end": 13264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 7039,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6762,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 6864,
											"end": 6880,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6864,
											"end": 6880,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6864,
											"end": 6870,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6864,
											"end": 6880,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6864,
											"end": 6880,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6864,
											"end": 6880,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6860,
											"end": 7033,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6928,
											"end": 6931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6940,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6896,
											"end": 6941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6941,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6896,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6860,
											"end": 7033,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 7033,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6860,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 7001,
											"end": 7007,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7009,
											"end": 7012,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7014,
											"end": 7021,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 6972,
											"end": 7022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 7022,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 6972,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 7033,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6860,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 7039,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 7039,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 7039,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 7039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14400,
											"end": 14496,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 14400,
											"end": 14496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14456,
											"end": 14460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14472,
											"end": 14489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14472,
											"end": 14489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14400,
											"end": 14496,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14400,
											"end": 14496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2520,
											"end": 2636,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2520,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "1569426800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8269,
											"end": 8619,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 8269,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5660,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 5660,
											"end": 5676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8438,
											"end": 8439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8428,
											"end": 8434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8428,
											"end": 8434,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8439,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8424,
											"end": 8469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 8424,
											"end": 8469,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "439A74C900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8424,
											"end": 8469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 8424,
											"end": 8469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8567,
											"end": 8568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8556,
											"end": 8563,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8556,
											"end": 8568,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8552,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 8552,
											"end": 8586,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7FCCE2A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8552,
											"end": 8586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 8552,
											"end": 8586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8605,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8596,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18349,
											"end": 18430,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 18349,
											"end": 18430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18349,
											"end": 18430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18349,
											"end": 18430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18349,
											"end": 18430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 2357,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1337,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5976,
											"end": 5983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 5954,
											"end": 5984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1482,
											"end": 1512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1587,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1621,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1571,
											"end": 1621,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1621,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1621,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1571,
											"end": 1621,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1571,
											"end": 1621,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1571,
											"end": 1621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1481,
											"end": 1621,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1481,
											"end": 1621,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1481,
											"end": 1621,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1481,
											"end": 1621,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1481,
											"end": 1621,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1481,
											"end": 1621,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1668,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1675,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1747,
											"end": 1748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1743,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1748,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1727,
											"end": 1805,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1794,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FB76571500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1771,
											"end": 1794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1771,
											"end": 1794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1794,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1794,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1794,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1794,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1794,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1727,
											"end": 1805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1900,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1907,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1888,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1907,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1964,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1872,
											"end": 1964,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1953,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FB76571500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1930,
											"end": 1953,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1953,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1930,
											"end": 1953,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1953,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1953,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1953,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1953,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1953,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1953,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1964,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1872,
											"end": 1964,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2351,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2021,
											"end": 2351,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2053,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2038,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2053,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2351,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2351,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2021,
											"end": 2351,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2096,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2098,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2088,
											"end": 2099,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2099,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2149,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2151,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2136,
											"end": 2152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2152,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 2183,
											"end": 2189,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2203,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2205,
											"end": 2212,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2167,
											"end": 2213,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 2167,
											"end": 2213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "463FFC2CF8B1596445C417388ED30E53EB67CF6668CB2BE7F0ADDF8A78C8441B"
										},
										{
											"begin": 2256,
											"end": 2263,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2273,
											"end": 2280,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2232,
											"end": 2281,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2281,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2326,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2323,
											"end": 2326,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2326,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2056,
											"end": 2351,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2056,
											"end": 2351,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2351,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2021,
											"end": 2351,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2351,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2021,
											"end": 2351,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2351,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1444,
											"end": 2357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1444,
											"end": 2357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1444,
											"end": 2357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1444,
											"end": 2357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1337,
											"end": 2357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1337,
											"end": 2357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1337,
											"end": 2357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1337,
											"end": 2357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18612,
											"end": 18692,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 18612,
											"end": 18692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18612,
											"end": 18692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18612,
											"end": 18692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18612,
											"end": 18692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17365,
											"end": 17436,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 17365,
											"end": 17436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17365,
											"end": 17436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17365,
											"end": 17436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17562,
											"end": 17632,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 17562,
											"end": 17632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17562,
											"end": 17632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17562,
											"end": 17632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2945,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2455,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2703,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2697,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2681,
											"end": 2683,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2679,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2716,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2659,
											"end": 2929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "PUSH",
											"source": 8,
											"value": "B12D13EB"
										},
										{
											"begin": 2816,
											"end": 2820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2833,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2914,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 2897,
											"end": 2915,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2929,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2659,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11454,
											"end": 12643,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 11454,
											"end": 12643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11617,
											"end": 11619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11611,
											"end": 11615,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 11604,
											"end": 11620,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11674,
											"end": 11680,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11668,
											"end": 11672,
											"name": "PUSH",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 11661,
											"end": 11681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11814,
											"end": 11848,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB000000000000000000000000"
										},
										{
											"begin": 11808,
											"end": 11812,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11801,
											"end": 11849,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12272,
											"end": 12276,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12266,
											"end": 12270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12260,
											"end": 12264,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12254,
											"end": 12258,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 12251,
											"end": 12252,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12244,
											"end": 12249,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12237,
											"end": 12242,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 12232,
											"end": 12277,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 12192,
											"end": 12208,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12209,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12181,
											"end": 12182,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12174,
											"end": 12178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12168,
											"end": 12179,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12210,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11890,
											"end": 12295,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 12518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 11863,
											"end": 12518,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12411,
											"end": 12421,
											"name": "PUSH",
											"source": 8,
											"value": "90B8EC18"
										},
										{
											"begin": 12405,
											"end": 12409,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12398,
											"end": 12422,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12503,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12493,
											"end": 12497,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 12486,
											"end": 12504,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 12518,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 11863,
											"end": 12518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12625,
											"end": 12626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12619,
											"end": 12623,
											"name": "PUSH",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 12612,
											"end": 12627,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11454,
											"end": 12643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11454,
											"end": 12643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11454,
											"end": 12643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11454,
											"end": 12643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "138"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 457,
											"end": 559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 498,
											"end": 504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 551,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 545,
											"end": 552,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 533,
											"end": 538,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 529,
											"end": 543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 525,
											"end": 553,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 515,
											"end": 553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 565,
											"end": 745,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 565,
											"end": 745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 613,
											"end": 690,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 710,
											"end": 714,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 707,
											"end": 708,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 700,
											"end": 715,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 734,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 739,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 834,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 856,
											"end": 860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 834,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 834,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 834,
											"end": 861,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 834,
											"end": 861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 826,
											"end": 832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 822,
											"end": 862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 952,
											"end": 962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 949,
											"end": 971,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 928,
											"end": 946,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 916,
											"end": 926,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 913,
											"end": 947,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 910,
											"end": 972,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 907,
											"end": 995,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 907,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 907,
											"end": 995,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 975,
											"end": 993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 975,
											"end": 993,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 907,
											"end": 995,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 907,
											"end": 995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1015,
											"end": 1025,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1013,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 794,
											"end": 1032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1099,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1089,
											"end": 1119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1089,
											"end": 1119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 1156,
											"end": 1160,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1148,
											"end": 1154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1128,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1359,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1362,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1404,
											"end": 1410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1400,
											"end": 1417,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1392,
											"end": 1417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1392,
											"end": 1417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1454,
											"end": 1477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1454,
											"end": 1477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1607,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1490,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1599,
											"end": 1600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1657,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1690,
											"end": 1732,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1782,
											"end": 1789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1829,
											"end": 1834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1811,
											"end": 1835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1847,
											"end": 1969,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1847,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 1938,
											"end": 1943,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1920,
											"end": 1944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 1945,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1959,
											"end": 1960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1961,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1847,
											"end": 1969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1847,
											"end": 1969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2065,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2037,
											"end": 2066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2037,
											"end": 2066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 2102,
											"end": 2107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2075,
											"end": 2108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 2274,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2331,
											"end": 2337,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2274,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2338,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2274,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2258,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2258,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2258,
											"end": 2339,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 2258,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2249,
											"end": 2339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2249,
											"end": 2339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2394,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2420,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2411,
											"end": 2427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2480,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2461,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2451,
											"end": 2481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2507,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2496,
											"end": 2502,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2493,
											"end": 2508,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 2523,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2523,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2602,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 2523,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2638,
											"end": 2644,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2650,
											"end": 2653,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2662,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2733,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 2792,
											"end": 2795,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2759,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2747,
											"end": 2797,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2830,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2824,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2817,
											"end": 2831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2831,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2681,
											"end": 2685,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2676,
											"end": 2679,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2983,
											"end": 2987,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2975,
											"end": 2981,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2971,
											"end": 2988,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 2994,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2957,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 2957,
											"end": 3079,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 2998,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2998,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3077,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 2998,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2957,
											"end": 3079,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 2957,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3122,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3230,
											"end": 3233,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3213,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3220,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3140,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3234,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3140,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3234,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3234,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2947,
											"end": 3240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3363,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3246,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3355,
											"end": 3356,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3676,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3369,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3430,
											"end": 3434,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3538,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3512,
											"end": 3518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3539,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 3562,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 3506,
											"end": 3562,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3542,
											"end": 3560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 3562,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 3506,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 3580,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3664,
											"end": 3668,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3658,
											"end": 3662,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3654,
											"end": 3669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3646,
											"end": 3669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3646,
											"end": 3669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3676,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3676,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3676,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3830,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3682,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3780,
											"end": 3786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3775,
											"end": 3778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3773,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3757,
											"end": 3787,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 3821,
											"end": 3822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3818,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3810,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3819,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3796,
											"end": 3823,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 4259,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3836,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3913,
											"end": 3918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 3954,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 3995,
											"end": 4001,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3954,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3954,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3954,
											"end": 4002,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 3954,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3938,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3938,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3938,
											"end": 4003,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 3938,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3929,
											"end": 4003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3929,
											"end": 4003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4032,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4019,
											"end": 4024,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4012,
											"end": 4033,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4068,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4057,
											"end": 4062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4069,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4105,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4091,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4084,
											"end": 4100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4106,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4078,
											"end": 4190,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4078,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 4078,
											"end": 4190,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4109,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4109,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4188,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4109,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4078,
											"end": 4190,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 4078,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4246,
											"end": 4252,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4239,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4199,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4253,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4199,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 4259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 4259,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 4259,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 4259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 4259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 4259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4616,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 4278,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4333,
											"end": 4338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4379,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4367,
											"end": 4373,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4363,
											"end": 4380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4359,
											"end": 4386,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4349,
											"end": 4471,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4390,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 4390,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 4390,
											"end": 4469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4390,
											"end": 4469,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 4390,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4471,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4349,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4513,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4606,
											"end": 4609,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4604,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4591,
											"end": 4595,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4583,
											"end": 4589,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4579,
											"end": 4596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 4532,
											"end": 4610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4610,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4532,
											"end": 4610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4523,
											"end": 4610,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4523,
											"end": 4610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4339,
											"end": 4616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4616,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 5629,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 4622,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4798,
											"end": 4800,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4786,
											"end": 4795,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4777,
											"end": 4784,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4796,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4801,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4885,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4766,
											"end": 4885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 4804,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 4804,
											"end": 4883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 4883,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 4804,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4885,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4766,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4952,
											"end": 4953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4950,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4937,
											"end": 4954,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4982,
											"end": 5000,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4974,
											"end": 4980,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4971,
											"end": 5001,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4968,
											"end": 5085,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4968,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 4968,
											"end": 5085,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 5004,
											"end": 5083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4968,
											"end": 5085,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 4968,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5109,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 5179,
											"end": 5186,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5170,
											"end": 5176,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5159,
											"end": 5168,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5155,
											"end": 5177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5109,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 5109,
											"end": 5187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5109,
											"end": 5187,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 5109,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5187,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5266,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5253,
											"end": 5262,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5236,
											"end": 5268,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5314,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5398,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 5281,
											"end": 5398,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5317,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 5317,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 5317,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5317,
											"end": 5396,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 5317,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5398,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 5281,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5422,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 5476,
											"end": 5483,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5467,
											"end": 5473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5474,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5422,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 5422,
											"end": 5484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5422,
											"end": 5484,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 5422,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5412,
											"end": 5484,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5412,
											"end": 5484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5533,
											"end": 5535,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5584,
											"end": 5593,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5580,
											"end": 5602,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 5559,
											"end": 5612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5612,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 5629,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 5629,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 5629,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 5629,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 5629,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 5629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5635,
											"end": 5695,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5635,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5663,
											"end": 5666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5677,
											"end": 5689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5677,
											"end": 5689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5635,
											"end": 5695,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5635,
											"end": 5695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5635,
											"end": 5695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5635,
											"end": 5695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5843,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5701,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5751,
											"end": 5760,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 5802,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 5811,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 5829,
											"end": 5834,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5811,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 5811,
											"end": 5835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5811,
											"end": 5835,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 5811,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5802,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5802,
											"end": 5836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5802,
											"end": 5836,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 5802,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5784,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 5784,
											"end": 5837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5784,
											"end": 5837,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 5784,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5771,
											"end": 5837,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5771,
											"end": 5837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5843,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5849,
											"end": 5975,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 5849,
											"end": 5975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5908,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5932,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 5963,
											"end": 5968,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5932,
											"end": 5969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5969,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 5932,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5919,
											"end": 5969,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5919,
											"end": 5969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5849,
											"end": 5975,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5849,
											"end": 5975,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5849,
											"end": 5975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5849,
											"end": 5975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5981,
											"end": 6120,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 5981,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6044,
											"end": 6053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 6108,
											"end": 6113,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 6077,
											"end": 6114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6114,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 6077,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6064,
											"end": 6114,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6064,
											"end": 6114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5981,
											"end": 6120,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5981,
											"end": 6120,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5981,
											"end": 6120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5981,
											"end": 6120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6283,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 6126,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6226,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 6270,
											"end": 6275,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6226,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 6226,
											"end": 6276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6226,
											"end": 6276,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 6226,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6224,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6214,
											"end": 6277,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6283,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6283,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6537,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 6289,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6395,
											"end": 6399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6435,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6422,
											"end": 6431,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6436,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6410,
											"end": 6436,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6410,
											"end": 6436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6446,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 6527,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6525,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6509,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6446,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 6446,
											"end": 6530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6446,
											"end": 6530,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 6446,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6537,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6537,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 7195,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 6543,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6620,
											"end": 6626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6677,
											"end": 6679,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6665,
											"end": 6674,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 6663,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6675,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6648,
											"end": 6680,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6645,
											"end": 6764,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6645,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 6645,
											"end": 6764,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6683,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 6683,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 6683,
											"end": 6762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6683,
											"end": 6762,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 6683,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6645,
											"end": 6764,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 6645,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6831,
											"end": 6832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6820,
											"end": 6829,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6816,
											"end": 6833,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6803,
											"end": 6834,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6853,
											"end": 6859,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 6880,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6847,
											"end": 6964,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6847,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 6847,
											"end": 6964,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6883,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 6883,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 6883,
											"end": 6962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6883,
											"end": 6962,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 6883,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6847,
											"end": 6964,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 6847,
											"end": 6964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6988,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 7042,
											"end": 7049,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7033,
											"end": 7039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7031,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7018,
											"end": 7040,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6988,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 6988,
											"end": 7050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6988,
											"end": 7050,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 6988,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6978,
											"end": 7050,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6978,
											"end": 7050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 7060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7099,
											"end": 7101,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7125,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 7170,
											"end": 7177,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7167,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7150,
											"end": 7159,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7146,
											"end": 7168,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7125,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 7125,
											"end": 7178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7125,
											"end": 7178,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 7125,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 7195,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 7195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 7195,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 7195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 7195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 7195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7201,
											"end": 7319,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 7201,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 7306,
											"end": 7311,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 7288,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7312,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 7288,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7283,
											"end": 7286,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7313,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7201,
											"end": 7319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7201,
											"end": 7319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7201,
											"end": 7319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7547,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 7325,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7418,
											"end": 7422,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7456,
											"end": 7458,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7445,
											"end": 7454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7433,
											"end": 7459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7433,
											"end": 7459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7469,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 7537,
											"end": 7538,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7526,
											"end": 7535,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7539,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7513,
											"end": 7519,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7469,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 7469,
											"end": 7540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7469,
											"end": 7540,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 7469,
											"end": 7540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7547,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7547,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7630,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7553,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7590,
											"end": 7597,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7619,
											"end": 7624,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7630,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7636,
											"end": 7754,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 7636,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7723,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7741,
											"end": 7746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7723,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7723,
											"end": 7747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7723,
											"end": 7747,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7723,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7718,
											"end": 7721,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7711,
											"end": 7748,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7636,
											"end": 7754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7636,
											"end": 7754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7636,
											"end": 7754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7760,
											"end": 7982,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 7760,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7853,
											"end": 7857,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7891,
											"end": 7893,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7880,
											"end": 7889,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7876,
											"end": 7894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7904,
											"end": 7975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 7972,
											"end": 7973,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 7974,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7948,
											"end": 7954,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7904,
											"end": 7975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 7904,
											"end": 7975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7904,
											"end": 7975,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 7904,
											"end": 7975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7760,
											"end": 7982,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7760,
											"end": 7982,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7760,
											"end": 7982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7760,
											"end": 7982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7760,
											"end": 7982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 8065,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 7988,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8025,
											"end": 8032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8059,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8043,
											"end": 8059,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8043,
											"end": 8059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 8065,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 8065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 8065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 8065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8071,
											"end": 8189,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 8071,
											"end": 8189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8158,
											"end": 8182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 8176,
											"end": 8181,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8158,
											"end": 8182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 8158,
											"end": 8182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8158,
											"end": 8182,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 8158,
											"end": 8182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8153,
											"end": 8156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8146,
											"end": 8183,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8071,
											"end": 8189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8071,
											"end": 8189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8071,
											"end": 8189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8195,
											"end": 8417,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 8195,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8288,
											"end": 8292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8326,
											"end": 8328,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8315,
											"end": 8324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8311,
											"end": 8329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8303,
											"end": 8329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8303,
											"end": 8329,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8339,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 8407,
											"end": 8408,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8396,
											"end": 8405,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8383,
											"end": 8389,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8339,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 8339,
											"end": 8410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8339,
											"end": 8410,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 8339,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8195,
											"end": 8417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8195,
											"end": 8417,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8195,
											"end": 8417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8195,
											"end": 8417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8195,
											"end": 8417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8752,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 8423,
											"end": 8752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8482,
											"end": 8488,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8533,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8519,
											"end": 8528,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8510,
											"end": 8517,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8506,
											"end": 8529,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8502,
											"end": 8534,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8499,
											"end": 8618,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8499,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 8499,
											"end": 8618,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8537,
											"end": 8616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8537,
											"end": 8616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 8537,
											"end": 8616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8537,
											"end": 8616,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8537,
											"end": 8616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8499,
											"end": 8618,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 8499,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8657,
											"end": 8658,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8682,
											"end": 8735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 8727,
											"end": 8734,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8718,
											"end": 8724,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8707,
											"end": 8716,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8703,
											"end": 8725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8682,
											"end": 8735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 8682,
											"end": 8735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8682,
											"end": 8735,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 8682,
											"end": 8735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8735,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8628,
											"end": 8745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8848,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 8758,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8792,
											"end": 8799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8828,
											"end": 8841,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8821,
											"end": 8842,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8842,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8848,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8854,
											"end": 8963,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 8854,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8935,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 8950,
											"end": 8955,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8935,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 8935,
											"end": 8956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8935,
											"end": 8956,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 8935,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8930,
											"end": 8933,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8923,
											"end": 8957,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8854,
											"end": 8963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8854,
											"end": 8963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8854,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8969,
											"end": 9179,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 8969,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9056,
											"end": 9060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9094,
											"end": 9096,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9083,
											"end": 9092,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9079,
											"end": 9097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9071,
											"end": 9097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9071,
											"end": 9097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9107,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 9169,
											"end": 9170,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9158,
											"end": 9167,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9154,
											"end": 9171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9107,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 9107,
											"end": 9172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9107,
											"end": 9172,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 9107,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8969,
											"end": 9179,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8969,
											"end": 9179,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8969,
											"end": 9179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8969,
											"end": 9179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8969,
											"end": 9179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9185,
											"end": 9505,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 9185,
											"end": 9505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9271,
											"end": 9275,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9361,
											"end": 9379,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9353,
											"end": 9359,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9350,
											"end": 9380,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9347,
											"end": 9403,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9347,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 9347,
											"end": 9403,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 9383,
											"end": 9401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9347,
											"end": 9403,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 9347,
											"end": 9403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9433,
											"end": 9437,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9425,
											"end": 9431,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9421,
											"end": 9438,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9493,
											"end": 9497,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9491,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9483,
											"end": 9498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9475,
											"end": 9498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9475,
											"end": 9498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9185,
											"end": 9505,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9185,
											"end": 9505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9185,
											"end": 9505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9185,
											"end": 9505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 10468,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 9526,
											"end": 10468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9631,
											"end": 9636,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9656,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 9672,
											"end": 9745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9672,
											"end": 9745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 9672,
											"end": 9745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9672,
											"end": 9745,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9672,
											"end": 9745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 9656,
											"end": 9746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9746,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 9656,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9647,
											"end": 9746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9647,
											"end": 9746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9766,
											"end": 9771,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9795,
											"end": 9801,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9788,
											"end": 9793,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9781,
											"end": 9802,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9829,
											"end": 9833,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9822,
											"end": 9827,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9818,
											"end": 9834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9811,
											"end": 9834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9811,
											"end": 9834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9882,
											"end": 9886,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9874,
											"end": 9880,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9870,
											"end": 9887,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9868,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9858,
											"end": 9888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9911,
											"end": 9914,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9903,
											"end": 9909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9900,
											"end": 9915,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9897,
											"end": 10019,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9897,
											"end": 10019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 9897,
											"end": 10019,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9930,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 9930,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 9930,
											"end": 10009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9930,
											"end": 10009,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 9930,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9897,
											"end": 10019,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 9897,
											"end": 10019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10045,
											"end": 10051,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10028,
											"end": 10462,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 10028,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10062,
											"end": 10068,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10057,
											"end": 10060,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10054,
											"end": 10069,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10028,
											"end": 10462,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10028,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 10028,
											"end": 10462,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10151,
											"end": 10154,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10155,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10187,
											"end": 10205,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10174,
											"end": 10185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10171,
											"end": 10206,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10168,
											"end": 10290,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10168,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 10168,
											"end": 10290,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10209,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10209,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 10209,
											"end": 10288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10209,
											"end": 10288,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10209,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10168,
											"end": 10290,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 10168,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10333,
											"end": 10344,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10325,
											"end": 10331,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 10345,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10371,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 10413,
											"end": 10416,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 10401,
											"end": 10411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10371,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 10371,
											"end": 10417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10371,
											"end": 10417,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 10371,
											"end": 10417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10366,
											"end": 10369,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10359,
											"end": 10418,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10447,
											"end": 10451,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10442,
											"end": 10445,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10438,
											"end": 10452,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 10452,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 10452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10088,
											"end": 10092,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10086,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10072,
											"end": 10093,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10072,
											"end": 10093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10028,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 10028,
											"end": 10462,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10028,
											"end": 10462,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 10028,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10032,
											"end": 10053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9637,
											"end": 10468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9637,
											"end": 10468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 10468,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 10468,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 10468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 10468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 10468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 10468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10489,
											"end": 10877,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 10489,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10569,
											"end": 10574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10618,
											"end": 10621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10611,
											"end": 10615,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 10603,
											"end": 10609,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10622,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10585,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 10585,
											"end": 10707,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10626,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 10626,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 10626,
											"end": 10705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10626,
											"end": 10705,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 10626,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10585,
											"end": 10707,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 10585,
											"end": 10707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10743,
											"end": 10749,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10730,
											"end": 10750,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10768,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10867,
											"end": 10870,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10859,
											"end": 10865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10852,
											"end": 10856,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10844,
											"end": 10850,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10840,
											"end": 10857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10768,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 10768,
											"end": 10871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10768,
											"end": 10871,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10768,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10759,
											"end": 10871,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10759,
											"end": 10871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10575,
											"end": 10877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10489,
											"end": 10877,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10489,
											"end": 10877,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10489,
											"end": 10877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10489,
											"end": 10877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10489,
											"end": 10877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10883,
											"end": 11795,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 10883,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11010,
											"end": 11016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11018,
											"end": 11024,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11067,
											"end": 11069,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11055,
											"end": 11064,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11046,
											"end": 11053,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11042,
											"end": 11065,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11038,
											"end": 11070,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11035,
											"end": 11154,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11035,
											"end": 11154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 11035,
											"end": 11154,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11073,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 11073,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 11073,
											"end": 11152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11073,
											"end": 11152,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 11073,
											"end": 11152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11035,
											"end": 11154,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 11035,
											"end": 11154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11221,
											"end": 11222,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11210,
											"end": 11219,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11206,
											"end": 11223,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11193,
											"end": 11224,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 11251,
											"end": 11269,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11243,
											"end": 11249,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11240,
											"end": 11270,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11237,
											"end": 11354,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11237,
											"end": 11354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 11237,
											"end": 11354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11273,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 11273,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 11273,
											"end": 11352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11273,
											"end": 11352,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 11273,
											"end": 11352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11237,
											"end": 11354,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 11237,
											"end": 11354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11378,
											"end": 11456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 11448,
											"end": 11455,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11439,
											"end": 11445,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11428,
											"end": 11437,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11424,
											"end": 11446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11378,
											"end": 11456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 11378,
											"end": 11456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11378,
											"end": 11456,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 11378,
											"end": 11456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11456,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11164,
											"end": 11466,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11533,
											"end": 11535,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11522,
											"end": 11531,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11518,
											"end": 11536,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11505,
											"end": 11537,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 11564,
											"end": 11582,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11556,
											"end": 11562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11553,
											"end": 11583,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11550,
											"end": 11667,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11550,
											"end": 11667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 11550,
											"end": 11667,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11586,
											"end": 11665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 11586,
											"end": 11665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 11586,
											"end": 11665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11586,
											"end": 11665,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 11586,
											"end": 11665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11550,
											"end": 11667,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 11550,
											"end": 11667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11691,
											"end": 11778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 11770,
											"end": 11777,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11761,
											"end": 11767,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11750,
											"end": 11759,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11746,
											"end": 11768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11691,
											"end": 11778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 11691,
											"end": 11778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11691,
											"end": 11778,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 11691,
											"end": 11778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11681,
											"end": 11778,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11681,
											"end": 11778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11476,
											"end": 11788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10883,
											"end": 11795,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10883,
											"end": 11795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10883,
											"end": 11795,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10883,
											"end": 11795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10883,
											"end": 11795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10883,
											"end": 11795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11801,
											"end": 11945,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 11801,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11898,
											"end": 11904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11932,
											"end": 11937,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11926,
											"end": 11938,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11916,
											"end": 11938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11916,
											"end": 11938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11801,
											"end": 11945,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11801,
											"end": 11945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11801,
											"end": 11945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11801,
											"end": 11945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11951,
											"end": 12165,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 11951,
											"end": 12165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12080,
											"end": 12091,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12114,
											"end": 12120,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12109,
											"end": 12112,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12102,
											"end": 12121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12154,
											"end": 12158,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12149,
											"end": 12152,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12145,
											"end": 12159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12130,
											"end": 12159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12130,
											"end": 12159,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11951,
											"end": 12165,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11951,
											"end": 12165,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11951,
											"end": 12165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11951,
											"end": 12165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11951,
											"end": 12165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12171,
											"end": 12333,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 12171,
											"end": 12333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12268,
											"end": 12272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12291,
											"end": 12294,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12283,
											"end": 12294,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12283,
											"end": 12294,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12321,
											"end": 12325,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12316,
											"end": 12319,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12312,
											"end": 12326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12304,
											"end": 12326,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12304,
											"end": 12326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12171,
											"end": 12333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12171,
											"end": 12333,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12171,
											"end": 12333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12171,
											"end": 12333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12339,
											"end": 12447,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 12339,
											"end": 12447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12416,
											"end": 12440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 12434,
											"end": 12439,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12416,
											"end": 12440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 12416,
											"end": 12440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12416,
											"end": 12440,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 12416,
											"end": 12440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12411,
											"end": 12414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12404,
											"end": 12441,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12339,
											"end": 12447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12339,
											"end": 12447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12339,
											"end": 12447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12453,
											"end": 12561,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 12453,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 12548,
											"end": 12553,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 12530,
											"end": 12554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12554,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 12530,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12525,
											"end": 12528,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12518,
											"end": 12555,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12453,
											"end": 12561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12453,
											"end": 12561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12453,
											"end": 12561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12639,
											"end": 13160,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 12639,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12786,
											"end": 12790,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12781,
											"end": 12784,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12777,
											"end": 12791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12885,
											"end": 12889,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12878,
											"end": 12883,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12874,
											"end": 12890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12868,
											"end": 12891,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12904,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 12961,
											"end": 12965,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12956,
											"end": 12959,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12966,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12938,
											"end": 12950,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12904,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 12904,
											"end": 12967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12904,
											"end": 12967,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 12904,
											"end": 12967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12801,
											"end": 12977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13061,
											"end": 13065,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13054,
											"end": 13059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13050,
											"end": 13066,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13044,
											"end": 13067,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13080,
											"end": 13143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 13137,
											"end": 13141,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13132,
											"end": 13135,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13128,
											"end": 13142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13114,
											"end": 13126,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13080,
											"end": 13143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 13080,
											"end": 13143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13080,
											"end": 13143,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 13080,
											"end": 13143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12987,
											"end": 13153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12755,
											"end": 13160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12639,
											"end": 13160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12639,
											"end": 13160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12639,
											"end": 13160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13465,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 13166,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13305,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13316,
											"end": 13422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 13418,
											"end": 13421,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13410,
											"end": 13416,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13316,
											"end": 13422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 13316,
											"end": 13422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13316,
											"end": 13422,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 13316,
											"end": 13422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13454,
											"end": 13458,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13449,
											"end": 13452,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13445,
											"end": 13459,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13431,
											"end": 13459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13431,
											"end": 13459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13465,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13465,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13471,
											"end": 13614,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 13471,
											"end": 13614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13571,
											"end": 13575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13603,
											"end": 13607,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13598,
											"end": 13601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13594,
											"end": 13608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13586,
											"end": 13608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13586,
											"end": 13608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13471,
											"end": 13614,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13471,
											"end": 13614,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13471,
											"end": 13614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13471,
											"end": 13614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13696,
											"end": 14668,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 13696,
											"end": 14668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13875,
											"end": 13878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13904,
											"end": 13988,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 13982,
											"end": 13987,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13904,
											"end": 13988,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 13904,
											"end": 13988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13904,
											"end": 13988,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 13904,
											"end": 13988,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14004,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 14113,
											"end": 14119,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14108,
											"end": 14111,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14004,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 14004,
											"end": 14120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14004,
											"end": 14120,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 14004,
											"end": 14120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13997,
											"end": 14120,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13997,
											"end": 14120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14144,
											"end": 14230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 14224,
											"end": 14229,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14144,
											"end": 14230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 14144,
											"end": 14230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14144,
											"end": 14230,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 14144,
											"end": 14230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14253,
											"end": 14260,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14284,
											"end": 14285,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14269,
											"end": 14643,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 14269,
											"end": 14643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14294,
											"end": 14300,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14291,
											"end": 14292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14288,
											"end": 14301,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14269,
											"end": 14643,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14269,
											"end": 14643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 14269,
											"end": 14643,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14370,
											"end": 14376,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14364,
											"end": 14377,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14397,
											"end": 14520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 14516,
											"end": 14519,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 14501,
											"end": 14514,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14397,
											"end": 14520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 14397,
											"end": 14520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14397,
											"end": 14520,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 14397,
											"end": 14520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14520,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14543,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 14626,
											"end": 14632,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14543,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 14543,
											"end": 14633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14543,
											"end": 14633,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 14543,
											"end": 14633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14633,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14329,
											"end": 14643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14316,
											"end": 14317,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14313,
											"end": 14314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14309,
											"end": 14318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14304,
											"end": 14318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14304,
											"end": 14318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14269,
											"end": 14643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 14269,
											"end": 14643,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14269,
											"end": 14643,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 14269,
											"end": 14643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14273,
											"end": 14287,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14659,
											"end": 14662,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14652,
											"end": 14662,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14652,
											"end": 14662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13880,
											"end": 14668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13880,
											"end": 14668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13880,
											"end": 14668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13696,
											"end": 14668,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13696,
											"end": 14668,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13696,
											"end": 14668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13696,
											"end": 14668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13696,
											"end": 14668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14674,
											"end": 15167,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 14674,
											"end": 15167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14877,
											"end": 14881,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14915,
											"end": 14917,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14904,
											"end": 14913,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14900,
											"end": 14918,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14964,
											"end": 14973,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14958,
											"end": 14962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14954,
											"end": 14974,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14950,
											"end": 14951,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14939,
											"end": 14948,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14935,
											"end": 14952,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14928,
											"end": 14975,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14992,
											"end": 15160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 15155,
											"end": 15159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15146,
											"end": 15152,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14992,
											"end": 15160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14992,
											"end": 15160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14992,
											"end": 15160,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 14992,
											"end": 15160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14984,
											"end": 15160,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14984,
											"end": 15160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14674,
											"end": 15167,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14674,
											"end": 15167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14674,
											"end": 15167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14674,
											"end": 15167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14674,
											"end": 15167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15173,
											"end": 15295,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 15173,
											"end": 15295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15246,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 15264,
											"end": 15269,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15246,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 15246,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15246,
											"end": 15270,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 15246,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15239,
											"end": 15244,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15236,
											"end": 15271,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 15226,
											"end": 15289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 15226,
											"end": 15289,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15285,
											"end": 15286,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15282,
											"end": 15283,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15275,
											"end": 15287,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15226,
											"end": 15289,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 15226,
											"end": 15289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15173,
											"end": 15295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15173,
											"end": 15295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15440,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 15301,
											"end": 15440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15347,
											"end": 15352,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15385,
											"end": 15391,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15372,
											"end": 15392,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 15363,
											"end": 15392,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15363,
											"end": 15392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15401,
											"end": 15434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 15428,
											"end": 15433,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15401,
											"end": 15434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 15401,
											"end": 15434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15401,
											"end": 15434,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 15401,
											"end": 15434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15446,
											"end": 16065,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 15446,
											"end": 16065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15523,
											"end": 15529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15531,
											"end": 15537,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15539,
											"end": 15545,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15588,
											"end": 15590,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15576,
											"end": 15585,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15567,
											"end": 15574,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15563,
											"end": 15586,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15559,
											"end": 15591,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 15556,
											"end": 15675,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15556,
											"end": 15675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 15556,
											"end": 15675,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15594,
											"end": 15673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 15594,
											"end": 15673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 15594,
											"end": 15673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15594,
											"end": 15673,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 15594,
											"end": 15673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15556,
											"end": 15675,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 15556,
											"end": 15675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15714,
											"end": 15715,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15739,
											"end": 15792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 15784,
											"end": 15791,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15775,
											"end": 15781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15764,
											"end": 15773,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15760,
											"end": 15782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15739,
											"end": 15792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 15739,
											"end": 15792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15739,
											"end": 15792,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 15739,
											"end": 15792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15729,
											"end": 15792,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15729,
											"end": 15792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15685,
											"end": 15802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15841,
											"end": 15843,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15867,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 15912,
											"end": 15919,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15903,
											"end": 15909,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15892,
											"end": 15901,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15888,
											"end": 15910,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15867,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 15867,
											"end": 15920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15867,
											"end": 15920,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 15867,
											"end": 15920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15857,
											"end": 15920,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15857,
											"end": 15920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15812,
											"end": 15930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15969,
											"end": 15971,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15995,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 16040,
											"end": 16047,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16031,
											"end": 16037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16020,
											"end": 16029,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 16016,
											"end": 16038,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15995,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 15995,
											"end": 16048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15995,
											"end": 16048,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 15995,
											"end": 16048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 16048,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 16048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15940,
											"end": 16058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15446,
											"end": 16065,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15446,
											"end": 16065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15446,
											"end": 16065,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15446,
											"end": 16065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15446,
											"end": 16065,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15446,
											"end": 16065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16071,
											"end": 16251,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 16071,
											"end": 16251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16119,
											"end": 16196,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16116,
											"end": 16117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16109,
											"end": 16197,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16216,
											"end": 16220,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 16213,
											"end": 16214,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16206,
											"end": 16221,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16240,
											"end": 16244,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16237,
											"end": 16238,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16230,
											"end": 16245,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16257,
											"end": 16372,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 16257,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16340,
											"end": 16341,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 16333,
											"end": 16338,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16330,
											"end": 16342,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 16320,
											"end": 16366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 16320,
											"end": 16366,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16346,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 16346,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 16346,
											"end": 16364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16346,
											"end": 16364,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 16346,
											"end": 16364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16320,
											"end": 16366,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 16320,
											"end": 16366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16257,
											"end": 16372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16257,
											"end": 16372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16378,
											"end": 16509,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 16378,
											"end": 16509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16425,
											"end": 16432,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16454,
											"end": 16459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16443,
											"end": 16459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16443,
											"end": 16459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16460,
											"end": 16503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 16497,
											"end": 16502,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16460,
											"end": 16503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 16460,
											"end": 16503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16460,
											"end": 16503,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 16460,
											"end": 16503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16378,
											"end": 16509,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16378,
											"end": 16509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16378,
											"end": 16509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16378,
											"end": 16509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16515,
											"end": 16646,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 16515,
											"end": 16646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16573,
											"end": 16582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16606,
											"end": 16640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 16634,
											"end": 16639,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16606,
											"end": 16640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 16606,
											"end": 16640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16606,
											"end": 16640,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 16606,
											"end": 16640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16593,
											"end": 16640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16593,
											"end": 16640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16515,
											"end": 16646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16515,
											"end": 16646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16515,
											"end": 16646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16515,
											"end": 16646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16652,
											"end": 16799,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 16652,
											"end": 16799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16747,
											"end": 16792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 16786,
											"end": 16791,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16747,
											"end": 16792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 16747,
											"end": 16792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16747,
											"end": 16792,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 16747,
											"end": 16792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16742,
											"end": 16745,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16735,
											"end": 16793,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16652,
											"end": 16799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16652,
											"end": 16799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16652,
											"end": 16799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16805,
											"end": 17043,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 16805,
											"end": 17043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16906,
											"end": 16910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16944,
											"end": 16946,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16933,
											"end": 16942,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16929,
											"end": 16947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16921,
											"end": 16947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16921,
											"end": 16947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16957,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 17033,
											"end": 17034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17022,
											"end": 17031,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17018,
											"end": 17035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17009,
											"end": 17015,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16957,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 16957,
											"end": 17036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16957,
											"end": 17036,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 16957,
											"end": 17036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16805,
											"end": 17043,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16805,
											"end": 17043,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16805,
											"end": 17043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16805,
											"end": 17043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16805,
											"end": 17043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17049,
											"end": 17701,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 17049,
											"end": 17701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17126,
											"end": 17132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17134,
											"end": 17140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17183,
											"end": 17185,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17171,
											"end": 17180,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17162,
											"end": 17169,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17158,
											"end": 17181,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17154,
											"end": 17186,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 17151,
											"end": 17270,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17151,
											"end": 17270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 17151,
											"end": 17270,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17189,
											"end": 17268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 17189,
											"end": 17268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 17189,
											"end": 17268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17189,
											"end": 17268,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 17189,
											"end": 17268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17151,
											"end": 17270,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 17151,
											"end": 17270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17309,
											"end": 17310,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17334,
											"end": 17387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 17379,
											"end": 17386,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17370,
											"end": 17376,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17359,
											"end": 17368,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 17355,
											"end": 17377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17334,
											"end": 17387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 17334,
											"end": 17387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17334,
											"end": 17387,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 17334,
											"end": 17387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17324,
											"end": 17387,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17324,
											"end": 17387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17280,
											"end": 17397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17464,
											"end": 17466,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17453,
											"end": 17462,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17449,
											"end": 17467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17436,
											"end": 17468,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 17495,
											"end": 17513,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17487,
											"end": 17493,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17484,
											"end": 17514,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17481,
											"end": 17598,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17481,
											"end": 17598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 17481,
											"end": 17598,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17517,
											"end": 17596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 17517,
											"end": 17596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 17517,
											"end": 17596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17517,
											"end": 17596,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 17517,
											"end": 17596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17481,
											"end": 17598,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 17481,
											"end": 17598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17622,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 17676,
											"end": 17683,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17656,
											"end": 17665,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 17652,
											"end": 17674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17622,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 17622,
											"end": 17684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17622,
											"end": 17684,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 17622,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17612,
											"end": 17684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17612,
											"end": 17684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17407,
											"end": 17694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17049,
											"end": 17701,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17049,
											"end": 17701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17049,
											"end": 17701,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17049,
											"end": 17701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17049,
											"end": 17701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17049,
											"end": 17701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17707,
											"end": 18036,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 17707,
											"end": 18036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17766,
											"end": 17772,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17815,
											"end": 17817,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17803,
											"end": 17812,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17794,
											"end": 17801,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17790,
											"end": 17813,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17786,
											"end": 17818,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 17783,
											"end": 17902,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17783,
											"end": 17902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 17783,
											"end": 17902,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17821,
											"end": 17900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 17821,
											"end": 17900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 17821,
											"end": 17900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17821,
											"end": 17900,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 17821,
											"end": 17900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17783,
											"end": 17902,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 17783,
											"end": 17902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17941,
											"end": 17942,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17966,
											"end": 18019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 18011,
											"end": 18018,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18002,
											"end": 18008,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17991,
											"end": 18000,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17987,
											"end": 18009,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17966,
											"end": 18019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 17966,
											"end": 18019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17966,
											"end": 18019,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 17966,
											"end": 18019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17956,
											"end": 18019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17956,
											"end": 18019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17912,
											"end": 18029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17707,
											"end": 18036,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17707,
											"end": 18036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17707,
											"end": 18036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17707,
											"end": 18036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17707,
											"end": 18036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18042,
											"end": 18222,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 18042,
											"end": 18222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18090,
											"end": 18167,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18087,
											"end": 18088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18080,
											"end": 18168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18187,
											"end": 18191,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 18184,
											"end": 18185,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18177,
											"end": 18192,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18211,
											"end": 18215,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18208,
											"end": 18209,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18201,
											"end": 18216,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18326,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 18228,
											"end": 18326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18279,
											"end": 18285,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18313,
											"end": 18318,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18307,
											"end": 18319,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 18297,
											"end": 18319,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18297,
											"end": 18319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18326,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18326,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18332,
											"end": 18500,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 18332,
											"end": 18500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18415,
											"end": 18426,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18449,
											"end": 18455,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18444,
											"end": 18447,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18437,
											"end": 18456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18489,
											"end": 18493,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18484,
											"end": 18487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18480,
											"end": 18494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18465,
											"end": 18494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18465,
											"end": 18494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18332,
											"end": 18500,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18332,
											"end": 18500,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18332,
											"end": 18500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18332,
											"end": 18500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18332,
											"end": 18500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18506,
											"end": 18645,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 18506,
											"end": 18645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18595,
											"end": 18601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18590,
											"end": 18593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18585,
											"end": 18588,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18579,
											"end": 18602,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 18636,
											"end": 18637,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18627,
											"end": 18633,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18622,
											"end": 18625,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18618,
											"end": 18634,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18611,
											"end": 18638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18506,
											"end": 18645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18506,
											"end": 18645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18506,
											"end": 18645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18506,
											"end": 18645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18651,
											"end": 19024,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 18651,
											"end": 19024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18737,
											"end": 18740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18765,
											"end": 18803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 18797,
											"end": 18802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18765,
											"end": 18803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 18765,
											"end": 18803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18765,
											"end": 18803,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 18765,
											"end": 18803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18819,
											"end": 18889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 18882,
											"end": 18888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18877,
											"end": 18880,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18819,
											"end": 18889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 18819,
											"end": 18889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18819,
											"end": 18889,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 18819,
											"end": 18889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18812,
											"end": 18889,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 18812,
											"end": 18889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18898,
											"end": 18963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 18956,
											"end": 18962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18951,
											"end": 18954,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18944,
											"end": 18948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18937,
											"end": 18942,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18933,
											"end": 18949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18898,
											"end": 18963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 18898,
											"end": 18963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18898,
											"end": 18963,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 18898,
											"end": 18963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18988,
											"end": 19017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 19010,
											"end": 19016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18988,
											"end": 19017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 18988,
											"end": 19017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18988,
											"end": 19017,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 18988,
											"end": 19017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18983,
											"end": 18986,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18979,
											"end": 19018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18972,
											"end": 19018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18972,
											"end": 19018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18741,
											"end": 19024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18651,
											"end": 19024,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18651,
											"end": 19024,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18651,
											"end": 19024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18651,
											"end": 19024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18651,
											"end": 19024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19449,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 19030,
											"end": 19449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19169,
											"end": 19173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19207,
											"end": 19209,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19196,
											"end": 19205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19192,
											"end": 19210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19184,
											"end": 19210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19184,
											"end": 19210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19220,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 19288,
											"end": 19289,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19277,
											"end": 19286,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19273,
											"end": 19290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19264,
											"end": 19270,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19220,
											"end": 19291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 19220,
											"end": 19291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19220,
											"end": 19291,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 19220,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19338,
											"end": 19347,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19332,
											"end": 19336,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19328,
											"end": 19348,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19323,
											"end": 19325,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19312,
											"end": 19321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19308,
											"end": 19326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19301,
											"end": 19349,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19366,
											"end": 19442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 19437,
											"end": 19441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19428,
											"end": 19434,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19366,
											"end": 19442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 19366,
											"end": 19442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19366,
											"end": 19442,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 19366,
											"end": 19442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19358,
											"end": 19442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19358,
											"end": 19442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19449,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19449,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19455,
											"end": 19635,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 19455,
											"end": 19635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19503,
											"end": 19580,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19500,
											"end": 19501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19493,
											"end": 19581,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19600,
											"end": 19604,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 19597,
											"end": 19598,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 19590,
											"end": 19605,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19624,
											"end": 19628,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19621,
											"end": 19622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19614,
											"end": 19629,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19641,
											"end": 19832,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 19641,
											"end": 19832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19681,
											"end": 19684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19700,
											"end": 19720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 19718,
											"end": 19719,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19700,
											"end": 19720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 19700,
											"end": 19720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19700,
											"end": 19720,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 19700,
											"end": 19720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19695,
											"end": 19720,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19695,
											"end": 19720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19734,
											"end": 19754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 19752,
											"end": 19753,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19734,
											"end": 19754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 19734,
											"end": 19754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19734,
											"end": 19754,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 19734,
											"end": 19754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19729,
											"end": 19754,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19729,
											"end": 19754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19777,
											"end": 19778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19774,
											"end": 19775,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19770,
											"end": 19779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19763,
											"end": 19779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19763,
											"end": 19779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19798,
											"end": 19801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19795,
											"end": 19796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19792,
											"end": 19802,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19789,
											"end": 19825,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19789,
											"end": 19825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 19789,
											"end": 19825,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19805,
											"end": 19823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 19805,
											"end": 19823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 19805,
											"end": 19823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19805,
											"end": 19823,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 19805,
											"end": 19823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19789,
											"end": 19825,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 19789,
											"end": 19825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19641,
											"end": 19832,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19641,
											"end": 19832,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19641,
											"end": 19832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19641,
											"end": 19832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19641,
											"end": 19832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19838,
											"end": 20170,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 19838,
											"end": 20170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19959,
											"end": 19963,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19997,
											"end": 19999,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19986,
											"end": 19995,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19982,
											"end": 20000,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19974,
											"end": 20000,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19974,
											"end": 20000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20010,
											"end": 20081,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 20078,
											"end": 20079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20067,
											"end": 20076,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20063,
											"end": 20080,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20054,
											"end": 20060,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20010,
											"end": 20081,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 20010,
											"end": 20081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20010,
											"end": 20081,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 20010,
											"end": 20081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20091,
											"end": 20163,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 20159,
											"end": 20161,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20148,
											"end": 20157,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20144,
											"end": 20162,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20135,
											"end": 20141,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20091,
											"end": 20163,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 20091,
											"end": 20163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20091,
											"end": 20163,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 20091,
											"end": 20163,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19838,
											"end": 20170,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 19838,
											"end": 20170,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19838,
											"end": 20170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19838,
											"end": 20170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19838,
											"end": 20170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19838,
											"end": 20170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20176,
											"end": 20292,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 20176,
											"end": 20292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20246,
											"end": 20267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 20261,
											"end": 20266,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20246,
											"end": 20267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 20246,
											"end": 20267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20246,
											"end": 20267,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 20246,
											"end": 20267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20239,
											"end": 20244,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20236,
											"end": 20268,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 20226,
											"end": 20286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 20226,
											"end": 20286,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20282,
											"end": 20283,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20279,
											"end": 20280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20272,
											"end": 20284,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 20226,
											"end": 20286,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 20226,
											"end": 20286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20176,
											"end": 20292,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20176,
											"end": 20292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20298,
											"end": 20435,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 20298,
											"end": 20435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20352,
											"end": 20357,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20383,
											"end": 20389,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20377,
											"end": 20390,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20368,
											"end": 20390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20368,
											"end": 20390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20399,
											"end": 20429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 20423,
											"end": 20428,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20399,
											"end": 20429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 20399,
											"end": 20429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20399,
											"end": 20429,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 20399,
											"end": 20429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20298,
											"end": 20435,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20298,
											"end": 20435,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20298,
											"end": 20435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20298,
											"end": 20435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20298,
											"end": 20435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20441,
											"end": 20786,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 20441,
											"end": 20786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20508,
											"end": 20514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20557,
											"end": 20559,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20545,
											"end": 20554,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20536,
											"end": 20543,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20532,
											"end": 20555,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20528,
											"end": 20560,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 20525,
											"end": 20644,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20525,
											"end": 20644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 20525,
											"end": 20644,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20563,
											"end": 20642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 20563,
											"end": 20642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 20563,
											"end": 20642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20563,
											"end": 20642,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 20563,
											"end": 20642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20525,
											"end": 20644,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 20525,
											"end": 20644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20683,
											"end": 20684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20708,
											"end": 20769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 20761,
											"end": 20768,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20752,
											"end": 20758,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20741,
											"end": 20750,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20737,
											"end": 20759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20708,
											"end": 20769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 20708,
											"end": 20769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20708,
											"end": 20769,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 20708,
											"end": 20769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20698,
											"end": 20769,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20698,
											"end": 20769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20654,
											"end": 20779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20441,
											"end": 20786,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20441,
											"end": 20786,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20441,
											"end": 20786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20441,
											"end": 20786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20441,
											"end": 20786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20792,
											"end": 20935,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 20792,
											"end": 20935,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20849,
											"end": 20854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20880,
											"end": 20886,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20874,
											"end": 20887,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20865,
											"end": 20887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20865,
											"end": 20887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20896,
											"end": 20929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 20923,
											"end": 20928,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20896,
											"end": 20929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 20896,
											"end": 20929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20896,
											"end": 20929,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 20896,
											"end": 20929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20792,
											"end": 20935,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20792,
											"end": 20935,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20792,
											"end": 20935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20792,
											"end": 20935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20792,
											"end": 20935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20958,
											"end": 21690,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 20958,
											"end": 21690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21065,
											"end": 21070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21090,
											"end": 21171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 21106,
											"end": 21170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 21163,
											"end": 21169,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21106,
											"end": 21170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 21106,
											"end": 21170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21106,
											"end": 21170,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 21106,
											"end": 21170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21090,
											"end": 21171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 21090,
											"end": 21171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21090,
											"end": 21171,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 21090,
											"end": 21171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21081,
											"end": 21171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21081,
											"end": 21171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21191,
											"end": 21196,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21220,
											"end": 21226,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21213,
											"end": 21218,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21206,
											"end": 21227,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21254,
											"end": 21258,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21247,
											"end": 21252,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21243,
											"end": 21259,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21236,
											"end": 21259,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21236,
											"end": 21259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21307,
											"end": 21311,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21299,
											"end": 21305,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21295,
											"end": 21312,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 21287,
											"end": 21293,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21283,
											"end": 21313,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21336,
											"end": 21339,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21328,
											"end": 21334,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21325,
											"end": 21340,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21322,
											"end": 21444,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21322,
											"end": 21444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 21322,
											"end": 21444,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21355,
											"end": 21434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 21355,
											"end": 21434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 21355,
											"end": 21434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21355,
											"end": 21434,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 21355,
											"end": 21434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21322,
											"end": 21444,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 21322,
											"end": 21444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21470,
											"end": 21476,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21453,
											"end": 21684,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 21453,
											"end": 21684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21487,
											"end": 21493,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21482,
											"end": 21485,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21479,
											"end": 21494,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 21453,
											"end": 21684,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21453,
											"end": 21684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 21453,
											"end": 21684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21562,
											"end": 21565,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21591,
											"end": 21639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 21635,
											"end": 21638,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 21623,
											"end": 21633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21591,
											"end": 21639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 21591,
											"end": 21639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21591,
											"end": 21639,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 21591,
											"end": 21639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21586,
											"end": 21589,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21579,
											"end": 21640,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21669,
											"end": 21673,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21664,
											"end": 21667,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21660,
											"end": 21674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21653,
											"end": 21674,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 21653,
											"end": 21674,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21529,
											"end": 21684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21513,
											"end": 21517,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21508,
											"end": 21511,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21504,
											"end": 21518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21497,
											"end": 21518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21497,
											"end": 21518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21453,
											"end": 21684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 21453,
											"end": 21684,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21453,
											"end": 21684,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 21453,
											"end": 21684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21457,
											"end": 21478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20958,
											"end": 21690,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20958,
											"end": 21690,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20958,
											"end": 21690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20958,
											"end": 21690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20958,
											"end": 21690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20958,
											"end": 21690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21713,
											"end": 22098,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 21713,
											"end": 22098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21795,
											"end": 21800,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21844,
											"end": 21847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21837,
											"end": 21841,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 21829,
											"end": 21835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21825,
											"end": 21842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21821,
											"end": 21848,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 21811,
											"end": 21933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 21811,
											"end": 21933,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21852,
											"end": 21931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 21852,
											"end": 21931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 21852,
											"end": 21931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21852,
											"end": 21931,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 21852,
											"end": 21931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21811,
											"end": 21933,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 21811,
											"end": 21933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21962,
											"end": 21968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21956,
											"end": 21969,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21987,
											"end": 22092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 22088,
											"end": 22091,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22080,
											"end": 22086,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22073,
											"end": 22077,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22065,
											"end": 22071,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 22061,
											"end": 22078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21987,
											"end": 22092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 21987,
											"end": 22092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21987,
											"end": 22092,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 21987,
											"end": 22092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21978,
											"end": 22092,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21978,
											"end": 22092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21801,
											"end": 22098,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21713,
											"end": 22098,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21713,
											"end": 22098,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21713,
											"end": 22098,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21713,
											"end": 22098,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21713,
											"end": 22098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22104,
											"end": 22415,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 22104,
											"end": 22415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22181,
											"end": 22185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22271,
											"end": 22289,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22263,
											"end": 22269,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22260,
											"end": 22290,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 22257,
											"end": 22313,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22257,
											"end": 22313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 22257,
											"end": 22313,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22293,
											"end": 22311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 22293,
											"end": 22311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 22293,
											"end": 22311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22293,
											"end": 22311,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 22293,
											"end": 22311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22257,
											"end": 22313,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 22257,
											"end": 22313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22343,
											"end": 22347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22335,
											"end": 22341,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22331,
											"end": 22348,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 22323,
											"end": 22348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22323,
											"end": 22348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22403,
											"end": 22407,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22397,
											"end": 22401,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22393,
											"end": 22408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22385,
											"end": 22408,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22385,
											"end": 22408,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22104,
											"end": 22415,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22104,
											"end": 22415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22104,
											"end": 22415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22104,
											"end": 22415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22421,
											"end": 22564,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 22421,
											"end": 22564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22478,
											"end": 22483,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22509,
											"end": 22515,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22503,
											"end": 22516,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 22494,
											"end": 22516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22494,
											"end": 22516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22525,
											"end": 22558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 22552,
											"end": 22557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22525,
											"end": 22558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 22525,
											"end": 22558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22525,
											"end": 22558,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 22525,
											"end": 22558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22421,
											"end": 22564,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22421,
											"end": 22564,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22421,
											"end": 22564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22421,
											"end": 22564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22421,
											"end": 22564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22587,
											"end": 23319,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 22587,
											"end": 23319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22694,
											"end": 22699,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22719,
											"end": 22800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 22735,
											"end": 22799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 22792,
											"end": 22798,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22735,
											"end": 22799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 22735,
											"end": 22799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22735,
											"end": 22799,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 22735,
											"end": 22799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22719,
											"end": 22800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 22719,
											"end": 22800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22719,
											"end": 22800,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 22719,
											"end": 22800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22710,
											"end": 22800,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22710,
											"end": 22800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22820,
											"end": 22825,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 22849,
											"end": 22855,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22842,
											"end": 22847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22835,
											"end": 22856,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22883,
											"end": 22887,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22876,
											"end": 22881,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22872,
											"end": 22888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22865,
											"end": 22888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22865,
											"end": 22888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22936,
											"end": 22940,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22928,
											"end": 22934,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22924,
											"end": 22941,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 22916,
											"end": 22922,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22912,
											"end": 22942,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22965,
											"end": 22968,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22957,
											"end": 22963,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22954,
											"end": 22969,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 22951,
											"end": 23073,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22951,
											"end": 23073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 22951,
											"end": 23073,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22984,
											"end": 23063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 22984,
											"end": 23063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 22984,
											"end": 23063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22984,
											"end": 23063,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 22984,
											"end": 23063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22951,
											"end": 23073,
											"name": "tag",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 22951,
											"end": 23073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23099,
											"end": 23105,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23082,
											"end": 23313,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 23082,
											"end": 23313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23116,
											"end": 23122,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23111,
											"end": 23114,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23108,
											"end": 23123,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 23082,
											"end": 23313,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23082,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 23082,
											"end": 23313,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23191,
											"end": 23194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 23220,
											"end": 23268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 23264,
											"end": 23267,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 23252,
											"end": 23262,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23220,
											"end": 23268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 23220,
											"end": 23268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23220,
											"end": 23268,
											"name": "tag",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 23220,
											"end": 23268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23215,
											"end": 23218,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23208,
											"end": 23269,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23298,
											"end": 23302,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23293,
											"end": 23296,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23289,
											"end": 23303,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23282,
											"end": 23303,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 23282,
											"end": 23303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23158,
											"end": 23313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23142,
											"end": 23146,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23137,
											"end": 23140,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23133,
											"end": 23147,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23126,
											"end": 23147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23126,
											"end": 23147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23082,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 23082,
											"end": 23313,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23082,
											"end": 23313,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 23082,
											"end": 23313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23086,
											"end": 23107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22700,
											"end": 23319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22700,
											"end": 23319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22587,
											"end": 23319,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 22587,
											"end": 23319,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22587,
											"end": 23319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22587,
											"end": 23319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22587,
											"end": 23319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22587,
											"end": 23319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23342,
											"end": 23727,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 23342,
											"end": 23727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23424,
											"end": 23429,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23473,
											"end": 23476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23466,
											"end": 23470,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 23458,
											"end": 23464,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23454,
											"end": 23471,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23450,
											"end": 23477,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 23440,
											"end": 23562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 23440,
											"end": 23562,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23481,
											"end": 23560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 23481,
											"end": 23560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 23481,
											"end": 23560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23481,
											"end": 23560,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 23481,
											"end": 23560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23440,
											"end": 23562,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 23440,
											"end": 23562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23591,
											"end": 23597,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23585,
											"end": 23598,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 23616,
											"end": 23721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 23717,
											"end": 23720,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23709,
											"end": 23715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23702,
											"end": 23706,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23694,
											"end": 23700,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 23690,
											"end": 23707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23616,
											"end": 23721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 23616,
											"end": 23721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23616,
											"end": 23721,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 23616,
											"end": 23721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23607,
											"end": 23721,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23607,
											"end": 23721,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23430,
											"end": 23727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23342,
											"end": 23727,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23342,
											"end": 23727,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23342,
											"end": 23727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23342,
											"end": 23727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23342,
											"end": 23727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23733,
											"end": 23837,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 23733,
											"end": 23837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23778,
											"end": 23785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23807,
											"end": 23831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 23825,
											"end": 23830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23807,
											"end": 23831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 23807,
											"end": 23831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23807,
											"end": 23831,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 23807,
											"end": 23831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23796,
											"end": 23831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23796,
											"end": 23831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23733,
											"end": 23837,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23733,
											"end": 23837,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23733,
											"end": 23837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23733,
											"end": 23837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23843,
											"end": 23981,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 23843,
											"end": 23981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23924,
											"end": 23956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 23950,
											"end": 23955,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23924,
											"end": 23956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 23924,
											"end": 23956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23924,
											"end": 23956,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 23924,
											"end": 23956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23917,
											"end": 23922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23914,
											"end": 23957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 23904,
											"end": 23975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 23904,
											"end": 23975,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23971,
											"end": 23972,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23968,
											"end": 23969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23961,
											"end": 23973,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 23904,
											"end": 23975,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 23904,
											"end": 23975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23843,
											"end": 23981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23843,
											"end": 23981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23987,
											"end": 24146,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 23987,
											"end": 24146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24052,
											"end": 24057,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24083,
											"end": 24089,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24077,
											"end": 24090,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 24068,
											"end": 24090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24068,
											"end": 24090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24099,
											"end": 24140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 24134,
											"end": 24139,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24099,
											"end": 24140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 24099,
											"end": 24140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24099,
											"end": 24140,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 24099,
											"end": 24140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23987,
											"end": 24146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23987,
											"end": 24146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23987,
											"end": 24146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23987,
											"end": 24146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23987,
											"end": 24146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24152,
											"end": 25237,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 24152,
											"end": 25237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24298,
											"end": 24304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24306,
											"end": 24312,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24314,
											"end": 24320,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24363,
											"end": 24365,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 24351,
											"end": 24360,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24342,
											"end": 24349,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 24338,
											"end": 24361,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24334,
											"end": 24366,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 24331,
											"end": 24450,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 24331,
											"end": 24450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 24331,
											"end": 24450,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24369,
											"end": 24448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 24369,
											"end": 24448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 24369,
											"end": 24448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24369,
											"end": 24448,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 24369,
											"end": 24448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24331,
											"end": 24450,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 24331,
											"end": 24450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24510,
											"end": 24511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24499,
											"end": 24508,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24495,
											"end": 24512,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24489,
											"end": 24513,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 24540,
											"end": 24558,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24532,
											"end": 24538,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24529,
											"end": 24559,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 24526,
											"end": 24643,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 24526,
											"end": 24643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 24526,
											"end": 24643,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24562,
											"end": 24641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 24562,
											"end": 24641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 24562,
											"end": 24641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24562,
											"end": 24641,
											"name": "tag",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 24562,
											"end": 24641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24526,
											"end": 24643,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 24526,
											"end": 24643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24667,
											"end": 24756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 24748,
											"end": 24755,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 24739,
											"end": 24745,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24728,
											"end": 24737,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 24724,
											"end": 24746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24667,
											"end": 24756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 24667,
											"end": 24756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24667,
											"end": 24756,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 24667,
											"end": 24756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24657,
											"end": 24756,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 24657,
											"end": 24756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24460,
											"end": 24766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24826,
											"end": 24828,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24815,
											"end": 24824,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24811,
											"end": 24829,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24805,
											"end": 24830,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 24857,
											"end": 24875,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24849,
											"end": 24855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24846,
											"end": 24876,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 24843,
											"end": 24960,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 24843,
											"end": 24960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 24843,
											"end": 24960,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24879,
											"end": 24958,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 24879,
											"end": 24958,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 24879,
											"end": 24958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24879,
											"end": 24958,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 24879,
											"end": 24958,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24843,
											"end": 24960,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 24843,
											"end": 24960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24984,
											"end": 25073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 25065,
											"end": 25072,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 25056,
											"end": 25062,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25045,
											"end": 25054,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 25041,
											"end": 25063,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24984,
											"end": 25073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 24984,
											"end": 25073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24984,
											"end": 25073,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 24984,
											"end": 25073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24974,
											"end": 25073,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24974,
											"end": 25073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24776,
											"end": 25083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25122,
											"end": 25124,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 25148,
											"end": 25220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 25212,
											"end": 25219,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 25203,
											"end": 25209,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25192,
											"end": 25201,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 25188,
											"end": 25210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25148,
											"end": 25220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 25148,
											"end": 25220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25148,
											"end": 25220,
											"name": "tag",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 25148,
											"end": 25220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25138,
											"end": 25220,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25138,
											"end": 25220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25093,
											"end": 25230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24152,
											"end": 25237,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24152,
											"end": 25237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24152,
											"end": 25237,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24152,
											"end": 25237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24152,
											"end": 25237,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24152,
											"end": 25237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25243,
											"end": 25685,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 25243,
											"end": 25685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25392,
											"end": 25396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25430,
											"end": 25432,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 25419,
											"end": 25428,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25415,
											"end": 25433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25407,
											"end": 25433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25407,
											"end": 25433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25443,
											"end": 25514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 25511,
											"end": 25512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25500,
											"end": 25509,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25496,
											"end": 25513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25487,
											"end": 25493,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 25443,
											"end": 25514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 25443,
											"end": 25514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25443,
											"end": 25514,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 25443,
											"end": 25514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25524,
											"end": 25596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 25592,
											"end": 25594,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25581,
											"end": 25590,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25577,
											"end": 25595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25568,
											"end": 25574,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 25524,
											"end": 25596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 25524,
											"end": 25596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25524,
											"end": 25596,
											"name": "tag",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 25524,
											"end": 25596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25606,
											"end": 25678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 25674,
											"end": 25676,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 25663,
											"end": 25672,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25659,
											"end": 25677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25650,
											"end": 25656,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25606,
											"end": 25678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 25606,
											"end": 25678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25606,
											"end": 25678,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 25606,
											"end": 25678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25243,
											"end": 25685,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 25243,
											"end": 25685,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 25243,
											"end": 25685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25243,
											"end": 25685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25243,
											"end": 25685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25243,
											"end": 25685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25243,
											"end": 25685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"lib/allo-v2/contracts/core/interfaces/IAllo.sol",
								"lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
								"lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
								"lib/allo-v2/contracts/core/libraries/Errors.sol",
								"lib/allo-v2/contracts/core/libraries/Metadata.sol",
								"lib/allo-v2/contracts/core/libraries/Native.sol",
								"lib/allo-v2/contracts/core/libraries/Transfer.sol",
								"lib/allo-v2/contracts/strategies/BaseStrategy.sol",
								"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol",
								"src/YeeterStrategy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NATIVE()": "a0cf0aea",
							"allocate(bytes,address)": "ef2920fc",
							"distribute(address[],bytes,address)": "0a6f0ee9",
							"getAllo()": "15cc481e",
							"getPayouts(address[],bytes[])": "b2b878d0",
							"getPoolAmount()": "4ab4ba42",
							"getPoolId()": "38fff2d0",
							"getRecipientStatus(address)": "eb11af93",
							"getStrategyId()": "42fda9c7",
							"increasePoolAmount(uint256)": "f5b0dfb7",
							"initialize(uint256,bytes)": "edd146cc",
							"isPoolActive()": "df868ed3",
							"isValidAllocator(address)": "4d31d087",
							"registerRecipient(bytes,address)": "2bbe0cae",
							"withdraw(address,address,uint256)": "d9caed12"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allo\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ALLOCATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ENDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALREADY_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AMOUNT_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ANCHOR_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ARRAY_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INPUT_LENGTH_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_FEE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_METADATA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_REGISTRATION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IS_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NONCE_NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NON_ZERO_VALUE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOOP\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_IMPLEMENTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PENDING_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_INACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_ALREADY_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"name\":\"RECIPIENT_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_NOT_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Allocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllo\",\"outputs\":[{\"internalType\":\"contract IAllo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"getPayouts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategy.PayoutSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientId\",\"type\":\"address\"}],\"name\":\"getRecipientStatus\",\"outputs\":[{\"internalType\":\"enum IStrategy.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increasePoolAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"isValidAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ANCHOR_ERROR()\":[{\"details\":\"Thrown if the anchor creation fails\"}],\"NONCE_NOT_AVAILABLE()\":[{\"details\":\"Thrown when the nonce passed has been used or not available\"}],\"NOT_PENDING_OWNER()\":[{\"details\":\"Thrown when the 'msg.sender' is not the pending owner on ownership transfer\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"params\":{\"amount\":\"The amount allocated\",\"recipientId\":\"The ID of the recipient\",\"token\":\"The token allocated\"}},\"Distributed(address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount distributed\",\"recipientAddress\":\"The recipient\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}},\"Initialized(uint256,bytes)\":{\"params\":{\"data\":\"The data passed to the 'initialize' function\",\"poolId\":\"The ID of the pool\"}},\"PoolActive(bool)\":{\"params\":{\"active\":\"The status of the pool\"}},\"Registered(address,bytes,address)\":{\"params\":{\"data\":\"The data passed to the 'registerRecipient' function\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}}},\"kind\":\"dev\",\"methods\":{\"allocate(bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to allocate to the recipient\",\"_sender\":\"The address of the sender\"}},\"distribute(address[],bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to distribute to the recipients\",\"_recipientIds\":\"The IDs of the recipients\",\"_sender\":\"The address of the sender\"}},\"getAllo()\":{\"returns\":{\"_0\":\"The Allo contract\"}},\"getPayouts(address[],bytes[])\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation.\",\"params\":{\"_data\":\"The data to use to get the payout summary for the recipients\",\"_recipientIds\":\"The IDs of the recipients\"},\"returns\":{\"_0\":\"The payout summary for the recipients\"}},\"getPoolAmount()\":{\"returns\":{\"_0\":\"The balance of the pool\"}},\"getPoolId()\":{\"returns\":{\"_0\":\"The ID of the pool\"}},\"getRecipientStatus(address)\":{\"params\":{\"_recipientId\":\"The ID of the recipient\"},\"returns\":{\"_0\":\"The status of the recipient\"}},\"getStrategyId()\":{\"returns\":{\"_0\":\"The ID of the strategy\"}},\"increasePoolAmount(uint256)\":{\"details\":\"Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\",\"params\":{\"_amount\":\"The amount to increase the pool by\"}},\"initialize(uint256,bytes)\":{\"params\":{\"_data\":\"The encoded data\",\"_poolId\":\"The ID of the pool\"}},\"isPoolActive()\":{\"returns\":{\"_0\":\"'true' if the pool is active, otherwise 'false'\"}},\"isValidAllocator(address)\":{\"details\":\"How the allocator is determined is up to the strategy implementation.\",\"params\":{\"_allocator\":\"The address to check if it is a valid allocator for the strategy.\"},\"returns\":{\"_0\":\"'true' if the address is a valid allocator, 'false' otherwise\"}},\"registerRecipient(bytes,address)\":{\"details\":\"Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to register the recipient\",\"_sender\":\"The address of the sender\"},\"returns\":{\"recipientId\":\"The recipientId\"}},\"withdraw(address,address,uint256)\":{\"params\":{\"_amount\":\"Amount to withdraw\",\"_recipient\":\"Address to send the funds to\",\"_token\":\"Token address\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ALLOCATION_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is active.\"}],\"ALLOCATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is not active.\"}],\"ALLOCATION_NOT_ENDED()\":[{\"notice\":\"Thrown when the allocation is not ended.\"}],\"ALREADY_INITIALIZED()\":[{\"notice\":\"Thrown when data is already intialized\"}],\"AMOUNT_MISMATCH()\":[{\"notice\":\"Thrown when the amount of tokens sent does not match the amount of tokens expected\"}],\"ARRAY_MISMATCH()\":[{\"notice\":\"Thrown when two arrays length are not equal\"}],\"INVALID()\":[{\"notice\":\"Thrown as a general error when input / data is invalid\"}],\"INVALID_ADDRESS()\":[{\"notice\":\"Thrown when an invalid address is used\"}],\"INVALID_FEE()\":[{\"notice\":\"Thrown when the fee is below 1e18 which is the fee percentage denominator\"}],\"INVALID_METADATA()\":[{\"notice\":\"Thrown when the metadata is invalid.\"}],\"INVALID_REGISTRATION()\":[{\"notice\":\"Thrown when the registration is invalid.\"}],\"IS_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is approved and should be cloned\"}],\"MISMATCH()\":[{\"notice\":\"Thrown when mismatch in decoding data\"}],\"NON_ZERO_VALUE()\":[{\"notice\":\"Thrown when the value is non-zero\"}],\"NOT_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is not approved\"}],\"NOT_ENOUGH_FUNDS()\":[{\"notice\":\"Thrown when not enough funds are available\"}],\"NOT_IMPLEMENTED()\":[{\"notice\":\"Thrown when the function is not implemented\"}],\"NOT_INITIALIZED()\":[{\"notice\":\"Thrown when data is yet to be initialized\"}],\"POOL_ACTIVE()\":[{\"notice\":\"Thrown when a pool is already active\"}],\"POOL_INACTIVE()\":[{\"notice\":\"Thrown when a pool is inactive\"}],\"RECIPIENT_ALREADY_ACCEPTED()\":[{\"notice\":\"Thrown when recipient is already accepted.\"}],\"RECIPIENT_ERROR(address)\":[{\"notice\":\"Thrown when there is an error in recipient.\"}],\"RECIPIENT_NOT_ACCEPTED()\":[{\"notice\":\"Thrown when the recipient is not accepted.\"}],\"REGISTRATION_ACTIVE()\":[{\"notice\":\"Thrown when registration is active.\"}],\"REGISTRATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when registration is not active.\"}],\"UNAUTHORIZED()\":[{\"notice\":\"Thrown when user is not authorized\"}],\"ZERO_ADDRESS()\":[{\"notice\":\"Thrown when address is the zero address\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"notice\":\"Emitted when a recipient is allocated to.\"},\"Distributed(address,address,uint256,address)\":{\"notice\":\"Emitted when tokens are distributed.\"},\"Initialized(uint256,bytes)\":{\"notice\":\"Emitted when strategy is initialized.\"},\"PoolActive(bool)\":{\"notice\":\"Emitted when pool is set to active status.\"},\"Registered(address,bytes,address)\":{\"notice\":\"Emitted when a recipient is registered.\"}},\"kind\":\"user\",\"methods\":{\"NATIVE()\":{\"notice\":\"Address of the native token\"},\"allocate(bytes,address)\":{\"notice\":\"Allocates to a recipient.\"},\"distribute(address[],bytes,address)\":{\"notice\":\"Distributes funds (tokens) to recipients.\"},\"getAllo()\":{\"notice\":\"Getter for the 'Allo' contract.\"},\"getPayouts(address[],bytes[])\":{\"notice\":\"Gets the payout summary for recipients.\"},\"getPoolAmount()\":{\"notice\":\"Getter for the 'poolAmount'.\"},\"getPoolId()\":{\"notice\":\"Getter for the 'poolId'.\"},\"getRecipientStatus(address)\":{\"notice\":\"Getter for the status of a recipient.\"},\"getStrategyId()\":{\"notice\":\"Getter for the 'strategyId'.\"},\"increasePoolAmount(uint256)\":{\"notice\":\"Increases the pool amount.\"},\"initialize(uint256,bytes)\":{\"notice\":\"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize().\"},\"isPoolActive()\":{\"notice\":\"Getter for whether or not the pool is active.\"},\"isValidAllocator(address)\":{\"notice\":\"Checks if the '_allocator' is a valid allocator.\"},\"registerRecipient(bytes,address)\":{\"notice\":\"Registers a recipient.\"},\"withdraw(address,address,uint256)\":{\"notice\":\"Withdraw funds stuck on contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/YeeterStrategy.sol\":\"YeeterStrategy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xb4d42b75def46f3fd1e182f5b18bde5df74822d3666580e66d34802f362b517e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a9492cb300be5f7cd8c58f54ff472b66c108827833bf1156028d8513b91e8f29\",\"dweb:/ipfs/QmccCdVZWsPhJEExajS6gANPyg2pEpD6RZwyjFNrdJM4Ek\"]},\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"lib/allo-v2/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"lib/allo-v2/contracts/core/libraries/Errors.sol\":{\"keccak256\":\"0xcb30aef5d96b6be43471657c2b2cef6bf171fddcd71dc7d6347eedd51bc7e45c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ee6edb9116e028006cd4ac70a83ff2d41b749fd508575bb7627def1f782ad27\",\"dweb:/ipfs/QmbyX2wEE74X6HRPBCGZBP9RVkMf69Aaj2cBcUaDMtTq7h\"]},\"lib/allo-v2/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x41ece5b83f50d180841f44324a883e12b3fc2005e425e4cd51944fb8d46b147f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ecd926cbce88398d6fdb1762f7b75617635ae866f8461b7fb32dd2b0a17273ce\",\"dweb:/ipfs/QmdvPsL48GbXV2hy4vDcW9XtkN7VUTDebtYihuj7ZxhaD7\"]},\"lib/allo-v2/contracts/core/libraries/Native.sol\":{\"keccak256\":\"0x5a12a5d2fb1ba09c0ca357b8ef22e65b954831563f6e6a63a08a8176608c9264\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://75e51c8b86b13955b647f49e3869a0877d1af7355fad036ecc03af98e3d29972\",\"dweb:/ipfs/QmZAGmPgsFj5pbY8eDVLNA8mjHUZtWq4V8RVNFLk8MyVr8\"]},\"lib/allo-v2/contracts/core/libraries/Transfer.sol\":{\"keccak256\":\"0x490d9748fc1232a6db5a7dac80f7acd54852d0a1f3490959f3e6a6488f704f7e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cc225511b84e9ac56b7b59339ed8ec5ce6d2a0f2b0ee8cbc2d68c48c9b8d3603\",\"dweb:/ipfs/QmYDsnUWW2NsWjBn3PuLuz9nLjbVcCyeiv6tJZG1uxSbkQ\"]},\"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":{\"keccak256\":\"0x3f1382dc6c35d50545e327e7ed6016f2bd752357d446bd698014073f0b812873\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://99500abcd617fa43f6dde49e2c7802821ceaf54a65a8055cbbf2695ecd107974\",\"dweb:/ipfs/QmUktZkWuu3GCMEijY1fqt7NMy7BzpTvEtcmpB1fuoa7zt\"]},\"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298\",\"dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt\"]},\"src/YeeterStrategy.sol\":{\"keccak256\":\"0x7c549e691388815578a5ffaef8ac8ea00de0bbf3c48867abaa0df157b7ad5086\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://565044cbdf59f55605493e59cc54837db2e649d9dc1408645c8ebaec5b5ebc28\",\"dweb:/ipfs/QmQZLz2MhESQGZZuZ3dMN6q84zLTmzCipzvvyFXGTkd4gf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1066,
								"contract": "src/YeeterStrategy.sol:YeeterStrategy",
								"label": "poolActive",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1068,
								"contract": "src/YeeterStrategy.sol:YeeterStrategy",
								"label": "poolId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1070,
								"contract": "src/YeeterStrategy.sol:YeeterStrategy",
								"label": "poolAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ALLOCATION_ACTIVE()": [
								{
									"notice": "Thrown when the allocation is active."
								}
							],
							"ALLOCATION_NOT_ACTIVE()": [
								{
									"notice": "Thrown when the allocation is not active."
								}
							],
							"ALLOCATION_NOT_ENDED()": [
								{
									"notice": "Thrown when the allocation is not ended."
								}
							],
							"ALREADY_INITIALIZED()": [
								{
									"notice": "Thrown when data is already intialized"
								}
							],
							"AMOUNT_MISMATCH()": [
								{
									"notice": "Thrown when the amount of tokens sent does not match the amount of tokens expected"
								}
							],
							"ARRAY_MISMATCH()": [
								{
									"notice": "Thrown when two arrays length are not equal"
								}
							],
							"INVALID()": [
								{
									"notice": "Thrown as a general error when input / data is invalid"
								}
							],
							"INVALID_ADDRESS()": [
								{
									"notice": "Thrown when an invalid address is used"
								}
							],
							"INVALID_FEE()": [
								{
									"notice": "Thrown when the fee is below 1e18 which is the fee percentage denominator"
								}
							],
							"INVALID_METADATA()": [
								{
									"notice": "Thrown when the metadata is invalid."
								}
							],
							"INVALID_REGISTRATION()": [
								{
									"notice": "Thrown when the registration is invalid."
								}
							],
							"IS_APPROVED_STRATEGY()": [
								{
									"notice": "Thrown when the strategy is approved and should be cloned"
								}
							],
							"MISMATCH()": [
								{
									"notice": "Thrown when mismatch in decoding data"
								}
							],
							"NON_ZERO_VALUE()": [
								{
									"notice": "Thrown when the value is non-zero"
								}
							],
							"NOT_APPROVED_STRATEGY()": [
								{
									"notice": "Thrown when the strategy is not approved"
								}
							],
							"NOT_ENOUGH_FUNDS()": [
								{
									"notice": "Thrown when not enough funds are available"
								}
							],
							"NOT_IMPLEMENTED()": [
								{
									"notice": "Thrown when the function is not implemented"
								}
							],
							"NOT_INITIALIZED()": [
								{
									"notice": "Thrown when data is yet to be initialized"
								}
							],
							"POOL_ACTIVE()": [
								{
									"notice": "Thrown when a pool is already active"
								}
							],
							"POOL_INACTIVE()": [
								{
									"notice": "Thrown when a pool is inactive"
								}
							],
							"RECIPIENT_ALREADY_ACCEPTED()": [
								{
									"notice": "Thrown when recipient is already accepted."
								}
							],
							"RECIPIENT_ERROR(address)": [
								{
									"notice": "Thrown when there is an error in recipient."
								}
							],
							"RECIPIENT_NOT_ACCEPTED()": [
								{
									"notice": "Thrown when the recipient is not accepted."
								}
							],
							"REGISTRATION_ACTIVE()": [
								{
									"notice": "Thrown when registration is active."
								}
							],
							"REGISTRATION_NOT_ACTIVE()": [
								{
									"notice": "Thrown when registration is not active."
								}
							],
							"UNAUTHORIZED()": [
								{
									"notice": "Thrown when user is not authorized"
								}
							],
							"ZERO_ADDRESS()": [
								{
									"notice": "Thrown when address is the zero address"
								}
							]
						},
						"events": {
							"Allocated(address,uint256,address,address)": {
								"notice": "Emitted when a recipient is allocated to."
							},
							"Distributed(address,address,uint256,address)": {
								"notice": "Emitted when tokens are distributed."
							},
							"Initialized(uint256,bytes)": {
								"notice": "Emitted when strategy is initialized."
							},
							"PoolActive(bool)": {
								"notice": "Emitted when pool is set to active status."
							},
							"Registered(address,bytes,address)": {
								"notice": "Emitted when a recipient is registered."
							}
						},
						"kind": "user",
						"methods": {
							"NATIVE()": {
								"notice": "Address of the native token"
							},
							"allocate(bytes,address)": {
								"notice": "Allocates to a recipient."
							},
							"distribute(address[],bytes,address)": {
								"notice": "Distributes funds (tokens) to recipients."
							},
							"getAllo()": {
								"notice": "Getter for the 'Allo' contract."
							},
							"getPayouts(address[],bytes[])": {
								"notice": "Gets the payout summary for recipients."
							},
							"getPoolAmount()": {
								"notice": "Getter for the 'poolAmount'."
							},
							"getPoolId()": {
								"notice": "Getter for the 'poolId'."
							},
							"getRecipientStatus(address)": {
								"notice": "Getter for the status of a recipient."
							},
							"getStrategyId()": {
								"notice": "Getter for the 'strategyId'."
							},
							"increasePoolAmount(uint256)": {
								"notice": "Increases the pool amount."
							},
							"initialize(uint256,bytes)": {
								"notice": "@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize()."
							},
							"isPoolActive()": {
								"notice": "Getter for whether or not the pool is active."
							},
							"isValidAllocator(address)": {
								"notice": "Checks if the '_allocator' is a valid allocator."
							},
							"registerRecipient(bytes,address)": {
								"notice": "Registers a recipient."
							},
							"withdraw(address,address,uint256)": {
								"notice": "Withdraw funds stuck on contract"
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> lib/allo-v2/contracts/strategies/BaseStrategy.sol:174:9:\n    |\n174 |         _afterRegisterRecipient(_data, _sender);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9766,
					"file": "lib/allo-v2/contracts/strategies/BaseStrategy.sol",
					"start": 9727
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> lib/allo-v2/contracts/strategies/BaseStrategy.sol:201:9:\n    |\n201 |         _afterDistribute(_recipientIds, _data, _sender);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 11023,
					"file": "lib/allo-v2/contracts/strategies/BaseStrategy.sol",
					"start": 10976
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> lib/allo-v2/contracts/strategies/BaseStrategy.sol:223:13:\n    |\n223 |             unchecked {\n    |             ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 12031,
					"file": "lib/allo-v2/contracts/strategies/BaseStrategy.sol",
					"start": 11985
				},
				"type": "Warning"
			}
		],
		"sources": {
			"lib/allo-v2/contracts/core/interfaces/IAllo.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/core/interfaces/IAllo.sol",
					"exportedSymbols": {
						"IAllo": [
							359
						],
						"IRegistry": [
							552
						],
						"IStrategy": [
							721
						],
						"Metadata": [
							824
						]
					},
					"id": 360,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
							"file": "./IRegistry.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 360,
							"sourceUnit": 553,
							"src": "82:42:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 552,
										"src": "90:9:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
							"file": "./IStrategy.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 360,
							"sourceUnit": 722,
							"src": "125:42:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IStrategy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 721,
										"src": "133:9:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/libraries/Metadata.sol",
							"file": "../libraries/Metadata.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 360,
							"sourceUnit": 825,
							"src": "190:51:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 824,
										"src": "198:8:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAllo",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "4234:297:0",
								"text": "@title Allo Interface\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice Interface for the Allo contract. It exposes all functions needed to use the Allo protocol."
							},
							"fullyImplemented": false,
							"id": 359,
							"linearizedBaseContracts": [
								359
							],
							"name": "IAllo",
							"nameLocation": "4541:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IAllo.Pool",
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "4647:66:0",
										"text": "@notice the Pool struct that all strategy pools are based from"
									},
									"id": 24,
									"members": [
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "profileId",
											"nameLocation": "4748:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 24,
											"src": "4740:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 10,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "4740:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "strategy",
											"nameLocation": "4777:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 24,
											"src": "4767:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IStrategy_$721",
												"typeString": "contract IStrategy"
											},
											"typeName": {
												"id": 13,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 12,
													"name": "IStrategy",
													"nameLocations": [
														"4767:9:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 721,
													"src": "4767:9:0"
												},
												"referencedDeclaration": 721,
												"src": "4767:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IStrategy_$721",
													"typeString": "contract IStrategy"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "4803:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 24,
											"src": "4795:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 15,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4795:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "metadata",
											"nameLocation": "4827:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 24,
											"src": "4818:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Metadata_$824_storage_ptr",
												"typeString": "struct Metadata"
											},
											"typeName": {
												"id": 18,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 17,
													"name": "Metadata",
													"nameLocations": [
														"4818:8:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 824,
													"src": "4818:8:0"
												},
												"referencedDeclaration": 824,
												"src": "4818:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$824_storage_ptr",
													"typeString": "struct Metadata"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "managerRole",
											"nameLocation": "4853:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 24,
											"src": "4845:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "4845:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "4882:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 24,
											"src": "4874:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 22,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "4874:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Pool",
									"nameLocation": "4725:4:0",
									"nodeType": "StructDefinition",
									"scope": 359,
									"src": "4718:180:0",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "4998:402:0",
										"text": "@notice Event emitted when a new pool is created\n @param poolId ID of the pool created\n @param profileId ID of the profile the pool is associated with\n @param strategy Address of the strategy contract\n @param token Address of the token pool was funded with when created\n @param amount Amount pool was funded with when created\n @param metadata Pool metadata"
									},
									"eventSelector": "69bcb5a6cf6a3c95185cbb451e77787240c866dd2e8332597e3013ff18a1aba1",
									"id": 41,
									"name": "PoolCreated",
									"nameLocation": "5411:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "5448:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "5432:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "5480:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "5464:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 28,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "5509:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "5499:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IStrategy_$721",
													"typeString": "contract IStrategy"
												},
												"typeName": {
													"id": 31,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 30,
														"name": "IStrategy",
														"nameLocations": [
															"5499:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 721,
														"src": "5499:9:0"
													},
													"referencedDeclaration": 721,
													"src": "5499:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IStrategy_$721",
														"typeString": "contract IStrategy"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5535:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "5527:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5527:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5558:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "5550:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "5583:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "5574:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$824_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 38,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 37,
														"name": "Metadata",
														"nameLocations": [
															"5574:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 824,
														"src": "5574:8:0"
													},
													"referencedDeclaration": 824,
													"src": "5574:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$824_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5422:175:0"
									},
									"src": "5405:193:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "5604:152:0",
										"text": "@notice Emitted when a pools metadata is updated\n @param poolId ID of the pool updated\n @param metadata Pool metadata that was updated"
									},
									"eventSelector": "14f52b76bda9e4c482842cefda2968d332933577988f224e80aae18fba10edf0",
									"id": 49,
									"name": "PoolMetadataUpdated",
									"nameLocation": "5767:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "5803:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "5787:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "5820:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "5811:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$824_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 46,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 45,
														"name": "Metadata",
														"nameLocations": [
															"5811:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 824,
														"src": "5811:8:0"
													},
													"referencedDeclaration": 824,
													"src": "5811:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$824_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5786:43:0"
									},
									"src": "5761:69:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "5836:191:0",
										"text": "@notice Emitted when a pool is funded\n @param poolId ID of the pool funded\n @param amount Amount funded to the pool\n @param fee Amount of the fee paid to the treasury"
									},
									"eventSelector": "bf59838198f4ea92f663f5c1fc697f151a1b746b7dff86d564f250a55cbb4851",
									"id": 58,
									"name": "PoolFunded",
									"nameLocation": "6038:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "6065:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "6049:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6081:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "6073:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "6097:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "6089:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6048:53:0"
									},
									"src": "6032:70:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "6108:158:0",
										"text": "@notice Emitted when the base fee is paid\n @param poolId ID of the pool the base fee was paid for\n @param amount Amount of the base fee paid"
									},
									"eventSelector": "02e340b51c6ae66fd22509c9b016f224c47a54063d4259fe3d860958e9eaac72",
									"id": 65,
									"name": "BaseFeePaid",
									"nameLocation": "6277:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "6305:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "6289:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6321:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "6313:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6288:40:0"
									},
									"src": "6271:58:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "6335:108:0",
										"text": "@notice Emitted when the treasury address is updated\n @param treasury Address of the new treasury"
									},
									"eventSelector": "7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1",
									"id": 70,
									"name": "TreasuryUpdated",
									"nameLocation": "6454:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"mutability": "mutable",
												"name": "treasury",
												"nameLocation": "6478:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "6470:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6469:18:0"
									},
									"src": "6448:40:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "6494:104:0",
										"text": "@notice Emitted when the percent fee is updated\n @param percentFee New percentage for the fee"
									},
									"eventSelector": "9e826789de2de708fd9f09edea1182545e543893caa8ff71f8eb3aab50a4b065",
									"id": 75,
									"name": "PercentFeeUpdated",
									"nameLocation": "6609:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": false,
												"mutability": "mutable",
												"name": "percentFee",
												"nameLocation": "6635:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "6627:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6626:20:0"
									},
									"src": "6603:44:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "6653:91:0",
										"text": "@notice Emitted when the base fee is updated\n @param baseFee New base fee amount"
									},
									"eventSelector": "803bee7e92bbc6ae7a1551f9f4ed3e31a8ea8df32e93332f41b0028f1091f9c3",
									"id": 80,
									"name": "BaseFeeUpdated",
									"nameLocation": "6755:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"indexed": false,
												"mutability": "mutable",
												"name": "baseFee",
												"nameLocation": "6778:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "6770:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6769:17:0"
									},
									"src": "6749:38:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "6793:108:0",
										"text": "@notice Emitted when the registry address is updated\n @param registry Address of the new registry"
									},
									"eventSelector": "d6ceddf6d2a22f21c7c81675c518004eff43bc5c8a6fc32a0b748e69d58671cd",
									"id": 85,
									"name": "RegistryUpdated",
									"nameLocation": "6912:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "registry",
												"nameLocation": "6936:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "6928:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6927:18:0"
									},
									"src": "6906:40:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "6952:142:0",
										"text": "@notice Emitted when a strategy is approved and added to the cloneable strategies\n @param strategy Address of the strategy approved"
									},
									"eventSelector": "960dd94cbb79169f09a4e445d58b895df2d9bffa5b31055d0932d801724a20d1",
									"id": 90,
									"name": "StrategyApproved",
									"nameLocation": "7105:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "7130:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "7122:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7122:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7121:18:0"
									},
									"src": "7099:41:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "7146:132:0",
										"text": "@notice Emitted when a strategy is removed from the cloneable strategies\n @param strategy Address of the strategy removed"
									},
									"eventSelector": "09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea4",
									"id": 95,
									"name": "StrategyRemoved",
									"nameLocation": "7289:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "7313:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "7305:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7304:18:0"
									},
									"src": "7283:40:0"
								},
								{
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "7465:280:0",
										"text": "@notice Initialize the Allo contract\n @param _owner Address of the owner\n @param _registry Address of the registry contract\n @param _treasury Address of the treasury\n @param _percentFee Percentage for the fee\n @param _baseFee Base fee amount"
									},
									"functionSelector": "a6b63eb8",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "7759:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "7787:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "7779:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7779:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "7811:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "7803:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "7846:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "7830:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7830:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "_percentFee",
												"nameLocation": "7873:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "7865:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "_baseFee",
												"nameLocation": "7902:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "7894:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7769:147:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7925:0:0"
									},
									"scope": 359,
									"src": "7750:176:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "7932:1251:0",
										"text": "@notice Creates a new pool (with a custom strategy)\n @dev 'msg.sender' must be a member or owner of a profile to create a pool with or without a custom strategy, The encoded data\n      will be specific to a given strategy requirements, reference the strategy implementation of 'initialize()'. The strategy\n      address passed must not be a cloneable strategy. The strategy address passed must not be the zero address. 'msg.sender' must\n      be a member or owner of the profile id passed as '_profileId'.\n @param _profileId The 'profileId' of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\n @param _strategy The address of the deployed custom strategy\n @param _initStrategyData The data to initialize the strategy\n @param _token The address of the token you want to use in your pool\n @param _amount The amount of the token you want to deposit into the pool on initialization\n @param _metadata The 'Metadata' of the pool, this uses our 'Meatdata.sol' struct (consistent throughout the protocol)\n @param _managers The managers of the pool, and can be added/removed later by the pool admin\n @return poolId The ID of the pool"
									},
									"functionSelector": "e1007d4a",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPoolWithCustomStrategy",
									"nameLocation": "9197:28:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "9243:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "9235:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "9271:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "9263:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "_initStrategyData",
												"nameLocation": "9303:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "9290:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9290:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "9338:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "9330:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9362:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "9354:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "9395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "9379:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$824_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 122,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 121,
														"name": "Metadata",
														"nameLocations": [
															"9379:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 824,
														"src": "9379:8:0"
													},
													"referencedDeclaration": 824,
													"src": "9379:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$824_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "_managers",
												"nameLocation": "9431:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "9414:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 124,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9414:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 125,
													"nodeType": "ArrayTypeName",
													"src": "9414:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9225:221:0"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "9481:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "9473:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9472:16:0"
									},
									"scope": 359,
									"src": "9188:301:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "9495:795:0",
										"text": "@notice Creates a new pool (by cloning a cloneable strategies).\n @dev 'msg.sender' must be owner or member of the profile id passed as '_profileId'.\n @param _profileId The ID of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\n @param _strategy The address of the strategy contract the pool will use.\n @param _initStrategyData The data to initialize the strategy\n @param _token The address of the token\n @param _amount The amount of the token\n @param _metadata The metadata of the pool\n @param _managers The managers of the pool\n @custom:initstrategydata The encoded data will be specific to a given strategy requirements,\n    reference the strategy implementation of 'initialize()'"
									},
									"functionSelector": "77da8caf",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "10304:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "10332:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "10324:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "10360:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "10352:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "_initStrategyData",
												"nameLocation": "10392:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "10379:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10379:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "10427:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "10419:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "10443:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "10484:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "10468:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$824_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 144,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 143,
														"name": "Metadata",
														"nameLocations": [
															"10468:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 824,
														"src": "10468:8:0"
													},
													"referencedDeclaration": 824,
													"src": "10468:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$824_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "_managers",
												"nameLocation": "10520:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "10503:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 146,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10503:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 147,
													"nodeType": "ArrayTypeName",
													"src": "10503:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10314:221:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "10570:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "10562:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10561:16:0"
									},
									"scope": 359,
									"src": "10295:283:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "10584:186:0",
										"text": "@notice Updates a pools metadata.\n @dev 'msg.sender' must be a pool admin.\n @param _poolId The ID of the pool to update\n @param _metadata The new metadata to set"
									},
									"functionSelector": "5f9ca138",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePoolMetadata",
									"nameLocation": "10784:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "10811:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "10803:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "10836:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "10820:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$824_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 158,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 157,
														"name": "Metadata",
														"nameLocations": [
															"10820:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 824,
														"src": "10820:8:0"
													},
													"referencedDeclaration": 824,
													"src": "10820:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$824_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10802:44:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10855:0:0"
									},
									"scope": 359,
									"src": "10775:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "10862:149:0",
										"text": "@notice Update the registry address.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _registry The new registry address"
									},
									"functionSelector": "1a5da6c8",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRegistry",
									"nameLocation": "11025:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "11048:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "11040:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11040:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11039:19:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11067:0:0"
									},
									"scope": 359,
									"src": "11016:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "11074:150:0",
										"text": "@notice Updates the treasury address.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _treasury The new treasury address"
									},
									"functionSelector": "7f51bb1f",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTreasury",
									"nameLocation": "11238:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "11269:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "11253:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11253:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11252:27:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11288:0:0"
									},
									"scope": 359,
									"src": "11229:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "11295:164:0",
										"text": "@notice Updates the percentage for the fee.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _percentFee The new percentage for the fee"
									},
									"functionSelector": "f54fc4a0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePercentFee",
									"nameLocation": "11473:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "_percentFee",
												"nameLocation": "11498:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "11490:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11489:21:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11519:0:0"
									},
									"scope": 359,
									"src": "11464:56:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "11526:133:0",
										"text": "@notice Updates the base fee.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _baseFee The new base fee"
									},
									"functionSelector": "8e690186",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateBaseFee",
									"nameLocation": "11673:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "_baseFee",
												"nameLocation": "11695:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "11687:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11686:18:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11713:0:0"
									},
									"scope": 359,
									"src": "11664:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "11720:175:0",
										"text": "@notice Adds a strategy to the cloneable strategies.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _strategy The address of the strategy to add"
									},
									"functionSelector": "41bba0b4",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addToCloneableStrategies",
									"nameLocation": "11909:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "11942:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "11934:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11933:19:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11961:0:0"
									},
									"scope": 359,
									"src": "11900:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "11968:183:0",
										"text": "@notice Removes a strategy from the cloneable strategies.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _strategy The address of the strategy to remove"
									},
									"functionSelector": "031e2fa1",
									"id": 198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeFromCloneableStrategies",
									"nameLocation": "12165:29:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "12203:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "12195:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12194:19:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12222:0:0"
									},
									"scope": 359,
									"src": "12156:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "12229:214:0",
										"text": "@notice Adds a pool manager to the pool.\n @dev 'msg.sender' must be a pool admin.\n @param _poolId The ID of the pool to add the manager to\n @param _manager The address of the manager to add"
									},
									"functionSelector": "2cf682b0",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addPoolManager",
									"nameLocation": "12457:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "12480:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "12472:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "_manager",
												"nameLocation": "12497:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "12489:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12471:35:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12515:0:0"
									},
									"scope": 359,
									"src": "12448:68:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "12522:227:0",
										"text": "@notice Removes a pool manager from the pool.\n @dev 'msg.sender' must be a pool admin.\n @param _poolId The ID of the pool to remove the manager from\n @param _manager The address of the manager to remove"
									},
									"functionSelector": "7f5a70bd",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removePoolManager",
									"nameLocation": "12763:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "12789:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "12781:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "_manager",
												"nameLocation": "12806:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "12798:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:35:0"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12824:0:0"
									},
									"scope": 359,
									"src": "12754:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "12831:199:0",
										"text": "@notice Recovers funds from a pool.\n @dev 'msg.sender' must be a pool admin.\n @param _token The token to recover\n @param _recipient The address to send the recovered funds to"
									},
									"functionSelector": "24ae6a27",
									"id": 222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recoverFunds",
									"nameLocation": "13044:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "13065:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "13057:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "13081:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "13073:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13056:36:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13101:0:0"
									},
									"scope": 359,
									"src": "13035:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "13108:197:0",
										"text": "@notice Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy.\n @param _poolId The ID of the pool to register the recipient for"
									},
									"functionSelector": "075c0e9c",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerRecipient",
									"nameLocation": "13319:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "13345:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "13337:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "13367:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "13354:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13354:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13336:37:0"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "13400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13399:9:0"
									},
									"scope": 359,
									"src": "13310:99:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "13415:215:0",
										"text": "@notice Registers a batch of recipients.\n @param _poolIds The pool ID's to register the recipients for\n @param _data The data to pass to the strategy and may be handled differently by each strategy"
									},
									"functionSelector": "1a20bd88",
									"id": 245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchRegisterRecipient",
									"nameLocation": "13644:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "_poolIds",
												"nameLocation": "13684:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "13667:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 234,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13667:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 235,
													"nodeType": "ArrayTypeName",
													"src": "13667:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "13709:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "13694:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 237,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "13694:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 238,
													"nodeType": "ArrayTypeName",
													"src": "13694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13666:49:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "13750:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 241,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13750:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 242,
													"nodeType": "ArrayTypeName",
													"src": "13750:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13749:18:0"
									},
									"scope": 359,
									"src": "13635:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "13774:300:0",
										"text": "@notice Funds a pool.\n @dev 'msg.value' must be greater than 0 if the token is the native token\n       or '_amount' must be greater than 0 if the token is not the native token.\n @param _poolId The ID of the pool to fund\n @param _amount The amount to fund the pool with"
									},
									"functionSelector": "5acd6fac",
									"id": 253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fundPool",
									"nameLocation": "14088:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "14105:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "14097:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "14122:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "14114:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14096:34:0"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14147:0:0"
									},
									"scope": 359,
									"src": "14079:69:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "14154:287:0",
										"text": "@notice Allocates funds to a recipient.\n @dev Each strategy will handle the allocation of funds differently.\n @param _poolId The ID of the pool to allocate funds from\n @param _data The data to pass to the strategy and may be handled differently by each strategy."
									},
									"functionSelector": "2ec38188",
									"id": 261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allocate",
									"nameLocation": "14455:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "14472:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "14464:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "14494:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "14481:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 257,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14481:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14463:37:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14517:0:0"
									},
									"scope": 359,
									"src": "14446:72:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "14524:126:0",
										"text": "@notice Allocates funds to multiple recipients.\n @dev Each strategy will handle the allocation of funds differently"
									},
									"functionSelector": "c6dff1cf",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchAllocate",
									"nameLocation": "14664:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "_poolIds",
												"nameLocation": "14697:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "14678:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 263,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14678:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 264,
													"nodeType": "ArrayTypeName",
													"src": "14678:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "_datas",
												"nameLocation": "14722:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "14707:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 266,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "14707:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 267,
													"nodeType": "ArrayTypeName",
													"src": "14707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14677:52:0"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14738:0:0"
									},
									"scope": 359,
									"src": "14655:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "14745:391:0",
										"text": "@notice Distributes funds to recipients and emits {Distributed} event if successful\n @dev Each strategy will handle the distribution of funds differently\n @param _poolId The ID of the pool to distribute from\n @param _recipientIds The recipient ids to distribute to\n @param _data The data to pass to the strategy and may be handled differently by each strategy"
									},
									"functionSelector": "3a5fbd92",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nameLocation": "15150:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "15169:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "15161:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "15195:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "15178:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 275,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "15178:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 276,
													"nodeType": "ArrayTypeName",
													"src": "15178:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "15223:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "15210:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 278,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15210:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15160:69:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15238:0:0"
									},
									"scope": 359,
									"src": "15141:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "15348:221:0",
										"text": "@notice Checks if an address is a pool admin.\n @param _poolId The ID of the pool to check\n @param _address The address to check\n @return 'true' if the '_address' is a pool admin, otherwise 'false'"
									},
									"functionSelector": "ab3febc6",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPoolAdmin",
									"nameLocation": "15583:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "15603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "15595:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "15620:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "15612:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15594:35:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "15653:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15653:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15652:6:0"
									},
									"scope": 359,
									"src": "15574:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "15665:225:0",
										"text": "@notice Checks if an address is a pool manager.\n @param _poolId The ID of the pool to check\n @param _address The address to check\n @return 'true' if the '_address' is a pool manager, otherwise 'false'"
									},
									"functionSelector": "29e40d4b",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPoolManager",
									"nameLocation": "15904:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "15926:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "15918:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "15943:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "15935:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15917:35:0"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "15976:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15976:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15975:6:0"
									},
									"scope": 359,
									"src": "15895:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "15988:222:0",
										"text": "@notice Checks if a strategy is cloneable (is in the cloneableStrategies mapping).\n @param _strategy The address of the strategy to check\n @return 'true' if the '_strategy' is cloneable, otherwise 'false'"
									},
									"functionSelector": "ab2ec589",
									"id": 310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isCloneableStrategy",
									"nameLocation": "16224:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "16252:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "16244:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16243:19:0"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "16286:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16286:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16285:6:0"
									},
									"scope": 359,
									"src": "16215:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "16298:205:0",
										"text": "@notice Returns the address of the strategy for a given 'poolId'\n @param _poolId The ID of the pool to check\n @return strategy The address of the strategy for the ID of the pool passed in"
									},
									"functionSelector": "cfc0cc34",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStrategy",
									"nameLocation": "16517:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "16537:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "16529:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16528:17:0"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "16569:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16568:9:0"
									},
									"scope": 359,
									"src": "16508:70:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "16584:105:0",
										"text": "@notice Returns the current percent fee\n @return percentFee The current percentage for the fee"
									},
									"functionSelector": "4edbaadc",
									"id": 324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPercentFee",
									"nameLocation": "16703:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16716:2:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "16742:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16741:9:0"
									},
									"scope": 359,
									"src": "16694:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "16757:85:0",
										"text": "@notice Returns the current base fee\n @return baseFee The current base fee"
									},
									"functionSelector": "15e812ad",
									"id": 330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBaseFee",
									"nameLocation": "16856:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16866:2:0"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "16892:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16891:9:0"
									},
									"scope": 359,
									"src": "16847:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "16907:102:0",
										"text": "@notice Returns the current treasury address\n @return treasury The current treasury address"
									},
									"functionSelector": "3b19e84a",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTreasury",
									"nameLocation": "17023:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17034:2:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "17060:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17060:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17059:17:0"
									},
									"scope": 359,
									"src": "17014:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "17083:102:0",
										"text": "@notice Returns the current registry address\n @return registry The current registry address"
									},
									"functionSelector": "5ab1bd53",
									"id": 343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRegistry",
									"nameLocation": "17199:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17210:2:0"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "17236:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IRegistry_$552",
													"typeString": "contract IRegistry"
												},
												"typeName": {
													"id": 340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 339,
														"name": "IRegistry",
														"nameLocations": [
															"17236:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 552,
														"src": "17236:9:0"
													},
													"referencedDeclaration": 552,
													"src": "17236:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRegistry_$552",
														"typeString": "contract IRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17235:11:0"
									},
									"scope": 359,
									"src": "17190:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "17253:181:0",
										"text": "@notice Returns the 'Pool' struct for a given 'poolId'\n @param _poolId The ID of the pool to check\n @return pool The 'Pool' struct for the ID of the pool passed in"
									},
									"functionSelector": "068bcd8d",
									"id": 352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "17448:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "17464:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "17456:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17455:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "17496:11:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Pool_$24_memory_ptr",
													"typeString": "struct IAllo.Pool"
												},
												"typeName": {
													"id": 349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 348,
														"name": "Pool",
														"nameLocations": [
															"17496:4:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 24,
														"src": "17496:4:0"
													},
													"referencedDeclaration": 24,
													"src": "17496:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$24_storage_ptr",
														"typeString": "struct IAllo.Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17495:13:0"
									},
									"scope": 359,
									"src": "17439:70:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "17515:140:0",
										"text": "@notice Returns the current fee denominator\n @dev 1e18 represents 100%\n @return feeDenominator The current fee denominator"
									},
									"functionSelector": "f4e1fc41",
									"id": 358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeDenominator",
									"nameLocation": "17669:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17686:2:0"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "17712:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17711:9:0"
									},
									"scope": 359,
									"src": "17660:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 360,
							"src": "4531:13192:0",
							"usedErrors": [],
							"usedEvents": [
								41,
								49,
								58,
								65,
								70,
								75,
								80,
								85,
								90,
								95
							]
						}
					],
					"src": "42:17682:0"
				},
				"id": 0
			},
			"lib/allo-v2/contracts/core/interfaces/IRegistry.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
					"exportedSymbols": {
						"IRegistry": [
							552
						],
						"Metadata": [
							824
						]
					},
					"id": 553,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 361,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/libraries/Metadata.sol",
							"file": "../libraries/Metadata.sol",
							"id": 363,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 553,
							"sourceUnit": 825,
							"src": "80:51:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 362,
										"name": "Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 824,
										"src": "88:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 364,
								"nodeType": "StructuredDocumentation",
								"src": "4124:931:1",
								"text": "@title IRegistry Interface\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice Interface for the Registry contract and exposes all functions needed to use the Registry\n         within the Allo protocol.\n @dev The Registry Interface is used to interact with the Allo protocol and create profiles\n      that can be used to interact with the Allo protocol. The Registry is the main contract\n      that all other contracts interact with to get the 'Profile' information needed to\n      interact with the Allo protocol. The Registry is also used to create new profiles\n      and update existing profiles. The Registry is also used to add and remove members\n      from a profile. The Registry will not always be used in a strategy and will depend on\n      the strategy being used."
							},
							"fullyImplemented": false,
							"id": 552,
							"linearizedBaseContracts": [
								552
							],
							"name": "IRegistry",
							"nameLocation": "5065:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IRegistry.Profile",
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "5175:60:1",
										"text": "@dev The Profile struct that all profiles are based from"
									},
									"id": 379,
									"members": [
										{
											"constant": false,
											"id": 367,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "5273:2:1",
											"nodeType": "VariableDeclaration",
											"scope": 379,
											"src": "5265:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 366,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "5265:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 369,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "5293:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 379,
											"src": "5285:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 368,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5285:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 371,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "5315:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 379,
											"src": "5308:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 370,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "5308:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 374,
											"mutability": "mutable",
											"name": "metadata",
											"nameLocation": "5338:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 379,
											"src": "5329:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Metadata_$824_storage_ptr",
												"typeString": "struct Metadata"
											},
											"typeName": {
												"id": 373,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 372,
													"name": "Metadata",
													"nameLocations": [
														"5329:8:1"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 824,
													"src": "5329:8:1"
												},
												"referencedDeclaration": 824,
												"src": "5329:8:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$824_storage_ptr",
													"typeString": "struct Metadata"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 376,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "5364:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 379,
											"src": "5356:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 375,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5356:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 378,
											"mutability": "mutable",
											"name": "anchor",
											"nameLocation": "5387:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 379,
											"src": "5379:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 377,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5379:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Profile",
									"nameLocation": "5247:7:1",
									"nodeType": "StructDefinition",
									"scope": 552,
									"src": "5240:160:1",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "5500:81:1",
										"text": "@dev Emitted when a profile is created. This will return your anchor address."
									},
									"eventSelector": "1e28352ff00d67474b59b87e6817d6ba65daa0130446266db8640214d8b80609",
									"id": 395,
									"name": "ProfileCreated",
									"nameLocation": "5592:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "5632:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5616:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "5651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5643:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5665:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5658:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5658:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "5680:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5671:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$824_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 388,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 387,
														"name": "Metadata",
														"nameLocations": [
															"5671:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 824,
														"src": "5671:8:1"
													},
													"referencedDeclaration": 824,
													"src": "5671:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$824_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5698:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5690:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5690:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"indexed": false,
												"mutability": "mutable",
												"name": "anchor",
												"nameLocation": "5713:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5705:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5705:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5606:119:1"
									},
									"src": "5586:140:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "5732:116:1",
										"text": "@dev Emitted when a profile name is updated. This will update the anchor when the name is updated and return it."
									},
									"eventSelector": "54cd733148631b9ff1cb945f2d0dcd33c0692e154763bfa2f35e2d10a76c432f",
									"id": 404,
									"name": "ProfileNameUpdated",
									"nameLocation": "5859:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "5894:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "5878:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 397,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5912:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "5905:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5905:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"indexed": false,
												"mutability": "mutable",
												"name": "anchor",
												"nameLocation": "5926:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "5918:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5918:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5877:56:1"
									},
									"src": "5853:81:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "5940:54:1",
										"text": "@dev Emitted when a profile's metadata is updated."
									},
									"eventSelector": "a366054a574e4f861cb295fd23b5440c5119c1ba329c36f5dfeb5643537cb0f3",
									"id": 412,
									"name": "ProfileMetadataUpdated",
									"nameLocation": "6005:22:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "6044:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "6028:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 406,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "6064:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "6055:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$824_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 409,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 408,
														"name": "Metadata",
														"nameLocations": [
															"6055:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 824,
														"src": "6055:8:1"
													},
													"referencedDeclaration": 824,
													"src": "6055:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$824_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:46:1"
									},
									"src": "5999:75:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "6080:49:1",
										"text": "@dev Emitted when a profile owner is updated."
									},
									"eventSelector": "fd9ad63830df7bdf1586c8293dc88a30864cb43e9037e7afdb2c7210facf217d",
									"id": 419,
									"name": "ProfileOwnerUpdated",
									"nameLocation": "6140:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "6176:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "6160:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 414,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6195:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "6187:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6187:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:42:1"
									},
									"src": "6134:68:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "6208:57:1",
										"text": "@dev Emitted when a profile pending owner is updated."
									},
									"eventSelector": "21fe5cd61055ef88f636a264885b927f3ec2b380b6053a6b4a7495a6336a95c8",
									"id": 426,
									"name": "ProfilePendingOwnerUpdated",
									"nameLocation": "6276:26:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "6319:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "6303:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 421,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6303:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"indexed": false,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nameLocation": "6338:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "6330:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6330:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6302:49:1"
									},
									"src": "6270:82:1"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "6461:192:1",
										"text": "@dev Returns the 'Profile' for a '_profileId' passed\n @param _profileId The 'profileId' to return the 'Profile' for\n @return profile The 'Profile' for the '_profileId' passed"
									},
									"functionSelector": "0114cf0a",
									"id": 435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProfileById",
									"nameLocation": "6667:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "6690:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "6682:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 428,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6681:20:1"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "profile",
												"nameLocation": "6740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "6725:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Profile_$379_memory_ptr",
													"typeString": "struct IRegistry.Profile"
												},
												"typeName": {
													"id": 432,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 431,
														"name": "Profile",
														"nameLocations": [
															"6725:7:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 379,
														"src": "6725:7:1"
													},
													"referencedDeclaration": 379,
													"src": "6725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Profile_$379_storage_ptr",
														"typeString": "struct IRegistry.Profile"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6724:24:1"
									},
									"scope": 552,
									"src": "6658:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "6755:181:1",
										"text": "@dev Returns the 'Profile' for an '_anchor' passed\n @param _anchor The 'anchor' to return the 'Profile' for\n @return profile The 'Profile' for the '_anchor' passed"
									},
									"functionSelector": "dd93da43",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProfileByAnchor",
									"nameLocation": "6950:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "_anchor",
												"nameLocation": "6977:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "6969:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6968:17:1"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "profile",
												"nameLocation": "7024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "7009:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Profile_$379_memory_ptr",
													"typeString": "struct IRegistry.Profile"
												},
												"typeName": {
													"id": 441,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 440,
														"name": "Profile",
														"nameLocations": [
															"7009:7:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 379,
														"src": "7009:7:1"
													},
													"referencedDeclaration": 379,
													"src": "7009:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Profile_$379_storage_ptr",
														"typeString": "struct IRegistry.Profile"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7008:24:1"
									},
									"scope": 552,
									"src": "6941:92:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "7039:415:1",
										"text": "@dev Returns a boolean if the '_account' is a member or owner of the '_profileId' passed in\n @param _profileId The 'profileId' to check if the '_account' is a member or owner of\n @param _account The 'account' to check if they are a member or owner of the '_profileId' passed in\n @return isOwnerOrMemberOfProfile A boolean if the '_account' is a member or owner of the '_profileId' passed in"
									},
									"functionSelector": "5e8a7915",
									"id": 454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOwnerOrMemberOfProfile",
									"nameLocation": "7468:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "7501:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7493:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 446,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "7521:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7513:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7513:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7492:38:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "isOwnerOrMemberOfProfile",
												"nameLocation": "7583:24:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7578:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 451,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7578:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7577:31:1"
									},
									"scope": 552,
									"src": "7459:150:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "7615:367:1",
										"text": "@dev Returns a boolean if the '_account' is an owner of the '_profileId' passed in\n @param _profileId The 'profileId' to check if the '_account' is an owner of\n @param _owner The 'owner' to check if they are an owner of the '_profileId' passed in\n @return isOwnerOfProfile A boolean if the '_account' is an owner of the '_profileId' passed in"
									},
									"functionSelector": "39b86b8c",
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOwnerOfProfile",
									"nameLocation": "7996:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "8021:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "8013:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 456,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "8041:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "8033:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8012:36:1"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "isOwnerOfProfile",
												"nameLocation": "8077:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "8072:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 461,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8072:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8071:23:1"
									},
									"scope": 552,
									"src": "7987:108:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "8101:370:1",
										"text": "@dev Returns a boolean if the '_account' is a member of the '_profileId' passed in\n @param _profileId The 'profileId' to check if the '_account' is a member of\n @param _member The 'member' to check if they are a member of the '_profileId' passed in\n @return isMemberOfProfile A boolean if the '_account' is a member of the '_profileId' passed in"
									},
									"functionSelector": "0ec1fbac",
									"id": 474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isMemberOfProfile",
									"nameLocation": "8485:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "8511:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "8503:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "_member",
												"nameLocation": "8531:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "8523:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8523:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8502:37:1"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "isMemberOfProfile",
												"nameLocation": "8568:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "8563:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8563:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8562:24:1"
									},
									"scope": 552,
									"src": "8476:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "8729:677:1",
										"text": "@dev Creates a new 'Profile' and returns the 'profileId' of the new profile\n Note: The 'name' and 'nonce' are used to generate the 'anchor' address\n Requirements: None, anyone can create a new profile\n @param _nonce The nonce to use to generate the 'anchor' address\n @param _name The name to use to generate the 'anchor' address\n @param _metadata The 'Metadata' to use to generate the 'anchor' address\n @param _owner The 'owner' to use to generate the 'anchor' address\n @param _members The 'members' to use to generate the 'anchor' address\n @return profileId The 'profileId' of the new profile"
									},
									"functionSelector": "3a92f65f",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createProfile",
									"nameLocation": "9420:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "9451:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "9443:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9443:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "9481:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "9467:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 478,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9467:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "9512:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "9496:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$824_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "Metadata",
														"nameLocations": [
															"9496:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 824,
														"src": "9496:8:1"
													},
													"referencedDeclaration": 824,
													"src": "9496:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$824_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "9539:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "9531:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9531:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "_members",
												"nameLocation": "9572:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "9555:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 485,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9555:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 486,
													"nodeType": "ArrayTypeName",
													"src": "9555:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9433:153:1"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "9613:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "9605:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 489,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9605:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9604:19:1"
									},
									"scope": 552,
									"src": "9411:213:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "9630:625:1",
										"text": "@dev Updates the 'name' of the '_profileId' passed in and returns the new 'anchor' address\n Requirements: Only the 'Profile' owner can update the name\n Note: The 'name' and 'nonce' are used to generate the 'anchor' address and this will update the 'anchor'\n       so please use caution. You can always recreate your 'anchor' address by updating the name back\n       to the original name used to create the profile.\n @param _profileId The 'profileId' to update the name for\n @param _name The new 'name' value\n @return anchor The new 'anchor' address"
									},
									"functionSelector": "cf189ff2",
									"id": 502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProfileName",
									"nameLocation": "10269:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "10295:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "10287:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 494,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "10321:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "10307:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 496,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10307:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10286:41:1"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "anchor",
												"nameLocation": "10354:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "10346:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10346:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10345:16:1"
									},
									"scope": 552,
									"src": "10260:102:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "10368:267:1",
										"text": "@dev Updates the 'Metadata' of the '_profileId' passed in\n Requirements: Only the 'Profile' owner can update the metadata\n @param _profileId The 'profileId' to update the metadata for\n @param _metadata The new 'Metadata' value"
									},
									"functionSelector": "ac402839",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProfileMetadata",
									"nameLocation": "10649:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "10679:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "10671:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 504,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10671:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "10707:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "10691:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$824_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 507,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 506,
														"name": "Metadata",
														"nameLocations": [
															"10691:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 824,
														"src": "10691:8:1"
													},
													"referencedDeclaration": 824,
													"src": "10691:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$824_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10670:47:1"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10726:0:1"
									},
									"scope": 552,
									"src": "10640:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "10733:291:1",
										"text": "@dev Updates the pending 'owner' of the '_profileId' passed in\n Requirements: Only the 'Profile' owner can update the pending owner\n @param _profileId The 'profileId' to update the pending owner for\n @param _pendingOwner The new pending 'owner' value"
									},
									"functionSelector": "3b66dacd",
									"id": 519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProfilePendingOwner",
									"nameLocation": "11038:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "11072:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "11064:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11064:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "_pendingOwner",
												"nameLocation": "11092:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "11084:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11084:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11063:43:1"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11115:0:1"
									},
									"scope": 552,
									"src": "11029:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "11122:222:1",
										"text": "@dev Accepts the pending 'owner' of the '_profileId' passed in\n Requirements: Only the pending owner can accept the ownership\n @param _profileId The 'profileId' to accept the ownership for"
									},
									"functionSelector": "2497f3c6",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptProfileOwnership",
									"nameLocation": "11358:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "11389:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "11381:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 521,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11381:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11380:20:1"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11409:0:1"
									},
									"scope": 552,
									"src": "11349:61:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "11416:263:1",
										"text": "@dev Adds members to the '_profileId' passed in\n Requirements: Only the 'Profile' owner can add members\n @param _profileId The 'profileId' to add members to\n @param _members The members to add to the '_profileId' passed in"
									},
									"functionSelector": "5063f361",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addMembers",
									"nameLocation": "11693:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "11712:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "11704:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11704:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "_members",
												"nameLocation": "11741:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "11724:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 529,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11724:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 530,
													"nodeType": "ArrayTypeName",
													"src": "11724:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11703:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11759:0:1"
									},
									"scope": 552,
									"src": "11684:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "11766:281:1",
										"text": "@dev Removes members from the '_profileId' passed in\n Requirements: Only the 'Profile' owner can remove members\n @param _profileId The 'profileId' to remove members from\n @param _members The members to remove from the '_profileId' passed in"
									},
									"functionSelector": "e0cf1e4c",
									"id": 543,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeMembers",
									"nameLocation": "12061:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "12083:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12075:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 536,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "_members",
												"nameLocation": "12112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12095:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 538,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12095:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 539,
													"nodeType": "ArrayTypeName",
													"src": "12095:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12074:47:1"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12130:0:1"
									},
									"scope": 552,
									"src": "12052:79:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "12137:230:1",
										"text": "@dev Recovers funds from the contract\n Requirements: Must be the Allo owner\n @param _token The token you want to use to recover funds\n @param _recipient The recipient of the recovered funds"
									},
									"functionSelector": "24ae6a27",
									"id": 551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recoverFunds",
									"nameLocation": "12381:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "12402:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "12394:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12394:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "12418:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "12410:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12393:36:1"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12438:0:1"
									},
									"scope": 552,
									"src": "12372:67:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 553,
							"src": "5055:7386:1",
							"usedErrors": [],
							"usedEvents": [
								395,
								404,
								412,
								419,
								426
							]
						}
					],
					"src": "32:12410:1"
				},
				"id": 1
			},
			"lib/allo-v2/contracts/core/interfaces/IStrategy.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
					"exportedSymbols": {
						"IAllo": [
							359
						],
						"IStrategy": [
							721
						]
					},
					"id": 722,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 554,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:2"
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/interfaces/IAllo.sol",
							"file": "./IAllo.sol",
							"id": 556,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 722,
							"sourceUnit": 360,
							"src": "82:34:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 555,
										"name": "IAllo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 359,
										"src": "90:5:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStrategy",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 557,
								"nodeType": "StructuredDocumentation",
								"src": "4109:368:2",
								"text": "@title IStrategy Interface\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co> @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice BaseStrategy is the base contract that all strategies should inherit from and uses this interface."
							},
							"fullyImplemented": false,
							"id": 721,
							"linearizedBaseContracts": [
								721
							],
							"name": "IStrategy",
							"nameLocation": "4488:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IStrategy.Status",
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "4598:62:2",
										"text": "@notice The Status enum that all recipients are based from"
									},
									"id": 566,
									"members": [
										{
											"id": 559,
											"name": "None",
											"nameLocation": "4687:4:2",
											"nodeType": "EnumValue",
											"src": "4687:4:2"
										},
										{
											"id": 560,
											"name": "Pending",
											"nameLocation": "4701:7:2",
											"nodeType": "EnumValue",
											"src": "4701:7:2"
										},
										{
											"id": 561,
											"name": "Accepted",
											"nameLocation": "4718:8:2",
											"nodeType": "EnumValue",
											"src": "4718:8:2"
										},
										{
											"id": 562,
											"name": "Rejected",
											"nameLocation": "4736:8:2",
											"nodeType": "EnumValue",
											"src": "4736:8:2"
										},
										{
											"id": 563,
											"name": "Appealed",
											"nameLocation": "4754:8:2",
											"nodeType": "EnumValue",
											"src": "4754:8:2"
										},
										{
											"id": 564,
											"name": "InReview",
											"nameLocation": "4772:8:2",
											"nodeType": "EnumValue",
											"src": "4772:8:2"
										},
										{
											"id": 565,
											"name": "Canceled",
											"nameLocation": "4790:8:2",
											"nodeType": "EnumValue",
											"src": "4790:8:2"
										}
									],
									"name": "Status",
									"nameLocation": "4670:6:2",
									"nodeType": "EnumDefinition",
									"src": "4665:139:2"
								},
								{
									"canonicalName": "IStrategy.PayoutSummary",
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "4810:57:2",
										"text": "@notice Payout summary struct to hold the payout data"
									},
									"id": 572,
									"members": [
										{
											"constant": false,
											"id": 569,
											"mutability": "mutable",
											"name": "recipientAddress",
											"nameLocation": "4911:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 572,
											"src": "4903:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 568,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4903:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 571,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4945:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 572,
											"src": "4937:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 570,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4937:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PayoutSummary",
									"nameLocation": "4879:13:2",
									"nodeType": "StructDefinition",
									"scope": 721,
									"src": "4872:86:2",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "5058:155:2",
										"text": "@notice Emitted when strategy is initialized.\n @param poolId The ID of the pool\n @param data The data passed to the 'initialize' function"
									},
									"eventSelector": "91efa3d50feccde0d0d202f8ae5c41ca0b2be614cebcb2bd2f4b019396e6568a",
									"id": 579,
									"name": "Initialized",
									"nameLocation": "5224:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"indexed": false,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "5244:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "5236:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5258:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "5252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 576,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5252:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5235:28:2"
									},
									"src": "5218:46:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "5270:207:2",
										"text": "@notice Emitted when a recipient is registered.\n @param recipientId The ID of the recipient\n @param data The data passed to the 'registerRecipient' function\n @param sender The sender"
									},
									"eventSelector": "a197306e3dd5494a61a695381aa809a53b8e377a685e84e404a85d5a8da6cc62",
									"id": 588,
									"name": "Registered",
									"nameLocation": "5488:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipientId",
												"nameLocation": "5515:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "5499:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5499:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5534:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "5528:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 583,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5528:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5548:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "5540:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5540:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5498:57:2"
									},
									"src": "5482:74:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "5562:188:2",
										"text": "@notice Emitted when a recipient is allocated to.\n @param recipientId The ID of the recipient\n @param amount The amount allocated\n @param token The token allocated"
									},
									"eventSelector": "463ffc2cf8b1596445c417388ed30e53eb67cf6668cb2be7f0addf8a78c8441b",
									"id": 599,
									"name": "Allocated",
									"nameLocation": "5761:9:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipientId",
												"nameLocation": "5787:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "5771:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5771:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5808:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "5800:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5800:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5824:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "5816:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5839:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "5831:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5831:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5770:76:2"
									},
									"src": "5755:92:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "5853:223:2",
										"text": "@notice Emitted when tokens are distributed.\n @param recipientId The ID of the recipient\n @param recipientAddress The recipient\n @param amount The amount distributed\n @param sender The sender"
									},
									"eventSelector": "b5b51454adfa840bd593658325a60a50b0216f12eb5d2937efe6cea935675b7d",
									"id": 610,
									"name": "Distributed",
									"nameLocation": "6087:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipientId",
												"nameLocation": "6115:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "6099:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6099:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipientAddress",
												"nameLocation": "6136:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "6128:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6128:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6162:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "6154:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6154:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6178:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "6170:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6170:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6098:87:2"
									},
									"src": "6081:105:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "6192:99:2",
										"text": "@notice Emitted when pool is set to active status.\n @param active The status of the pool"
									},
									"eventSelector": "d94c9bc4d43c51d8dc345a016d8e3d994432fac68e72832e4cf3a616bd8efae0",
									"id": 615,
									"name": "PoolActive",
									"nameLocation": "6302:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"indexed": false,
												"mutability": "mutable",
												"name": "active",
												"nameLocation": "6318:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6313:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6313:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:13:2"
									},
									"src": "6296:30:2"
								},
								{
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "6426:92:2",
										"text": "@notice Getter for the address of the Allo contract.\n @return The 'Allo' contract"
									},
									"functionSelector": "15cc481e",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllo",
									"nameLocation": "6532:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6539:2:2"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6565:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAllo_$359",
													"typeString": "contract IAllo"
												},
												"typeName": {
													"id": 619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 618,
														"name": "IAllo",
														"nameLocations": [
															"6565:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 359,
														"src": "6565:5:2"
													},
													"referencedDeclaration": 359,
													"src": "6565:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllo_$359",
														"typeString": "contract IAllo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6564:7:2"
									},
									"scope": 721,
									"src": "6523:49:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "6578:89:2",
										"text": "@notice Getter for the 'poolId' for this strategy.\n @return The ID of the pool"
									},
									"functionSelector": "38fff2d0",
									"id": 628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolId",
									"nameLocation": "6681:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6690:2:2"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "6716:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6716:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6715:9:2"
									},
									"scope": 721,
									"src": "6672:53:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "6731:87:2",
										"text": "@notice Getter for the 'id' of the strategy.\n @return The ID of the strategy"
									},
									"functionSelector": "42fda9c7",
									"id": 634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStrategyId",
									"nameLocation": "6832:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6845:2:2"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "6871:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 631,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6871:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6870:9:2"
									},
									"scope": 721,
									"src": "6823:57:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "6886:259:2",
										"text": "@notice Checks whether a allocator is valid or not, will usually be true for all strategies\n      and will depend on the strategy implementation.\n @param _allocator The allocator to check\n @return Whether the allocator is valid or not"
									},
									"functionSelector": "4d31d087",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidAllocator",
									"nameLocation": "7159:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "_allocator",
												"nameLocation": "7184:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "7176:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7176:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7175:20:2"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "7219:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7219:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7218:6:2"
									},
									"scope": 721,
									"src": "7150:75:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "7231:85:2",
										"text": "@notice whether pool is active.\n @return Whether the pool is active or not"
									},
									"functionSelector": "df868ed3",
									"id": 648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPoolActive",
									"nameLocation": "7330:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7342:2:2"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "7363:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7363:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7362:6:2"
									},
									"scope": 721,
									"src": "7321:48:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "7375:92:2",
										"text": "@notice Checks the amount of tokens in the pool.\n @return The balance of the pool"
									},
									"functionSelector": "4ab4ba42",
									"id": 654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAmount",
									"nameLocation": "7481:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7494:2:2"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "7520:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7520:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7519:9:2"
									},
									"scope": 721,
									"src": "7472:57:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "7535:104:2",
										"text": "@notice Increases the balance of the pool.\n @param _amount The amount to increase the pool by"
									},
									"functionSelector": "f5b0dfb7",
									"id": 660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increasePoolAmount",
									"nameLocation": "7653:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7680:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "7672:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7672:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7671:17:2"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7697:0:2"
									},
									"scope": 721,
									"src": "7644:54:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "7704:382:2",
										"text": "@notice Checks the status of a recipient probably tracked in a mapping, but will depend on the implementation\n      for example, the OpenSelfRegistration only maps users to bool, and then assumes Accepted for those\n      since there is no need for Pending or Rejected.\n @param _recipientId The ID of the recipient\n @return The status of the recipient"
									},
									"functionSelector": "eb11af93",
									"id": 669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRecipientStatus",
									"nameLocation": "8100:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "_recipientId",
												"nameLocation": "8127:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "8119:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8119:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8118:22:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "8164:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$566",
													"typeString": "enum IStrategy.Status"
												},
												"typeName": {
													"id": 666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 665,
														"name": "Status",
														"nameLocations": [
															"8164:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 566,
														"src": "8164:6:2"
													},
													"referencedDeclaration": 566,
													"src": "8164:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$566",
														"typeString": "enum IStrategy.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8163:8:2"
									},
									"scope": 721,
									"src": "8091:81:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "8178:397:2",
										"text": "@notice Checks the amount allocated to a recipient for distribution.\n @dev Input the values you would send to distribute(), get the amounts each recipient in the array would receive.\n      The encoded '_data' will be determined by the strategy, and will be used to determine the payout.\n @param _recipientIds The IDs of the recipients\n @param _data The encoded data"
									},
									"functionSelector": "b2b878d0",
									"id": 683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPayouts",
									"nameLocation": "8589:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "8617:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "8600:30:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 671,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8600:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 672,
													"nodeType": "ArrayTypeName",
													"src": "8600:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8647:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "8632:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 674,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "8632:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 675,
													"nodeType": "ArrayTypeName",
													"src": "8632:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8599:54:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "8701:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IStrategy.PayoutSummary[]"
												},
												"typeName": {
													"baseType": {
														"id": 679,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 678,
															"name": "PayoutSummary",
															"nameLocations": [
																"8701:13:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 572,
															"src": "8701:13:2"
														},
														"referencedDeclaration": 572,
														"src": "8701:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutSummary_$572_storage_ptr",
															"typeString": "struct IStrategy.PayoutSummary"
														}
													},
													"id": 680,
													"nodeType": "ArrayTypeName",
													"src": "8701:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$572_storage_$dyn_storage_ptr",
														"typeString": "struct IStrategy.PayoutSummary[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8700:24:2"
									},
									"scope": 721,
									"src": "8580:145:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "8825:270:2",
										"text": "@notice\n @dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,\n      use it, and then call super.initialize().\n @param _poolId The ID of the pool\n @param _data The encoded data"
									},
									"functionSelector": "edd146cc",
									"id": 691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "9109:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "9128:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "9120:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9120:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9150:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "9137:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9137:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9119:37:2"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9165:0:2"
									},
									"scope": 721,
									"src": "9100:66:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "9172:655:2",
										"text": "@notice This will register a recipient, set their status (and any other strategy specific values), and\n         return the ID of the recipient.\n @dev Able to change status all the way up to 'Accepted', or to 'Pending' and if there are more steps, additional\n      functions should be added to allow the owner to check this. The owner could also check attestations directly\n      and then accept for instance. The '_data' will be determined by the strategy implementation.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender\n @return The ID of the recipient"
									},
									"functionSelector": "2bbe0cae",
									"id": 701,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerRecipient",
									"nameLocation": "9841:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9872:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "9859:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 693,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9859:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "9887:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "9879:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9879:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9858:37:2"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "9922:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9922:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9921:9:2"
									},
									"scope": 721,
									"src": "9832:99:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "9937:245:2",
										"text": "@notice This will allocate to a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"functionSelector": "ef2920fc",
									"id": 709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allocate",
									"nameLocation": "10196:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10218:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "10205:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10205:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "10233:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "10225:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10204:37:2"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10258:0:2"
									},
									"scope": 721,
									"src": "10187:72:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "10265:271:2",
										"text": "@notice This will distribute funds (tokens) to recipients.\n @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\n this contract will need to track the amount paid already, so that it doesn't double pay."
									},
									"functionSelector": "0a6f0ee9",
									"id": 720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nameLocation": "10550:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "10578:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "10561:30:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 711,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10561:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 712,
													"nodeType": "ArrayTypeName",
													"src": "10561:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10606:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "10593:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 714,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10593:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "10621:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "10613:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10613:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10560:69:2"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10638:0:2"
									},
									"scope": 721,
									"src": "10541:98:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 722,
							"src": "4478:6163:2",
							"usedErrors": [],
							"usedEvents": [
								579,
								588,
								599,
								610,
								615
							]
						}
					],
					"src": "42:10600:2"
				},
				"id": 2
			},
			"lib/allo-v2/contracts/core/libraries/Errors.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/core/libraries/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							814
						]
					},
					"id": 815,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 723,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 724,
								"nodeType": "StructuredDocumentation",
								"src": "4059:211:3",
								"text": "@title Errors\n @author @thelostone-mc <aditya@gitcoin.co>, @KurtMerbeth <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>\n @notice Library containing all custom errors the protocol may revert with."
							},
							"fullyImplemented": true,
							"id": 814,
							"linearizedBaseContracts": [
								814
							],
							"name": "Errors",
							"nameLocation": "4279:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "4386:66:3",
										"text": "@notice Thrown as a general error when input / data is invalid"
									},
									"errorSelector": "7fcce2a9",
									"id": 727,
									"name": "INVALID",
									"nameLocation": "4463:7:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4470:2:3"
									},
									"src": "4457:16:3"
								},
								{
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "4479:49:3",
										"text": "@notice Thrown when mismatch in decoding data"
									},
									"errorSelector": "636e39bb",
									"id": 730,
									"name": "MISMATCH",
									"nameLocation": "4539:8:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4547:2:3"
									},
									"src": "4533:17:3"
								},
								{
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "4556:54:3",
										"text": "@notice Thrown when not enough funds are available"
									},
									"errorSelector": "1f04ddc8",
									"id": 733,
									"name": "NOT_ENOUGH_FUNDS",
									"nameLocation": "4621:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4637:2:3"
									},
									"src": "4615:25:3"
								},
								{
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "4646:46:3",
										"text": "@notice Thrown when user is not authorized"
									},
									"errorSelector": "075fd2b1",
									"id": 736,
									"name": "UNAUTHORIZED",
									"nameLocation": "4703:12:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4715:2:3"
									},
									"src": "4697:21:3"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "4724:51:3",
										"text": "@notice Thrown when address is the zero address"
									},
									"errorSelector": "538ba4f9",
									"id": 739,
									"name": "ZERO_ADDRESS",
									"nameLocation": "4786:12:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4798:2:3"
									},
									"src": "4780:21:3"
								},
								{
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "4807:55:3",
										"text": "@notice Thrown when the function is not implemented"
									},
									"errorSelector": "43f6e4ab",
									"id": 742,
									"name": "NOT_IMPLEMENTED",
									"nameLocation": "4873:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4888:2:3"
									},
									"src": "4867:24:3"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "4897:45:3",
										"text": "@notice Thrown when the value is non-zero"
									},
									"errorSelector": "22d8ddab",
									"id": 745,
									"name": "NON_ZERO_VALUE",
									"nameLocation": "4953:14:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4967:2:3"
									},
									"src": "4947:23:3"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "5070:68:3",
										"text": "@dev Thrown when the nonce passed has been used or not available"
									},
									"errorSelector": "527e0590",
									"id": 748,
									"name": "NONCE_NOT_AVAILABLE",
									"nameLocation": "5149:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5168:2:3"
									},
									"src": "5143:28:3"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "5177:84:3",
										"text": "@dev Thrown when the 'msg.sender' is not the pending owner on ownership transfer"
									},
									"errorSelector": "b4d48c10",
									"id": 751,
									"name": "NOT_PENDING_OWNER",
									"nameLocation": "5272:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5289:2:3"
									},
									"src": "5266:26:3"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "5298:44:3",
										"text": "@dev Thrown if the anchor creation fails"
									},
									"errorSelector": "113b81f0",
									"id": 754,
									"name": "ANCHOR_ERROR",
									"nameLocation": "5353:12:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5365:2:3"
									},
									"src": "5347:21:3"
								},
								{
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "5468:52:3",
										"text": "@notice Thrown when the strategy is not approved"
									},
									"errorSelector": "93699238",
									"id": 757,
									"name": "NOT_APPROVED_STRATEGY",
									"nameLocation": "5531:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5552:2:3"
									},
									"src": "5525:30:3"
								},
								{
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "5561:69:3",
										"text": "@notice Thrown when the strategy is approved and should be cloned"
									},
									"errorSelector": "eeffa721",
									"id": 760,
									"name": "IS_APPROVED_STRATEGY",
									"nameLocation": "5641:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:2:3"
									},
									"src": "5635:29:3"
								},
								{
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5670:85:3",
										"text": "@notice Thrown when the fee is below 1e18 which is the fee percentage denominator"
									},
									"errorSelector": "2fb15b87",
									"id": 763,
									"name": "INVALID_FEE",
									"nameLocation": "5766:11:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5777:2:3"
									},
									"src": "5760:20:3"
								},
								{
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "5880:50:3",
										"text": "@notice Thrown when data is already intialized"
									},
									"errorSelector": "439a74c9",
									"id": 766,
									"name": "ALREADY_INITIALIZED",
									"nameLocation": "5941:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5960:2:3"
									},
									"src": "5935:28:3"
								},
								{
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "5969:53:3",
										"text": "@notice Thrown when data is yet to be initialized"
									},
									"errorSelector": "3da3f98c",
									"id": 769,
									"name": "NOT_INITIALIZED",
									"nameLocation": "6033:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6048:2:3"
									},
									"src": "6027:24:3"
								},
								{
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "6057:50:3",
										"text": "@notice Thrown when an invalid address is used"
									},
									"errorSelector": "5963709b",
									"id": 772,
									"name": "INVALID_ADDRESS",
									"nameLocation": "6118:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6133:2:3"
									},
									"src": "6112:24:3"
								},
								{
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "6142:42:3",
										"text": "@notice Thrown when a pool is inactive"
									},
									"errorSelector": "cfe7975b",
									"id": 775,
									"name": "POOL_INACTIVE",
									"nameLocation": "6195:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6208:2:3"
									},
									"src": "6189:22:3"
								},
								{
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "6217:48:3",
										"text": "@notice Thrown when a pool is already active"
									},
									"errorSelector": "b1862670",
									"id": 778,
									"name": "POOL_ACTIVE",
									"nameLocation": "6276:11:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6287:2:3"
									},
									"src": "6270:20:3"
								},
								{
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "6296:55:3",
										"text": "@notice Thrown when two arrays length are not equal"
									},
									"errorSelector": "7b498056",
									"id": 781,
									"name": "ARRAY_MISMATCH",
									"nameLocation": "6362:14:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6376:2:3"
									},
									"src": "6356:23:3"
								},
								{
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "6385:52:3",
										"text": "@notice Thrown when the registration is invalid."
									},
									"errorSelector": "03b167dd",
									"id": 784,
									"name": "INVALID_REGISTRATION",
									"nameLocation": "6448:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6468:2:3"
									},
									"src": "6442:29:3"
								},
								{
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "6477:48:3",
										"text": "@notice Thrown when the metadata is invalid."
									},
									"errorSelector": "c19e07c5",
									"id": 787,
									"name": "INVALID_METADATA",
									"nameLocation": "6536:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6552:2:3"
									},
									"src": "6530:25:3"
								},
								{
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "6561:54:3",
										"text": "@notice Thrown when the recipient is not accepted."
									},
									"errorSelector": "e4b05bec",
									"id": 790,
									"name": "RECIPIENT_NOT_ACCEPTED",
									"nameLocation": "6626:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6648:2:3"
									},
									"src": "6620:31:3"
								},
								{
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "6657:54:3",
										"text": "@notice Thrown when recipient is already accepted."
									},
									"errorSelector": "41d40fb8",
									"id": 793,
									"name": "RECIPIENT_ALREADY_ACCEPTED",
									"nameLocation": "6722:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6748:2:3"
									},
									"src": "6716:35:3"
								},
								{
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "6757:51:3",
										"text": "@notice Thrown when registration is not active."
									},
									"errorSelector": "b609ed5a",
									"id": 796,
									"name": "REGISTRATION_NOT_ACTIVE",
									"nameLocation": "6819:23:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6842:2:3"
									},
									"src": "6813:32:3"
								},
								{
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "6851:47:3",
										"text": "@notice Thrown when registration is active."
									},
									"errorSelector": "b99c70a8",
									"id": 799,
									"name": "REGISTRATION_ACTIVE",
									"nameLocation": "6909:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6928:2:3"
									},
									"src": "6903:28:3"
								},
								{
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "6937:55:3",
										"text": "@notice Thrown when there is an error in recipient."
									},
									"errorSelector": "f4a513b9",
									"id": 804,
									"name": "RECIPIENT_ERROR",
									"nameLocation": "7003:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "recipientId",
												"nameLocation": "7027:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "7019:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7019:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7018:21:3"
									},
									"src": "6997:43:3"
								},
								{
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "7046:53:3",
										"text": "@notice Thrown when the allocation is not active."
									},
									"errorSelector": "b828c900",
									"id": 807,
									"name": "ALLOCATION_NOT_ACTIVE",
									"nameLocation": "7110:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7131:2:3"
									},
									"src": "7104:30:3"
								},
								{
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "7140:52:3",
										"text": "@notice Thrown when the allocation is not ended."
									},
									"errorSelector": "8a879da2",
									"id": 810,
									"name": "ALLOCATION_NOT_ENDED",
									"nameLocation": "7203:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7223:2:3"
									},
									"src": "7197:29:3"
								},
								{
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "7232:49:3",
										"text": "@notice Thrown when the allocation is active."
									},
									"errorSelector": "077c7060",
									"id": 813,
									"name": "ALLOCATION_ACTIVE",
									"nameLocation": "7292:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7309:2:3"
									},
									"src": "7286:26:3"
								}
							],
							"scope": 815,
							"src": "4270:3044:3",
							"usedErrors": [
								727,
								730,
								733,
								736,
								739,
								742,
								745,
								748,
								751,
								754,
								757,
								760,
								763,
								766,
								769,
								772,
								775,
								778,
								781,
								784,
								787,
								790,
								793,
								796,
								799,
								804,
								807,
								810,
								813
							],
							"usedEvents": []
						}
					],
					"src": "42:7273:3"
				},
				"id": 3
			},
			"lib/allo-v2/contracts/core/libraries/Metadata.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/core/libraries/Metadata.sol",
					"exportedSymbols": {
						"Metadata": [
							824
						]
					},
					"id": 825,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 816,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:4"
						},
						{
							"canonicalName": "Metadata",
							"documentation": {
								"id": 817,
								"nodeType": "StructuredDocumentation",
								"src": "4059:293:4",
								"text": "@title Metadata\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice Metadata is used to define the metadata for the protocol that is used throughout the system."
							},
							"id": 824,
							"members": [
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "protocol",
									"nameLocation": "4474:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 824,
									"src": "4466:16:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 819,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4466:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 823,
									"mutability": "mutable",
									"name": "pointer",
									"nameLocation": "4571:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 824,
									"src": "4564:14:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 822,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4564:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Metadata",
							"nameLocation": "4359:8:4",
							"nodeType": "StructDefinition",
							"scope": 825,
							"src": "4352:229:4",
							"visibility": "public"
						}
					],
					"src": "42:4540:4"
				},
				"id": 4
			},
			"lib/allo-v2/contracts/core/libraries/Native.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/core/libraries/Native.sol",
					"exportedSymbols": {
						"Native": [
							832
						]
					},
					"id": 833,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 826,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Native",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 827,
								"nodeType": "StructuredDocumentation",
								"src": "4059:288:5",
								"text": "@title Native token information\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice This is used to define the address of the native token for the protocol"
							},
							"fullyImplemented": true,
							"id": 832,
							"linearizedBaseContracts": [
								832
							],
							"name": "Native",
							"nameLocation": "4356:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "4369:39:5",
										"text": "@notice Address of the native token"
									},
									"functionSelector": "a0cf0aea",
									"id": 831,
									"mutability": "constant",
									"name": "NATIVE",
									"nameLocation": "4437:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 832,
									"src": "4413:75:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 829,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4413:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
										"id": 830,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4446:42:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
									},
									"visibility": "public"
								}
							],
							"scope": 833,
							"src": "4347:144:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "42:4450:5"
				},
				"id": 5
			},
			"lib/allo-v2/contracts/core/libraries/Transfer.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/core/libraries/Transfer.sol",
					"exportedSymbols": {
						"Native": [
							832
						],
						"SafeTransferLib": [
							1808
						],
						"Transfer": [
							1044
						]
					},
					"id": 1045,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 834,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:6"
						},
						{
							"absolutePath": "lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol",
							"file": "solady/utils/SafeTransferLib.sol",
							"id": 836,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1045,
							"sourceUnit": 1809,
							"src": "90:65:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 835,
										"name": "SafeTransferLib",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1808,
										"src": "98:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/libraries/Native.sol",
							"file": "./Native.sol",
							"id": 837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1045,
							"sourceUnit": 833,
							"src": "178:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 839,
										"name": "Native",
										"nameLocations": [
											"4535:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 832,
										"src": "4535:6:6"
									},
									"id": 840,
									"nodeType": "InheritanceSpecifier",
									"src": "4535:6:6"
								}
							],
							"canonicalName": "Transfer",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 838,
								"nodeType": "StructuredDocumentation",
								"src": "4193:321:6",
								"text": "@title Transfer contract\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice A helper contract to transfer tokens within Allo protocol\n @dev Handles the transfer of tokens to an address"
							},
							"fullyImplemented": true,
							"id": 1044,
							"linearizedBaseContracts": [
								1044,
								832
							],
							"name": "Transfer",
							"nameLocation": "4523:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "4548:94:6",
										"text": "@notice Thrown when the amount of tokens sent does not match the amount of tokens expected"
									},
									"errorSelector": "74c5672b",
									"id": 843,
									"name": "AMOUNT_MISMATCH",
									"nameLocation": "4653:15:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4668:2:6"
									},
									"src": "4647:24:6"
								},
								{
									"canonicalName": "Transfer.TransferData",
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "4677:49:6",
										"text": "@notice This holds the details for a transfer"
									},
									"id": 851,
									"members": [
										{
											"constant": false,
											"id": 846,
											"mutability": "mutable",
											"name": "from",
											"nameLocation": "4769:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 851,
											"src": "4761:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 845,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4761:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 848,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "4791:2:6",
											"nodeType": "VariableDeclaration",
											"scope": 851,
											"src": "4783:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 847,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4783:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 850,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4811:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 851,
											"src": "4803:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 849,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4803:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TransferData",
									"nameLocation": "4738:12:6",
									"nodeType": "StructDefinition",
									"scope": 1044,
									"src": "4731:93:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "5194:633:6",
										"statements": [
											{
												"assignments": [
													864
												],
												"declarations": [
													{
														"constant": false,
														"id": 864,
														"mutability": "mutable",
														"name": "msgValue",
														"nameLocation": "5212:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "5204:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 863,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5204:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 867,
												"initialValue": {
													"expression": {
														"id": 865,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5223:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5227:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "5223:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5204:28:6"
											},
											{
												"body": {
													"id": 918,
													"nodeType": "Block",
													"src": "5286:459:6",
													"statements": [
														{
															"assignments": [
																877
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 877,
																	"mutability": "mutable",
																	"name": "transferData",
																	"nameLocation": "5320:12:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 918,
																	"src": "5300:32:6",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TransferData_$851_memory_ptr",
																		"typeString": "struct Transfer.TransferData"
																	},
																	"typeName": {
																		"id": 876,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 875,
																			"name": "TransferData",
																			"nameLocations": [
																				"5300:12:6"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 851,
																			"src": "5300:12:6"
																		},
																		"referencedDeclaration": 851,
																		"src": "5300:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$851_storage_ptr",
																			"typeString": "struct Transfer.TransferData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 881,
															"initialValue": {
																"baseExpression": {
																	"id": 878,
																	"name": "_transferData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "5335:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TransferData_$851_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Transfer.TransferData memory[] memory"
																	}
																},
																"id": 880,
																"indexExpression": {
																	"id": 879,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "5349:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5335:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$851_memory_ptr",
																	"typeString": "struct Transfer.TransferData memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5300:51:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 882,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "5370:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 883,
																	"name": "NATIVE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "5380:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5370:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 912,
																"nodeType": "Block",
																"src": "5545:130:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 903,
																					"name": "_token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 854,
																					"src": "5596:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 904,
																						"name": "transferData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 877,
																						"src": "5604:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TransferData_$851_memory_ptr",
																							"typeString": "struct Transfer.TransferData memory"
																						}
																					},
																					"id": 905,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5617:4:6",
																					"memberName": "from",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 846,
																					"src": "5604:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 906,
																						"name": "transferData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 877,
																						"src": "5623:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TransferData_$851_memory_ptr",
																							"typeString": "struct Transfer.TransferData memory"
																						}
																					},
																					"id": 907,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5636:2:6",
																					"memberName": "to",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 848,
																					"src": "5623:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 908,
																						"name": "transferData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 877,
																						"src": "5640:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TransferData_$851_memory_ptr",
																							"typeString": "struct Transfer.TransferData memory"
																						}
																					},
																					"id": 909,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5653:6:6",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 850,
																					"src": "5640:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 900,
																					"name": "SafeTransferLib",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1808,
																					"src": "5563:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$1808_$",
																						"typeString": "type(library SafeTransferLib)"
																					}
																				},
																				"id": 902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5579:16:6",
																				"memberName": "safeTransferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1733,
																				"src": "5563:32:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,address,uint256)"
																				}
																			},
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5563:97:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 911,
																		"nodeType": "ExpressionStatement",
																		"src": "5563:97:6"
																	}
																]
															},
															"id": 913,
															"nodeType": "IfStatement",
															"src": "5366:309:6",
															"trueBody": {
																"id": 899,
																"nodeType": "Block",
																"src": "5388:151:6",
																"statements": [
																	{
																		"expression": {
																			"id": 888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 885,
																				"name": "msgValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 864,
																				"src": "5406:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"expression": {
																					"id": 886,
																					"name": "transferData",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 877,
																					"src": "5418:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TransferData_$851_memory_ptr",
																						"typeString": "struct Transfer.TransferData memory"
																					}
																				},
																				"id": 887,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5431:6:6",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 850,
																				"src": "5418:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5406:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 889,
																		"nodeType": "ExpressionStatement",
																		"src": "5406:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 893,
																						"name": "transferData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 877,
																						"src": "5487:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TransferData_$851_memory_ptr",
																							"typeString": "struct Transfer.TransferData memory"
																						}
																					},
																					"id": 894,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5500:2:6",
																					"memberName": "to",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 848,
																					"src": "5487:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 895,
																						"name": "transferData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 877,
																						"src": "5504:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TransferData_$851_memory_ptr",
																							"typeString": "struct Transfer.TransferData memory"
																						}
																					},
																					"id": 896,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5517:6:6",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 850,
																					"src": "5504:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 890,
																					"name": "SafeTransferLib",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1808,
																					"src": "5455:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$1808_$",
																						"typeString": "type(library SafeTransferLib)"
																					}
																				},
																				"id": 892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5471:15:6",
																				"memberName": "safeTransferETH",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1683,
																				"src": "5455:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5455:69:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 898,
																		"nodeType": "ExpressionStatement",
																		"src": "5455:69:6"
																	}
																]
															}
														},
														{
															"id": 917,
															"nodeType": "UncheckedBlock",
															"src": "5689:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "5717:3:6",
																		"subExpression": {
																			"id": 914,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 869,
																			"src": "5717:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 916,
																	"nodeType": "ExpressionStatement",
																	"src": "5717:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 871,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "5259:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 872,
															"name": "_transferData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "5263:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TransferData_$851_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Transfer.TransferData memory[] memory"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5277:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5263:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5259:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 919,
												"initializationExpression": {
													"assignments": [
														869
													],
													"declarations": [
														{
															"constant": false,
															"id": 869,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5256:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 919,
															"src": "5248:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 868,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5248:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 870,
													"nodeType": "VariableDeclarationStatement",
													"src": "5248:9:6"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "5243:502:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 920,
														"name": "msgValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "5759:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5771:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5759:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 926,
												"nodeType": "IfStatement",
												"src": "5755:43:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 923,
															"name": "AMOUNT_MISMATCH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "5781:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5781:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 925,
													"nodeType": "RevertStatement",
													"src": "5774:24:6"
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5816:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 862,
												"id": 928,
												"nodeType": "Return",
												"src": "5809:11:6"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "4830:216:6",
										"text": "@notice Transfer an amount of a token to an array of addresses\n @param _token The address of the token\n @param _transferData TransferData[]\n @return Whether the transfer was successful or not"
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferAmountsFrom",
									"nameLocation": "5060:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "5089:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5081:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5081:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "_transferData",
												"nameLocation": "5119:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5097:35:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TransferData_$851_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Transfer.TransferData[]"
												},
												"typeName": {
													"baseType": {
														"id": 856,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 855,
															"name": "TransferData",
															"nameLocations": [
																"5097:12:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 851,
															"src": "5097:12:6"
														},
														"referencedDeclaration": 851,
														"src": "5097:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferData_$851_storage_ptr",
															"typeString": "struct Transfer.TransferData"
														}
													},
													"id": 857,
													"nodeType": "ArrayTypeName",
													"src": "5097:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TransferData_$851_storage_$dyn_storage_ptr",
														"typeString": "struct Transfer.TransferData[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5080:53:6"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5184:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5184:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5183:6:6"
									},
									"scope": 1044,
									"src": "5051:776:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "6164:396:6",
										"statements": [
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "6182:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 981,
														"src": "6174:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 941,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6174:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"expression": {
														"id": 943,
														"name": "_transferData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "6191:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferData_$851_memory_ptr",
															"typeString": "struct Transfer.TransferData memory"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6205:6:6",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 850,
													"src": "6191:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6174:37:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 946,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "6225:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 947,
														"name": "NATIVE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "6235:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6225:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 977,
													"nodeType": "Block",
													"src": "6422:111:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 969,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 933,
																		"src": "6469:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 970,
																			"name": "_transferData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "6477:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$851_memory_ptr",
																				"typeString": "struct Transfer.TransferData memory"
																			}
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6491:4:6",
																		"memberName": "from",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 846,
																		"src": "6477:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 972,
																			"name": "_transferData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "6497:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$851_memory_ptr",
																				"typeString": "struct Transfer.TransferData memory"
																			}
																		},
																		"id": 973,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6511:2:6",
																		"memberName": "to",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 848,
																		"src": "6497:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "6515:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 966,
																		"name": "SafeTransferLib",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1808,
																		"src": "6436:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$1808_$",
																			"typeString": "type(library SafeTransferLib)"
																		}
																	},
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6452:16:6",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1733,
																	"src": "6436:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6436:86:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 976,
															"nodeType": "ExpressionStatement",
															"src": "6436:86:6"
														}
													]
												},
												"id": 978,
												"nodeType": "IfStatement",
												"src": "6221:312:6",
												"trueBody": {
													"id": 965,
													"nodeType": "Block",
													"src": "6243:173:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 949,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6289:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6293:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "6289:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 951,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "6301:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6289:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 956,
															"nodeType": "IfStatement",
															"src": "6285:48:6",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 953,
																		"name": "AMOUNT_MISMATCH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "6316:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6316:17:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 955,
																"nodeType": "RevertStatement",
																"src": "6309:24:6"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 960,
																			"name": "_transferData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "6380:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$851_memory_ptr",
																				"typeString": "struct Transfer.TransferData memory"
																			}
																		},
																		"id": 961,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6394:2:6",
																		"memberName": "to",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 848,
																		"src": "6380:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 962,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "6398:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 957,
																		"name": "SafeTransferLib",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1808,
																		"src": "6348:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$1808_$",
																			"typeString": "type(library SafeTransferLib)"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6364:15:6",
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1683,
																	"src": "6348:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6348:57:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 964,
															"nodeType": "ExpressionStatement",
															"src": "6348:57:6"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6549:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 940,
												"id": 980,
												"nodeType": "Return",
												"src": "6542:11:6"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "5833:214:6",
										"text": "@notice Transfer an amount of a token to an address\n @param _token The address of the token\n @param _transferData Individual TransferData\n @return Whether the transfer was successful or not"
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferAmountFrom",
									"nameLocation": "6061:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "6089:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "6081:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6081:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "_transferData",
												"nameLocation": "6117:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "6097:33:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TransferData_$851_memory_ptr",
													"typeString": "struct Transfer.TransferData"
												},
												"typeName": {
													"id": 935,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 934,
														"name": "TransferData",
														"nameLocations": [
															"6097:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 851,
														"src": "6097:12:6"
													},
													"referencedDeclaration": 851,
													"src": "6097:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TransferData_$851_storage_ptr",
														"typeString": "struct Transfer.TransferData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6080:51:6"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "6158:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6158:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6157:6:6"
									},
									"scope": 1044,
									"src": "6052:508:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "6850:189:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "6864:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 993,
														"name": "NATIVE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "6874:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6864:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "6958:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1006,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "7001:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1007,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "7009:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1008,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "7014:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1003,
																		"name": "SafeTransferLib",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1808,
																		"src": "6972:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$1808_$",
																			"typeString": "type(library SafeTransferLib)"
																		}
																	},
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6988:12:6",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1759,
																	"src": "6972:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6972:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1010,
															"nodeType": "ExpressionStatement",
															"src": "6972:50:6"
														}
													]
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "6860:173:6",
												"trueBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "6882:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 998,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "6928:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 999,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "6933:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 995,
																		"name": "SafeTransferLib",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1808,
																		"src": "6896:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$1808_$",
																			"typeString": "type(library SafeTransferLib)"
																		}
																	},
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6912:15:6",
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1683,
																	"src": "6896:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6896:45:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1001,
															"nodeType": "ExpressionStatement",
															"src": "6896:45:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "6566:191:6",
										"text": "@notice Transfer an amount of a token to an address\n @param _token The token to transfer\n @param _to The address to transfer to\n @param _amount The amount to transfer"
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferAmount",
									"nameLocation": "6771:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "6795:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "6787:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6787:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6811:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "6803:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6803:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6824:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "6816:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6816:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6786:46:6"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6850:0:6"
									},
									"scope": 1044,
									"src": "6762:277:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "7360:176:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "7374:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1025,
														"name": "NATIVE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "7384:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7374:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "7455:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1036,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "7502:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1037,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "7510:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1034,
																		"name": "SafeTransferLib",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1808,
																		"src": "7476:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$1808_$",
																			"typeString": "type(library SafeTransferLib)"
																		}
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7492:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1807,
																	"src": "7476:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1023,
															"id": 1039,
															"nodeType": "Return",
															"src": "7469:50:6"
														}
													]
												},
												"id": 1041,
												"nodeType": "IfStatement",
												"src": "7370:160:6",
												"trueBody": {
													"id": 1033,
													"nodeType": "Block",
													"src": "7392:57:6",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1029,
																			"name": "_account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "7421:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7413:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_payable_$",
																			"typeString": "type(address payable)"
																		},
																		"typeName": {
																			"id": 1027,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7413:8:6",
																			"stateMutability": "payable",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7413:17:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7431:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "7413:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1023,
															"id": 1032,
															"nodeType": "Return",
															"src": "7406:32:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "7045:223:6",
										"text": "@notice Get the balance of a token for an account\n @param _token The token to get the balance of\n @param _account The account to get the balance for\n @return The balance of the token for the account"
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBalance",
									"nameLocation": "7282:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "7302:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7294:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7294:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "7318:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7310:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7310:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7293:34:6"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7351:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7351:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7350:9:6"
									},
									"scope": 1044,
									"src": "7273:263:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1045,
							"src": "4514:3024:6",
							"usedErrors": [
								843
							],
							"usedEvents": []
						}
					],
					"src": "42:7497:6"
				},
				"id": 6
			},
			"lib/allo-v2/contracts/strategies/BaseStrategy.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/strategies/BaseStrategy.sol",
					"exportedSymbols": {
						"BaseStrategy": [
							1650
						],
						"Errors": [
							814
						],
						"IAllo": [
							359
						],
						"IStrategy": [
							721
						],
						"Transfer": [
							1044
						]
					},
					"id": 1651,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1046,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:7"
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
							"file": "../core/interfaces/IStrategy.sol",
							"id": 1047,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1651,
							"sourceUnit": 722,
							"src": "82:42:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/libraries/Transfer.sol",
							"file": "../core/libraries/Transfer.sol",
							"id": 1049,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1651,
							"sourceUnit": 1045,
							"src": "139:56:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1048,
										"name": "Transfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "147:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/libraries/Errors.sol",
							"file": "../core/libraries/Errors.sol",
							"id": 1051,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1651,
							"sourceUnit": 815,
							"src": "196:52:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1050,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 814,
										"src": "204:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1053,
										"name": "IStrategy",
										"nameLocations": [
											"4599:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 721,
										"src": "4599:9:7"
									},
									"id": 1054,
									"nodeType": "InheritanceSpecifier",
									"src": "4599:9:7"
								},
								{
									"baseName": {
										"id": 1055,
										"name": "Transfer",
										"nameLocations": [
											"4610:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "4610:8:7"
									},
									"id": 1056,
									"nodeType": "InheritanceSpecifier",
									"src": "4610:8:7"
								},
								{
									"baseName": {
										"id": 1057,
										"name": "Errors",
										"nameLocations": [
											"4620:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 814,
										"src": "4620:6:7"
									},
									"id": 1058,
									"nodeType": "InheritanceSpecifier",
									"src": "4620:6:7"
								}
							],
							"canonicalName": "BaseStrategy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1052,
								"nodeType": "StructuredDocumentation",
								"src": "4241:324:7",
								"text": "@title BaseStrategy Contract\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice This contract is the base contract for all strategies\n @dev This contract is implemented by all strategies."
							},
							"fullyImplemented": false,
							"id": 1650,
							"linearizedBaseContracts": [
								1650,
								814,
								1044,
								832,
								721
							],
							"name": "BaseStrategy",
							"nameLocation": "4583:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "4633:101:7",
										"text": "==========================\n === Storage Variables ====\n =========================="
									},
									"id": 1062,
									"mutability": "immutable",
									"name": "allo",
									"nameLocation": "4764:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1650,
									"src": "4739:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAllo_$359",
										"typeString": "contract IAllo"
									},
									"typeName": {
										"id": 1061,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1060,
											"name": "IAllo",
											"nameLocations": [
												"4739:5:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 359,
											"src": "4739:5:7"
										},
										"referencedDeclaration": 359,
										"src": "4739:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAllo_$359",
											"typeString": "contract IAllo"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1064,
									"mutability": "immutable",
									"name": "strategyId",
									"nameLocation": "4801:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1650,
									"src": "4774:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1063,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4774:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1066,
									"mutability": "mutable",
									"name": "poolActive",
									"nameLocation": "4831:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1650,
									"src": "4817:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1065,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4817:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1068,
									"mutability": "mutable",
									"name": "poolId",
									"nameLocation": "4864:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1650,
									"src": "4847:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1067,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4847:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1070,
									"mutability": "mutable",
									"name": "poolAmount",
									"nameLocation": "4893:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1650,
									"src": "4876:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1069,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4876:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "5258:87:7",
										"statements": [
											{
												"expression": {
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1078,
														"name": "allo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "5268:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAllo_$359",
															"typeString": "contract IAllo"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1080,
																"name": "_allo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "5281:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1079,
															"name": "IAllo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5275:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAllo_$359_$",
																"typeString": "type(contract IAllo)"
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5275:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAllo_$359",
															"typeString": "contract IAllo"
														}
													},
													"src": "5268:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllo_$359",
														"typeString": "contract IAllo"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "5268:19:7"
											},
											{
												"expression": {
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1084,
														"name": "strategyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "5297:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1088,
																		"name": "_name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1075,
																		"src": "5331:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1086,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5320:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5324:6:7",
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "5320:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1085,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "5310:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5310:28:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5297:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "5297:41:7"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "5046:159:7",
										"text": "@notice Constructor to set the Allo contract and \"strategyId'.\n @param _allo Address of the Allo contract.\n @param _name Name of the strategy"
									},
									"id": 1094,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "_allo",
												"nameLocation": "5230:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "5222:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "5251:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "5237:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1074,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5237:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:36:7"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5258:0:7"
									},
									"scope": 1650,
									"src": "5210:135:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "5650:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1097,
														"name": "_checkOnlyAllo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "5660:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5660:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "5660:16:7"
											},
											{
												"id": 1100,
												"nodeType": "PlaceholderStatement",
												"src": "5686:1:7"
											}
										]
									},
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "5487:138:7",
										"text": "@notice Modifier to check if the 'msg.sender' is the Allo contract.\n @dev Reverts if the 'msg.sender' is not the Allo contract."
									},
									"id": 1102,
									"name": "onlyAllo",
									"nameLocation": "5639:8:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5647:2:7"
									},
									"src": "5630:64:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "5944:58:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1108,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "5976:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1107,
														"name": "_checkOnlyPoolManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "5954:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5954:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "5954:30:7"
											},
											{
												"id": 1111,
												"nodeType": "PlaceholderStatement",
												"src": "5994:1:7"
											}
										]
									},
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "5700:197:7",
										"text": "@notice Modifier to check if the '_sender' is a pool manager.\n @dev Reverts if the '_sender' is not a pool manager.\n @param _sender The address to check if they are a pool manager"
									},
									"id": 1113,
									"name": "onlyPoolManager",
									"nameLocation": "5911:15:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "5935:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "5927:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5926:17:7"
									},
									"src": "5902:100:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "6139:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1116,
														"name": "_checkOnlyActivePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1472,
														"src": "6149:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "6149:22:7"
											},
											{
												"id": 1119,
												"nodeType": "PlaceholderStatement",
												"src": "6181:1:7"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "6008:100:7",
										"text": "@notice Modifier to check if the pool is active.\n @dev Reverts if the pool is not active."
									},
									"id": 1121,
									"name": "onlyActivePool",
									"nameLocation": "6122:14:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6136:2:7"
									},
									"src": "6113:76:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "6326:48:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1124,
														"name": "_checkInactivePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "6336:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6336:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "6336:20:7"
											},
											{
												"id": 1127,
												"nodeType": "PlaceholderStatement",
												"src": "6366:1:7"
											}
										]
									},
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "6195:98:7",
										"text": "@notice Modifier to check if the pool is inactive.\n @dev Reverts if the pool is active."
									},
									"id": 1129,
									"name": "onlyInactivePool",
									"nameLocation": "6307:16:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6323:2:7"
									},
									"src": "6298:76:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "6522:51:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1132,
														"name": "_checkOnlyInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "6532:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6532:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "6532:23:7"
											},
											{
												"id": 1135,
												"nodeType": "PlaceholderStatement",
												"src": "6565:1:7"
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "6380:110:7",
										"text": "@notice Modifier to check if the pool is initialized.\n @dev Reverts if the pool is not initialized."
									},
									"id": 1137,
									"name": "onlyInitialized",
									"nameLocation": "6504:15:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6519:2:7"
									},
									"src": "6495:78:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										622
									],
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "6843:28:7",
										"statements": [
											{
												"expression": {
													"id": 1145,
													"name": "allo",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1062,
													"src": "6860:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllo_$359",
														"typeString": "contract IAllo"
													}
												},
												"functionReturnParameters": 1144,
												"id": 1146,
												"nodeType": "Return",
												"src": "6853:11:7"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "6703:77:7",
										"text": "@notice Getter for the 'Allo' contract.\n @return The Allo contract"
									},
									"functionSelector": "15cc481e",
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllo",
									"nameLocation": "6794:7:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6818:8:7"
									},
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6801:2:7"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "6836:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAllo_$359",
													"typeString": "contract IAllo"
												},
												"typeName": {
													"id": 1142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1141,
														"name": "IAllo",
														"nameLocations": [
															"6836:5:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 359,
														"src": "6836:5:7"
													},
													"referencedDeclaration": 359,
													"src": "6836:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllo_$359",
														"typeString": "contract IAllo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6835:7:7"
									},
									"scope": 1650,
									"src": "6785:86:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										628
									],
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "7015:30:7",
										"statements": [
											{
												"expression": {
													"id": 1155,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1068,
													"src": "7032:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1154,
												"id": 1156,
												"nodeType": "Return",
												"src": "7025:13:7"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "6877:71:7",
										"text": "@notice Getter for the 'poolId'.\n @return The ID of the pool"
									},
									"functionSelector": "38fff2d0",
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolId",
									"nameLocation": "6962:9:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1151,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6988:8:7"
									},
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:2:7"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "7006:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7006:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7005:9:7"
									},
									"scope": 1650,
									"src": "6953:92:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										634
									],
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "7201:34:7",
										"statements": [
											{
												"expression": {
													"id": 1165,
													"name": "strategyId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1064,
													"src": "7218:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1164,
												"id": 1166,
												"nodeType": "Return",
												"src": "7211:17:7"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "7051:79:7",
										"text": "@notice Getter for the 'strategyId'.\n @return The ID of the strategy"
									},
									"functionSelector": "42fda9c7",
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStrategyId",
									"nameLocation": "7144:13:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1161,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7174:8:7"
									},
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7157:2:7"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "7192:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1162,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7192:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7191:9:7"
									},
									"scope": 1650,
									"src": "7135:100:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										654
									],
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "7400:34:7",
										"statements": [
											{
												"expression": {
													"id": 1175,
													"name": "poolAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1070,
													"src": "7417:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1174,
												"id": 1176,
												"nodeType": "Return",
												"src": "7410:17:7"
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "7241:80:7",
										"text": "@notice Getter for the 'poolAmount'.\n @return The balance of the pool"
									},
									"functionSelector": "4ab4ba42",
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAmount",
									"nameLocation": "7335:13:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1171,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7373:8:7"
									},
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7348:2:7"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "7391:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7391:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7390:9:7"
									},
									"scope": 1650,
									"src": "7326:108:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										648
									],
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "7628:39:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1185,
														"name": "_isPoolActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "7645:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7645:15:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1184,
												"id": 1187,
												"nodeType": "Return",
												"src": "7638:22:7"
											}
										]
									},
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "7440:121:7",
										"text": "@notice Getter for whether or not the pool is active.\n @return 'true' if the pool is active, otherwise 'false'"
									},
									"functionSelector": "df868ed3",
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPoolActive",
									"nameLocation": "7575:12:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7604:8:7"
									},
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7587:2:7"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "7622:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7622:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7621:6:7"
									},
									"scope": 1650,
									"src": "7566:101:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										669
									],
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "7912:57:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1199,
															"name": "_recipientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "7949:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1198,
														"name": "_getRecipientStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "7929:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Status_$566_$",
															"typeString": "function (address) view returns (enum IStrategy.Status)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7929:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$566",
														"typeString": "enum IStrategy.Status"
													}
												},
												"functionReturnParameters": 1197,
												"id": 1201,
												"nodeType": "Return",
												"src": "7922:40:7"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "7673:145:7",
										"text": "@notice Getter for the status of a recipient.\n @param _recipientId The ID of the recipient\n @return The status of the recipient"
									},
									"functionSelector": "eb11af93",
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRecipientStatus",
									"nameLocation": "7832:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "_recipientId",
												"nameLocation": "7859:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "7851:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7851:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:22:7"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "7904:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$566",
													"typeString": "enum IStrategy.Status"
												},
												"typeName": {
													"id": 1195,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1194,
														"name": "Status",
														"nameLocations": [
															"7904:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 566,
														"src": "7904:6:7"
													},
													"referencedDeclaration": 566,
													"src": "7904:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$566",
														"typeString": "enum IStrategy.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7903:8:7"
									},
									"scope": 1650,
									"src": "7823:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "8341:278:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1211,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "8428:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8438:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8428:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1217,
												"nodeType": "IfStatement",
												"src": "8424:45:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1214,
															"name": "ALREADY_INITIALIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "8448:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8448:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1216,
													"nodeType": "RevertStatement",
													"src": "8441:28:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1218,
														"name": "_poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "8556:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8567:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8556:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "8552:34:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1221,
															"name": "INVALID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "8577:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8577:9:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1223,
													"nodeType": "RevertStatement",
													"src": "8570:16:7"
												}
											},
											{
												"expression": {
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1225,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "8596:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1226,
														"name": "_poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "8605:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8596:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "8596:16:7"
											}
										]
									},
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "8111:153:7",
										"text": "@notice Initializes the 'Basetrategy'.\n @dev Will revert if the poolId is invalid or already initialized\n @param _poolId ID of the pool"
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1208,
												"name": "onlyAllo",
												"nameLocations": [
													"8332:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1102,
												"src": "8332:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8332:8:7"
										}
									],
									"name": "__BaseStrategy_init",
									"nameLocation": "8278:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "8306:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "8298:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8298:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:17:7"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8341:0:7"
									},
									"scope": 1650,
									"src": "8269:350:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										660
									],
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "8888:125:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1240,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "8924:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1239,
														"name": "_beforeIncreasePoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "8898:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8898:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "8898:34:7"
											},
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1243,
														"name": "poolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "8942:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1244,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "8956:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8942:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "8942:21:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1248,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "8998:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1247,
														"name": "_afterIncreasePoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1589,
														"src": "8973:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8973:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "8973:33:7"
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "8625:186:7",
										"text": "@notice Increases the pool amount.\n @dev Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\n @param _amount The amount to increase the pool by"
									},
									"functionSelector": "f5b0dfb7",
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1237,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1236,
												"name": "onlyAllo",
												"nameLocations": [
													"8879:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1102,
												"src": "8879:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8879:8:7"
										}
									],
									"name": "increasePoolAmount",
									"nameLocation": "8825:18:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1235,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8870:8:7"
									},
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8852:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "8844:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8844:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8843:17:7"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8888:0:7"
									},
									"scope": 1650,
									"src": "8816:197:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										701
									],
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "9609:164:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1267,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "9644:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1268,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "9651:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1266,
														"name": "_beforeRegisterRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "9619:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9619:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "9619:40:7"
											},
											{
												"expression": {
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1271,
														"name": "recipientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "9669:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1273,
																"name": "_data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "9702:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1274,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1257,
																"src": "9709:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1272,
															"name": "_registerRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "9683:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
																"typeString": "function (bytes memory,address) returns (address)"
															}
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9683:34:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9669:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "9669:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1279,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "9751:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1280,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "9758:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1278,
														"name": "_afterRegisterRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "9727:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9727:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "9727:39:7"
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "9019:405:7",
										"text": "@notice Registers a recipient.\n @dev Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the\n      strategy implementation. Only 'Allo' contract can call this when it is initialized.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender\n @return recipientId The recipientId"
									},
									"functionSelector": "2bbe0cae",
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1260,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1259,
												"name": "onlyAllo",
												"nameLocations": [
													"9534:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1102,
												"src": "9534:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "9534:8:7"
										},
										{
											"id": 1262,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1261,
												"name": "onlyInitialized",
												"nameLocations": [
													"9551:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1137,
												"src": "9551:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "9551:15:7"
										}
									],
									"name": "registerRecipient",
									"nameLocation": "9438:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9469:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9456:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9456:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "9484:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9476:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9476:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9455:37:7"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "recipientId",
												"nameLocation": "9592:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9584:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9584:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9583:21:7"
									},
									"scope": 1650,
									"src": "9429:344:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										709
									],
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "10189:123:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1297,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "10215:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1298,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "10222:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1296,
														"name": "_beforeAllocate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "10199:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10199:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "10199:31:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1302,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "10250:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1303,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "10257:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1301,
														"name": "_allocate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "10240:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10240:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "10240:25:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1307,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "10290:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1308,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "10297:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1306,
														"name": "_afterAllocate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "10275:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10275:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "10275:30:7"
											}
										]
									},
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "9779:308:7",
										"text": "@notice Allocates to a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can\n      call this when it is initialized.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"functionSelector": "ef2920fc",
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1292,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1291,
												"name": "onlyAllo",
												"nameLocations": [
													"10164:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1102,
												"src": "10164:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "10164:8:7"
										},
										{
											"id": 1294,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1293,
												"name": "onlyInitialized",
												"nameLocations": [
													"10173:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1137,
												"src": "10173:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "10173:15:7"
										}
									],
									"name": "allocate",
									"nameLocation": "10101:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10123:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "10110:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10110:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "10138:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "10130:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10130:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10109:37:7"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10189:0:7"
									},
									"scope": 1650,
									"src": "10092:220:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										720
									],
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "10856:174:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1328,
															"name": "_recipientIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "10884:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 1329,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "10899:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1330,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "10906:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1327,
														"name": "_beforeDistribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "10866:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (address[] memory,bytes memory,address)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10866:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "10866:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1334,
															"name": "_recipientIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "10936:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 1335,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "10951:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1336,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "10958:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1333,
														"name": "_distribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1555,
														"src": "10924:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (address[] memory,bytes memory,address)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10924:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "10924:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1340,
															"name": "_recipientIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "10993:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 1341,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "11008:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1342,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "11015:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1339,
														"name": "_afterDistribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "10976:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (address[] memory,bytes memory,address)"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10976:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "10976:47:7"
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "10318:382:7",
										"text": "@notice Distributes funds (tokens) to recipients.\n @dev The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can\n      call this when it is initialized.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to distribute to the recipients\n @param _sender The address of the sender"
									},
									"functionSelector": "0a6f0ee9",
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1323,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1322,
												"name": "onlyAllo",
												"nameLocations": [
													"10819:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1102,
												"src": "10819:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "10819:8:7"
										},
										{
											"id": 1325,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1324,
												"name": "onlyInitialized",
												"nameLocations": [
													"10836:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1137,
												"src": "10836:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "10836:15:7"
										}
									],
									"name": "distribute",
									"nameLocation": "10714:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "10742:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "10725:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1314,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10725:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1315,
													"nodeType": "ArrayTypeName",
													"src": "10725:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10770:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "10757:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10757:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "10785:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "10777:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10777:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10724:69:7"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10856:0:7"
									},
									"scope": 1650,
									"src": "10705:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										683
									],
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "11549:522:7",
										"statements": [
											{
												"assignments": [
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1362,
														"mutability": "mutable",
														"name": "recipientLength",
														"nameLocation": "11567:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "11559:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11559:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1365,
												"initialValue": {
													"expression": {
														"id": 1363,
														"name": "_recipientIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "11585:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "11599:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "11585:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11559:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1366,
														"name": "recipientLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "11722:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1367,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "11741:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																"typeString": "bytes memory[] memory"
															}
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11747:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11741:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11722:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1373,
												"nodeType": "IfStatement",
												"src": "11718:60:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1370,
															"name": "ARRAY_MISMATCH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "11762:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11762:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1372,
													"nodeType": "RevertStatement",
													"src": "11755:23:7"
												}
											},
											{
												"assignments": [
													1378
												],
												"declarations": [
													{
														"constant": false,
														"id": 1378,
														"mutability": "mutable",
														"name": "payouts",
														"nameLocation": "11812:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "11789:30:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IStrategy.PayoutSummary[]"
														},
														"typeName": {
															"baseType": {
																"id": 1376,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1375,
																	"name": "PayoutSummary",
																	"nameLocations": [
																		"11789:13:7"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 572,
																	"src": "11789:13:7"
																},
																"referencedDeclaration": 572,
																"src": "11789:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutSummary_$572_storage_ptr",
																	"typeString": "struct IStrategy.PayoutSummary"
																}
															},
															"id": 1377,
															"nodeType": "ArrayTypeName",
															"src": "11789:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$572_storage_$dyn_storage_ptr",
																"typeString": "struct IStrategy.PayoutSummary[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1385,
												"initialValue": {
													"arguments": [
														{
															"id": 1383,
															"name": "recipientLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "11842:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "11822:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IStrategy.PayoutSummary memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1380,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1379,
																	"name": "PayoutSummary",
																	"nameLocations": [
																		"11826:13:7"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 572,
																	"src": "11826:13:7"
																},
																"referencedDeclaration": 572,
																"src": "11826:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutSummary_$572_storage_ptr",
																	"typeString": "struct IStrategy.PayoutSummary"
																}
															},
															"id": 1381,
															"nodeType": "ArrayTypeName",
															"src": "11826:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$572_storage_$dyn_storage_ptr",
																"typeString": "struct IStrategy.PayoutSummary[]"
															}
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11822:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IStrategy.PayoutSummary memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11789:69:7"
											},
											{
												"body": {
													"id": 1409,
													"nodeType": "Block",
													"src": "11906:135:7",
													"statements": [
														{
															"expression": {
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1392,
																		"name": "payouts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "11920:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IStrategy.PayoutSummary memory[] memory"
																		}
																	},
																	"id": 1394,
																	"indexExpression": {
																		"id": 1393,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1387,
																		"src": "11928:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11920:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PayoutSummary_$572_memory_ptr",
																		"typeString": "struct IStrategy.PayoutSummary memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1396,
																				"name": "_recipientIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "11944:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 1398,
																			"indexExpression": {
																				"id": 1397,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1387,
																				"src": "11958:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11944:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 1399,
																				"name": "_data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1353,
																				"src": "11962:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																					"typeString": "bytes memory[] memory"
																				}
																			},
																			"id": 1401,
																			"indexExpression": {
																				"id": 1400,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1387,
																				"src": "11968:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11962:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1395,
																		"name": "_getPayout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "11933:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_struct$_PayoutSummary_$572_memory_ptr_$",
																			"typeString": "function (address,bytes memory) view returns (struct IStrategy.PayoutSummary memory)"
																		}
																	},
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11933:38:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PayoutSummary_$572_memory_ptr",
																		"typeString": "struct IStrategy.PayoutSummary memory"
																	}
																},
																"src": "11920:51:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutSummary_$572_memory_ptr",
																	"typeString": "struct IStrategy.PayoutSummary memory"
																}
															},
															"id": 1404,
															"nodeType": "ExpressionStatement",
															"src": "11920:51:7"
														},
														{
															"id": 1408,
															"nodeType": "UncheckedBlock",
															"src": "11985:46:7",
															"statements": [
																{
																	"expression": {
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "12013:3:7",
																		"subExpression": {
																			"id": 1405,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1387,
																			"src": "12013:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1407,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:3:7"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1389,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "11884:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1390,
														"name": "recipientLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "11888:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11884:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1410,
												"initializationExpression": {
													"assignments": [
														1387
													],
													"declarations": [
														{
															"constant": false,
															"id": 1387,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11881:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1410,
															"src": "11873:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1386,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11873:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1388,
													"nodeType": "VariableDeclarationStatement",
													"src": "11873:9:7"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "11868:173:7"
											},
											{
												"expression": {
													"id": 1411,
													"name": "payouts",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1378,
													"src": "12057:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IStrategy.PayoutSummary memory[] memory"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1412,
												"nodeType": "Return",
												"src": "12050:14:7"
											}
										]
									},
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "11036:326:7",
										"text": "@notice Gets the payout summary for recipients.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to get the payout summary for the recipients\n @return The payout summary for the recipients"
									},
									"functionSelector": "b2b878d0",
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPayouts",
									"nameLocation": "11376:10:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1355,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11495:8:7"
									},
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "11404:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "11387:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1348,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11387:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1349,
													"nodeType": "ArrayTypeName",
													"src": "11387:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "11434:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "11419:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1351,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "11419:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1352,
													"nodeType": "ArrayTypeName",
													"src": "11419:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11386:54:7"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "11521:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$572_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IStrategy.PayoutSummary[]"
												},
												"typeName": {
													"baseType": {
														"id": 1357,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1356,
															"name": "PayoutSummary",
															"nameLocations": [
																"11521:13:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 572,
															"src": "11521:13:7"
														},
														"referencedDeclaration": 572,
														"src": "11521:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutSummary_$572_storage_ptr",
															"typeString": "struct IStrategy.PayoutSummary"
														}
													},
													"id": 1358,
													"nodeType": "ArrayTypeName",
													"src": "11521:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$572_storage_$dyn_storage_ptr",
														"typeString": "struct IStrategy.PayoutSummary[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11520:24:7"
									},
									"scope": 1650,
									"src": "11367:704:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										642
									],
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "12487:53:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1424,
															"name": "_allocator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "12522:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1423,
														"name": "_isValidAllocator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "12504:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12504:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1422,
												"id": 1426,
												"nodeType": "Return",
												"src": "12497:36:7"
											}
										]
									},
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "12077:313:7",
										"text": "@notice Checks if the '_allocator' is a valid allocator.\n @dev How the allocator is determined is up to the strategy implementation.\n @param _allocator The address to check if it is a valid allocator for the strategy.\n @return 'true' if the address is a valid allocator, 'false' otherwise"
									},
									"functionSelector": "4d31d087",
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidAllocator",
									"nameLocation": "12404:16:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1419,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12463:8:7"
									},
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "_allocator",
												"nameLocation": "12429:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "12421:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12421:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12420:20:7"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "12481:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12481:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12480:6:7"
									},
									"scope": 1650,
									"src": "12395:145:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "12854:71:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1432,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "12868:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12872:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12868:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1436,
																"name": "allo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "12890:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAllo_$359",
																	"typeString": "contract IAllo"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IAllo_$359",
																	"typeString": "contract IAllo"
																}
															],
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12882:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1434,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12882:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12882:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12868:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1442,
												"nodeType": "IfStatement",
												"src": "12864:54:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1439,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "12904:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12904:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1441,
													"nodeType": "RevertStatement",
													"src": "12897:21:7"
												}
											}
										]
									},
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "12682:127:7",
										"text": "@notice Checks if the 'msg.sender' is the Allo contract.\n @dev Reverts if the 'msg.sender' is not the Allo contract."
									},
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnlyAllo",
									"nameLocation": "12823:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12837:2:7"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12854:0:7"
									},
									"scope": 1650,
									"src": "12814:111:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "13184:80:7",
										"statements": [
											{
												"condition": {
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13198:36:7",
													"subExpression": {
														"arguments": [
															{
																"id": 1452,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "13218:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1453,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "13226:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1450,
																"name": "allo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "13199:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAllo_$359",
																	"typeString": "contract IAllo"
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13204:13:7",
															"memberName": "isPoolManager",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "13199:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$",
																"typeString": "function (uint256,address) view external returns (bool)"
															}
														},
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13199:35:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1459,
												"nodeType": "IfStatement",
												"src": "13194:63:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1456,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "13243:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13243:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1458,
													"nodeType": "RevertStatement",
													"src": "13236:21:7"
												}
											}
										]
									},
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "12931:186:7",
										"text": "@notice Checks if the '_sender' is a pool manager.\n @dev Reverts if the '_sender' is not a pool manager.\n @param _sender The address to check if they are a pool manager"
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnlyPoolManager",
									"nameLocation": "13131:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "13161:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "13153:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13153:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13152:17:7"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13184:0:7"
									},
									"scope": 1650,
									"src": "13122:142:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "13410:56:7",
										"statements": [
											{
												"condition": {
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13424:11:7",
													"subExpression": {
														"id": 1465,
														"name": "poolActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "13425:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1470,
												"nodeType": "IfStatement",
												"src": "13420:39:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1467,
															"name": "POOL_INACTIVE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "13444:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13444:15:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1469,
													"nodeType": "RevertStatement",
													"src": "13437:22:7"
												}
											}
										]
									},
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "13270:89:7",
										"text": "@notice Checks if the pool is active.\n @dev Reverts if the pool is not active."
									},
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnlyActivePool",
									"nameLocation": "13373:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13393:2:7"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13410:0:7"
									},
									"scope": 1650,
									"src": "13364:102:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "13608:53:7",
										"statements": [
											{
												"condition": {
													"id": 1476,
													"name": "poolActive",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1066,
													"src": "13622:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1480,
												"nodeType": "IfStatement",
												"src": "13618:36:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1477,
															"name": "POOL_ACTIVE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "13641:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13641:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1479,
													"nodeType": "RevertStatement",
													"src": "13634:20:7"
												}
											}
										]
									},
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "13472:87:7",
										"text": "@notice Checks if the pool is inactive.\n @dev Reverts if the pool is active."
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInactivePool",
									"nameLocation": "13573:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13591:2:7"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13608:0:7"
									},
									"scope": 1650,
									"src": "13564:97:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "13818:58:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1486,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "13832:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13842:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13832:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1492,
												"nodeType": "IfStatement",
												"src": "13828:41:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1489,
															"name": "NOT_INITIALIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "13852:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13852:17:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1491,
													"nodeType": "RevertStatement",
													"src": "13845:24:7"
												}
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "13667:99:7",
										"text": "@notice Checks if the pool is initialized.\n @dev Reverts if the pool is not initialized."
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnlyInitialized",
									"nameLocation": "13780:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13801:2:7"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13818:0:7"
									},
									"scope": 1650,
									"src": "13771:105:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "14163:71:7",
										"statements": [
											{
												"expression": {
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1500,
														"name": "poolActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "14173:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1501,
														"name": "_active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "14186:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14173:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1503,
												"nodeType": "ExpressionStatement",
												"src": "14173:20:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1505,
															"name": "_active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "14219:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1504,
														"name": "PoolActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "14208:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14208:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "EmitStatement",
												"src": "14203:24:7"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "13882:229:7",
										"text": "@notice Set the pool to active or inactive status.\n @dev This will emit a 'PoolActive()' event. Used by the strategy implementation.\n @param _active The status to set, 'true' means active, 'false' means inactive"
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setPoolActive",
									"nameLocation": "14125:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "_active",
												"nameLocation": "14145:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "14140:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14140:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14139:14:7"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14163:0:7"
									},
									"scope": 1650,
									"src": "14116:118:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "14462:34:7",
										"statements": [
											{
												"expression": {
													"id": 1515,
													"name": "poolActive",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1066,
													"src": "14479:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1516,
												"nodeType": "Return",
												"src": "14472:17:7"
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "14240:155:7",
										"text": "@notice Checks if the pool is active.\n @dev Used by the strategy implementation.\n @return 'true' if the pool is active, otherwise 'false'"
									},
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isPoolActive",
									"nameLocation": "14409:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14422:2:7"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "14456:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14456:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14455:6:7"
									},
									"scope": 1650,
									"src": "14400:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "14502:160:7",
										"text": "@notice Checks if the allocator is valid\n @param _allocator The allocator address\n @return 'true' if the allocator is valid, otherwise 'false'"
									},
									"id": 1526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_isValidAllocator",
									"nameLocation": "14676:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "_allocator",
												"nameLocation": "14702:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "14694:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14694:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14693:20:7"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "14745:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14745:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14744:6:7"
									},
									"scope": 1650,
									"src": "14667:84:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "14757:588:7",
										"text": "@notice This will register a recipient, set their status (and any other strategy specific values), and\n         return the ID of the recipient.\n @dev Able to change status all the way up to Accepted, or to Pending and if there are more steps, additional\n      functions should be added to allow the owner to check this. The owner could also check attestations directly\n      and then Accept for instance.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender\n @return The ID of the recipient"
									},
									"id": 1536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_registerRecipient",
									"nameLocation": "15359:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "15391:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "15378:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15378:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "15406:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "15398:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15398:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15377:37:7"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "15441:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15441:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15440:9:7"
									},
									"scope": 1650,
									"src": "15350:100:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "15456:245:7",
										"text": "@notice This will allocate to a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"id": 1544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_allocate",
									"nameLocation": "15715:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "15738:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "15725:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15725:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "15753:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "15745:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15745:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15724:37:7"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15778:0:7"
									},
									"scope": 1650,
									"src": "15706:73:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "15785:470:7",
										"text": "@notice This will distribute funds (tokens) to recipients.\n @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\n this contract will need to track the amount paid already, so that it doesn't double pay.\n @param _recipientIds The ids of the recipients to distribute to\n @param _data Data required will depend on the strategy implementation\n @param _sender The address of the sender"
									},
									"id": 1555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_distribute",
									"nameLocation": "16269:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "16298:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "16281:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1546,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "16281:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1547,
													"nodeType": "ArrayTypeName",
													"src": "16281:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "16326:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "16313:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1549,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16313:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "16341:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "16333:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16333:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16280:69:7"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16366:0:7"
									},
									"scope": 1650,
									"src": "16260:107:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "16373:331:7",
										"text": "@notice This will get the payout summary for a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _recipientId The ID of the recipient\n @param _data The data to use to get the payout summary for the recipient\n @return The payout summary for the recipient"
									},
									"id": 1566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_getPayout",
									"nameLocation": "16718:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "_recipientId",
												"nameLocation": "16737:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "16729:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16729:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "16764:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "16751:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16751:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16728:42:7"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "16834:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PayoutSummary_$572_memory_ptr",
													"typeString": "struct IStrategy.PayoutSummary"
												},
												"typeName": {
													"id": 1563,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1562,
														"name": "PayoutSummary",
														"nameLocations": [
															"16834:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 572,
														"src": "16834:13:7"
													},
													"referencedDeclaration": 572,
													"src": "16834:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PayoutSummary_$572_storage_ptr",
														"typeString": "struct IStrategy.PayoutSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16833:22:7"
									},
									"scope": 1650,
									"src": "16709:147:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "16862:148:7",
										"text": "@notice This will get the status of a recipient.\n @param _recipientId The ID of the recipient\n @return The status of the recipient"
									},
									"id": 1575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_getRecipientStatus",
									"nameLocation": "17024:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "_recipientId",
												"nameLocation": "17052:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "17044:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17044:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17043:22:7"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "17097:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$566",
													"typeString": "enum IStrategy.Status"
												},
												"typeName": {
													"id": 1572,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1571,
														"name": "Status",
														"nameLocations": [
															"17097:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 566,
														"src": "17097:6:7"
													},
													"referencedDeclaration": 566,
													"src": "17097:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$566",
														"typeString": "enum IStrategy.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17096:8:7"
									},
									"scope": 1650,
									"src": "17015:90:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "17434:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "17244:116:7",
										"text": "@notice Hook called before increasing the pool amount.\n @param _amount The amount to increase the pool by"
									},
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeIncreasePoolAmount",
									"nameLocation": "17374:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "17408:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "17400:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17400:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17399:17:7"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17434:0:7"
									},
									"scope": 1650,
									"src": "17365:71:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "17630:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1583,
										"nodeType": "StructuredDocumentation",
										"src": "17442:115:7",
										"text": "@notice Hook called after increasing the pool amount.\n @param _amount The amount to increase the pool by"
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterIncreasePoolAmount",
									"nameLocation": "17571:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "17604:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "17596:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17596:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17595:17:7"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17630:0:7"
									},
									"scope": 1650,
									"src": "17562:70:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "17898:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "17638:167:7",
										"text": "@notice Hook called before registering a recipient.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender"
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeRegisterRecipient",
									"nameLocation": "17819:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "17857:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "17844:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17844:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "17872:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "17864:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17864:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17843:37:7"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17898:0:7"
									},
									"scope": 1650,
									"src": "17810:90:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "18164:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "17906:166:7",
										"text": "@notice Hook called after registering a recipient.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender"
									},
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterRegisterRecipient",
									"nameLocation": "18086:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "18123:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "18110:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1600,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18110:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "18138:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "18130:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18130:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18109:37:7"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18164:0:7"
									},
									"scope": 1650,
									"src": "18077:89:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "18428:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1608,
										"nodeType": "StructuredDocumentation",
										"src": "18172:172:7",
										"text": "@notice Hook called before allocating to a recipient.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeAllocate",
									"nameLocation": "18358:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "18387:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "18374:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18374:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "18402:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "18394:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18394:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18373:37:7"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18428:0:7"
									},
									"scope": 1650,
									"src": "18349:81:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1624,
										"nodeType": "Block",
										"src": "18690:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "18436:171:7",
										"text": "@notice Hook called after allocating to a recipient.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"id": 1625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterAllocate",
									"nameLocation": "18621:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "18649:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "18636:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18636:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "18664:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "18656:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18656:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18635:37:7"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18690:0:7"
									},
									"scope": 1650,
									"src": "18612:80:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "19062:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "18698:246:7",
										"text": "@notice Hook called before distributing funds (tokens) to recipients.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to distribute to the recipients\n @param _sender The address of the sender"
									},
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeDistribute",
									"nameLocation": "18958:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "18993:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "18976:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1627,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "18976:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1628,
													"nodeType": "ArrayTypeName",
													"src": "18976:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "19021:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "19008:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1630,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19008:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "19036:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "19028:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19028:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18975:69:7"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19062:0:7"
									},
									"scope": 1650,
									"src": "18949:115:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "19432:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "19070:245:7",
										"text": "@notice Hook called after distributing funds (tokens) to recipients.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to distribute to the recipients\n @param _sender The address of the sender"
									},
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterDistribute",
									"nameLocation": "19329:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "19363:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "19346:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1639,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "19346:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1640,
													"nodeType": "ArrayTypeName",
													"src": "19346:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "19391:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "19378:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1642,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19378:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "19406:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "19398:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19398:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:69:7"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19432:0:7"
									},
									"scope": 1650,
									"src": "19320:114:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1651,
							"src": "4565:14871:7",
							"usedErrors": [
								727,
								730,
								733,
								736,
								739,
								742,
								745,
								748,
								751,
								754,
								757,
								760,
								763,
								766,
								769,
								772,
								775,
								778,
								781,
								784,
								787,
								790,
								793,
								796,
								799,
								804,
								807,
								810,
								813,
								843
							],
							"usedEvents": [
								579,
								588,
								599,
								610,
								615
							]
						}
					],
					"src": "42:19395:7"
				},
				"id": 7
			},
			"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol",
					"exportedSymbols": {
						"SafeTransferLib": [
							1808
						]
					},
					"id": 1809,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1652,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeTransferLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1653,
								"nodeType": "StructuredDocumentation",
								"src": "57:539:8",
								"text": "@notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n @author Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)\n @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\n @dev Note:\n - For ETH transfers, please use `forceSafeTransferETH` for gas griefing protection.\n - For ERC20s, this implementation won't check that a token has code,\n responsibility is delegated to the caller."
							},
							"fullyImplemented": true,
							"id": 1808,
							"linearizedBaseContracts": [
								1808
							],
							"name": "SafeTransferLib",
							"nameLocation": "604:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "909:37:8",
										"text": "@dev The ETH transfer has failed."
									},
									"errorSelector": "b12d13eb",
									"id": 1656,
									"name": "ETHTransferFailed",
									"nameLocation": "957:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "974:2:8"
									},
									"src": "951:26:8"
								},
								{
									"documentation": {
										"id": 1657,
										"nodeType": "StructuredDocumentation",
										"src": "983:45:8",
										"text": "@dev The ERC20 `transferFrom` has failed."
									},
									"errorSelector": "7939f424",
									"id": 1659,
									"name": "TransferFromFailed",
									"nameLocation": "1039:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1057:2:8"
									},
									"src": "1033:27:8"
								},
								{
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "1066:41:8",
										"text": "@dev The ERC20 `transfer` has failed."
									},
									"errorSelector": "90b8ec18",
									"id": 1662,
									"name": "TransferFailed",
									"nameLocation": "1118:14:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1132:2:8"
									},
									"src": "1112:23:8"
								},
								{
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "1141:40:8",
										"text": "@dev The ERC20 `approve` has failed."
									},
									"errorSelector": "3e3f8f73",
									"id": 1665,
									"name": "ApproveFailed",
									"nameLocation": "1192:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1205:2:8"
									},
									"src": "1186:22:8"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "1497:100:8",
										"text": "@dev Suggested gas stipend for contract receiving ETH\n that disallows any storage writes."
									},
									"id": 1669,
									"mutability": "constant",
									"name": "GAS_STIPEND_NO_STORAGE_WRITES",
									"nameLocation": "1628:29:8",
									"nodeType": "VariableDeclaration",
									"scope": 1808,
									"src": "1602:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1667,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1602:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32333030",
										"id": 1668,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1660:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2300_by_1",
											"typeString": "int_const 2300"
										},
										"value": "2300"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "1671:202:8",
										"text": "@dev Suggested gas stipend for contract receiving ETH to perform a few\n storage reads and writes, but low enough to prevent griefing.\n Multiply by a small constant (e.g. 2), if needed."
									},
									"id": 1673,
									"mutability": "constant",
									"name": "GAS_STIPEND_NO_GRIEF",
									"nameLocation": "1904:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1808,
									"src": "1878:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1671,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1878:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 1672,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1927:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "2517:428:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2579:360:8",
													"nodeType": "YulBlock",
													"src": "2579:360:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2718:211:8",
																"nodeType": "YulBlock",
																"src": "2718:211:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2816:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2816:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2822:10:8",
																					"nodeType": "YulLiteral",
																					"src": "2822:10:8",
																					"type": "",
																					"value": "0xb12d13eb"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2809:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2809:6:8"
																			},
																			"nativeSrc": "2809:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2809:24:8"
																		},
																		"nativeSrc": "2809:24:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2809:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2904:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2904:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2910:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2910:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2897:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:8"
																			},
																			"nativeSrc": "2897:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2897:18:8"
																		},
																		"nativeSrc": "2897:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nativeSrc": "2674:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2674:3:8"
																				},
																				"nativeSrc": "2674:5:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2674:5:8"
																			},
																			{
																				"name": "to",
																				"nativeSrc": "2681:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "2681:2:8"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "2685:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2685:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2693:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2693:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2699:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2699:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2705:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2705:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2711:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2711:4:8",
																				"type": "",
																				"value": "0x00"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nativeSrc": "2669:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "2669:4:8"
																		},
																		"nativeSrc": "2669:47:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2669:47:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2662:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2662:6:8"
																},
																"nativeSrc": "2662:55:8",
																"nodeType": "YulFunctionCall",
																"src": "2662:55:8"
															},
															"nativeSrc": "2659:270:8",
															"nodeType": "YulIf",
															"src": "2659:270:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1678,
														"isOffset": false,
														"isSlot": false,
														"src": "2685:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1676,
														"isOffset": false,
														"isSlot": false,
														"src": "2681:2:8",
														"valueSize": 1
													}
												],
												"id": 1681,
												"nodeType": "InlineAssembly",
												"src": "2570:369:8"
											}
										]
									},
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "2223:227:8",
										"text": "@dev Sends `amount` (in wei) ETH to `to`.\n Reverts upon failure.\n Note: This implementation does NOT protect against gas griefing.\n Please use `forceSafeTransferETH` for gas griefing protection."
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2464:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2488:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2480:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2500:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2492:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:28:8"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2517:0:8"
									},
									"scope": 1808,
									"src": "2455:490:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1694,
										"nodeType": "Block",
										"src": "3467:1135:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3529:1067:8",
													"nodeType": "YulBlock",
													"src": "3529:1067:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3620:211:8",
																"nodeType": "YulBlock",
																"src": "3620:211:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3718:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3718:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3724:10:8",
																					"nodeType": "YulLiteral",
																					"src": "3724:10:8",
																					"type": "",
																					"value": "0xb12d13eb"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3711:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3711:6:8"
																			},
																			"nativeSrc": "3711:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3711:24:8"
																		},
																		"nativeSrc": "3711:24:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3711:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3806:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3806:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3812:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3812:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3799:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3799:6:8"
																			},
																			"nativeSrc": "3799:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3799:18:8"
																		},
																		"nativeSrc": "3799:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3799:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "selfbalance",
																			"nativeSrc": "3597:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "3597:11:8"
																		},
																		"nativeSrc": "3597:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3597:13:8"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "3612:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3612:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3594:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3594:2:8"
																},
																"nativeSrc": "3594:25:8",
																"nodeType": "YulFunctionCall",
																"src": "3594:25:8"
															},
															"nativeSrc": "3591:240:8",
															"nodeType": "YulIf",
															"src": "3591:240:8"
														},
														{
															"body": {
																"nativeSrc": "3974:612:8",
																"nodeType": "YulBlock",
																"src": "3974:612:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3999:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3999:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"name": "to",
																					"nativeSrc": "4005:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4005:2:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3992:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3992:6:8"
																			},
																			"nativeSrc": "3992:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3992:16:8"
																		},
																		"nativeSrc": "3992:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3992:16:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4072:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4072:4:8",
																					"type": "",
																					"value": "0x0b"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4078:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4078:4:8",
																					"type": "",
																					"value": "0x73"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "4064:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4064:7:8"
																			},
																			"nativeSrc": "4064:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4064:19:8"
																		},
																		"nativeSrc": "4064:19:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4064:19:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4128:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4128:4:8",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4134:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4134:4:8",
																					"type": "",
																					"value": "0xff"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "4120:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4120:7:8"
																			},
																			"nativeSrc": "4120:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4120:19:8"
																		},
																		"nativeSrc": "4120:19:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4120:19:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "4386:186:8",
																			"nodeType": "YulBlock",
																			"src": "4386:186:8",
																			"statements": [
																				{
																					"body": {
																						"nativeSrc": "4532:22:8",
																						"nodeType": "YulBlock",
																						"src": "4532:22:8",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4541:4:8",
																											"nodeType": "YulLiteral",
																											"src": "4541:4:8",
																											"type": "",
																											"value": "0x00"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4547:4:8",
																											"nodeType": "YulLiteral",
																											"src": "4547:4:8",
																											"type": "",
																											"value": "0x00"
																										}
																									],
																									"functionName": {
																										"name": "revert",
																										"nativeSrc": "4534:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4534:6:8"
																									},
																									"nativeSrc": "4534:18:8",
																									"nodeType": "YulFunctionCall",
																									"src": "4534:18:8"
																								},
																								"nativeSrc": "4534:18:8",
																								"nodeType": "YulExpressionStatement",
																								"src": "4534:18:8"
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [],
																										"functionName": {
																											"name": "gas",
																											"nativeSrc": "4515:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "4515:3:8"
																										},
																										"nativeSrc": "4515:5:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4515:5:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4522:7:8",
																										"nodeType": "YulLiteral",
																										"src": "4522:7:8",
																										"type": "",
																										"value": "1000000"
																									}
																								],
																								"functionName": {
																									"name": "gt",
																									"nativeSrc": "4512:2:8",
																									"nodeType": "YulIdentifier",
																									"src": "4512:2:8"
																								},
																								"nativeSrc": "4512:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4512:18:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4505:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "4505:6:8"
																						},
																						"nativeSrc": "4505:26:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4505:26:8"
																					},
																					"nativeSrc": "4502:52:8",
																					"nodeType": "YulIf",
																					"src": "4502:52:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "amount",
																							"nativeSrc": "4365:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "4365:6:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4373:4:8",
																							"nodeType": "YulLiteral",
																							"src": "4373:4:8",
																							"type": "",
																							"value": "0x0b"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4379:4:8",
																							"nodeType": "YulLiteral",
																							"src": "4379:4:8",
																							"type": "",
																							"value": "0x16"
																						}
																					],
																					"functionName": {
																						"name": "create",
																						"nativeSrc": "4358:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4358:6:8"
																					},
																					"nativeSrc": "4358:26:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4358:26:8"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "4351:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4351:6:8"
																			},
																			"nativeSrc": "4351:34:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4351:34:8"
																		},
																		"nativeSrc": "4348:224:8",
																		"nodeType": "YulIf",
																		"src": "4348:224:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "gasStipend",
																				"nativeSrc": "3925:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "3925:10:8"
																			},
																			{
																				"name": "to",
																				"nativeSrc": "3937:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "3937:2:8"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "3941:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3941:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3949:4:8",
																				"nodeType": "YulLiteral",
																				"src": "3949:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3955:4:8",
																				"nodeType": "YulLiteral",
																				"src": "3955:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3961:4:8",
																				"nodeType": "YulLiteral",
																				"src": "3961:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3967:4:8",
																				"nodeType": "YulLiteral",
																				"src": "3967:4:8",
																				"type": "",
																				"value": "0x00"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nativeSrc": "3920:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "3920:4:8"
																		},
																		"nativeSrc": "3920:52:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3920:52:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3913:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3913:6:8"
																},
																"nativeSrc": "3913:60:8",
																"nodeType": "YulFunctionCall",
																"src": "3913:60:8"
															},
															"nativeSrc": "3910:676:8",
															"nodeType": "YulIf",
															"src": "3910:676:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1688,
														"isOffset": false,
														"isSlot": false,
														"src": "3612:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1688,
														"isOffset": false,
														"isSlot": false,
														"src": "3941:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1688,
														"isOffset": false,
														"isSlot": false,
														"src": "4365:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1690,
														"isOffset": false,
														"isSlot": false,
														"src": "3925:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1686,
														"isOffset": false,
														"isSlot": false,
														"src": "3937:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1686,
														"isOffset": false,
														"isSlot": false,
														"src": "4005:2:8",
														"valueSize": 1
													}
												],
												"id": 1693,
												"nodeType": "InlineAssembly",
												"src": "3520:1076:8"
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "2951:424:8",
										"text": "@dev Force sends `amount` (in wei) ETH to `to`, with a `gasStipend`.\n The `gasStipend` can be set to a low enough value to prevent\n storage writes or gas griefing.\n If sending via the normal procedure fails, force sends the ETH by\n creating a temporary contract which uses `SELFDESTRUCT` to force send the ETH.\n Reverts if the current contract has insufficient balance."
									},
									"id": 1695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceSafeTransferETH",
									"nameLocation": "3389:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3418:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3410:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3430:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3422:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3422:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "gasStipend",
												"nameLocation": "3446:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3438:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3409:48:8"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3467:0:8"
									},
									"scope": 1808,
									"src": "3380:1222:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1704,
										"nodeType": "Block",
										"src": "5193:1234:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5344:1077:8",
													"nodeType": "YulBlock",
													"src": "5344:1077:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5435:211:8",
																"nodeType": "YulBlock",
																"src": "5435:211:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5533:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5533:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5539:10:8",
																					"nodeType": "YulLiteral",
																					"src": "5539:10:8",
																					"type": "",
																					"value": "0xb12d13eb"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5526:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5526:6:8"
																			},
																			"nativeSrc": "5526:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5526:24:8"
																		},
																		"nativeSrc": "5526:24:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5526:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5621:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5621:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5627:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5627:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5614:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5614:6:8"
																			},
																			"nativeSrc": "5614:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5614:18:8"
																		},
																		"nativeSrc": "5614:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5614:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "selfbalance",
																			"nativeSrc": "5412:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "5412:11:8"
																		},
																		"nativeSrc": "5412:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5412:13:8"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "5427:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5427:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5409:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5409:2:8"
																},
																"nativeSrc": "5409:25:8",
																"nodeType": "YulFunctionCall",
																"src": "5409:25:8"
															},
															"nativeSrc": "5406:240:8",
															"nodeType": "YulIf",
															"src": "5406:240:8"
														},
														{
															"body": {
																"nativeSrc": "5799:612:8",
																"nodeType": "YulBlock",
																"src": "5799:612:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5824:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5824:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"name": "to",
																					"nativeSrc": "5830:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "5830:2:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5817:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5817:6:8"
																			},
																			"nativeSrc": "5817:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5817:16:8"
																		},
																		"nativeSrc": "5817:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5817:16:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5897:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5897:4:8",
																					"type": "",
																					"value": "0x0b"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5903:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5903:4:8",
																					"type": "",
																					"value": "0x73"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "5889:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5889:7:8"
																			},
																			"nativeSrc": "5889:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5889:19:8"
																		},
																		"nativeSrc": "5889:19:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5889:19:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5953:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5953:4:8",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5959:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5959:4:8",
																					"type": "",
																					"value": "0xff"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "5945:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5945:7:8"
																			},
																			"nativeSrc": "5945:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5945:19:8"
																		},
																		"nativeSrc": "5945:19:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5945:19:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "6211:186:8",
																			"nodeType": "YulBlock",
																			"src": "6211:186:8",
																			"statements": [
																				{
																					"body": {
																						"nativeSrc": "6357:22:8",
																						"nodeType": "YulBlock",
																						"src": "6357:22:8",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "6366:4:8",
																											"nodeType": "YulLiteral",
																											"src": "6366:4:8",
																											"type": "",
																											"value": "0x00"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6372:4:8",
																											"nodeType": "YulLiteral",
																											"src": "6372:4:8",
																											"type": "",
																											"value": "0x00"
																										}
																									],
																									"functionName": {
																										"name": "revert",
																										"nativeSrc": "6359:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6359:6:8"
																									},
																									"nativeSrc": "6359:18:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6359:18:8"
																								},
																								"nativeSrc": "6359:18:8",
																								"nodeType": "YulExpressionStatement",
																								"src": "6359:18:8"
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [],
																										"functionName": {
																											"name": "gas",
																											"nativeSrc": "6340:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6340:3:8"
																										},
																										"nativeSrc": "6340:5:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6340:5:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6347:7:8",
																										"nodeType": "YulLiteral",
																										"src": "6347:7:8",
																										"type": "",
																										"value": "1000000"
																									}
																								],
																								"functionName": {
																									"name": "gt",
																									"nativeSrc": "6337:2:8",
																									"nodeType": "YulIdentifier",
																									"src": "6337:2:8"
																								},
																								"nativeSrc": "6337:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6337:18:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "6330:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6330:6:8"
																						},
																						"nativeSrc": "6330:26:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6330:26:8"
																					},
																					"nativeSrc": "6327:52:8",
																					"nodeType": "YulIf",
																					"src": "6327:52:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "amount",
																							"nativeSrc": "6190:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6190:6:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6198:4:8",
																							"nodeType": "YulLiteral",
																							"src": "6198:4:8",
																							"type": "",
																							"value": "0x0b"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6204:4:8",
																							"nodeType": "YulLiteral",
																							"src": "6204:4:8",
																							"type": "",
																							"value": "0x16"
																						}
																					],
																					"functionName": {
																						"name": "create",
																						"nativeSrc": "6183:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6183:6:8"
																					},
																					"nativeSrc": "6183:26:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6183:26:8"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "6176:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6176:6:8"
																			},
																			"nativeSrc": "6176:34:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6176:34:8"
																		},
																		"nativeSrc": "6173:224:8",
																		"nodeType": "YulIf",
																		"src": "6173:224:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "GAS_STIPEND_NO_GRIEF",
																				"nativeSrc": "5740:20:8",
																				"nodeType": "YulIdentifier",
																				"src": "5740:20:8"
																			},
																			{
																				"name": "to",
																				"nativeSrc": "5762:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "5762:2:8"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "5766:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5766:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5774:4:8",
																				"nodeType": "YulLiteral",
																				"src": "5774:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5780:4:8",
																				"nodeType": "YulLiteral",
																				"src": "5780:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5786:4:8",
																				"nodeType": "YulLiteral",
																				"src": "5786:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5792:4:8",
																				"nodeType": "YulLiteral",
																				"src": "5792:4:8",
																				"type": "",
																				"value": "0x00"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nativeSrc": "5735:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "5735:4:8"
																		},
																		"nativeSrc": "5735:62:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5735:62:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5728:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5728:6:8"
																},
																"nativeSrc": "5728:70:8",
																"nodeType": "YulFunctionCall",
																"src": "5728:70:8"
															},
															"nativeSrc": "5725:686:8",
															"nodeType": "YulIf",
															"src": "5725:686:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1673,
														"isOffset": false,
														"isSlot": false,
														"src": "5740:20:8",
														"valueSize": 1
													},
													{
														"declaration": 1700,
														"isOffset": false,
														"isSlot": false,
														"src": "5427:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1700,
														"isOffset": false,
														"isSlot": false,
														"src": "5766:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1700,
														"isOffset": false,
														"isSlot": false,
														"src": "6190:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1698,
														"isOffset": false,
														"isSlot": false,
														"src": "5762:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1698,
														"isOffset": false,
														"isSlot": false,
														"src": "5830:2:8",
														"valueSize": 1
													}
												],
												"id": 1703,
												"nodeType": "InlineAssembly",
												"src": "5335:1086:8"
											}
										]
									},
									"documentation": {
										"id": 1696,
										"nodeType": "StructuredDocumentation",
										"src": "4608:513:8",
										"text": "@dev Force sends `amount` (in wei) ETH to `to`, with a gas stipend\n equal to `GAS_STIPEND_NO_GRIEF`. This gas stipend is a reasonable default\n for 99% of cases and can be overridden with the three-argument version of this\n function if necessary.\n If sending via the normal procedure fails, force sends the ETH by\n creating a temporary contract which uses `SELFDESTRUCT` to force send the ETH.\n Reverts if the current contract has insufficient balance."
									},
									"id": 1705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceSafeTransferETH",
									"nameLocation": "5135:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5164:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "5156:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5156:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5176:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "5168:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5168:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:28:8"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5193:0:8"
									},
									"scope": 1808,
									"src": "5126:1301:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1718,
										"nodeType": "Block",
										"src": "6949:221:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "7011:153:8",
													"nodeType": "YulBlock",
													"src": "7011:153:8",
													"statements": [
														{
															"nativeSrc": "7091:63:8",
															"nodeType": "YulAssignment",
															"src": "7091:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "gasStipend",
																		"nativeSrc": "7107:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "7107:10:8"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "7119:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "7119:2:8"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "7123:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7123:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7131:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7131:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7137:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7137:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7143:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7143:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7149:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7149:4:8",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7102:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7102:4:8"
																},
																"nativeSrc": "7102:52:8",
																"nodeType": "YulFunctionCall",
																"src": "7102:52:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "7091:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "7091:7:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1710,
														"isOffset": false,
														"isSlot": false,
														"src": "7123:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1712,
														"isOffset": false,
														"isSlot": false,
														"src": "7107:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1715,
														"isOffset": false,
														"isSlot": false,
														"src": "7091:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1708,
														"isOffset": false,
														"isSlot": false,
														"src": "7119:2:8",
														"valueSize": 1
													}
												],
												"id": 1717,
												"nodeType": "InlineAssembly",
												"src": "7002:162:8"
											}
										]
									},
									"documentation": {
										"id": 1706,
										"nodeType": "StructuredDocumentation",
										"src": "6433:383:8",
										"text": "@dev Sends `amount` (in wei) ETH to `to`, with a `gasStipend`.\n The `gasStipend` can be set to a low enough value to prevent\n storage writes or gas griefing.\n Simply use `gasleft()` for `gasStipend` if you don't need a gas stipend.\n Note: Does NOT revert upon failure.\n Returns whether the transfer of ETH is successful instead."
									},
									"id": 1719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferETH",
									"nameLocation": "6830:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6857:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "6849:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6849:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6869:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "6861:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6861:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "gasStipend",
												"nameLocation": "6885:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "6877:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6877:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6848:48:8"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6936:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "6931:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6931:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6930:14:8"
									},
									"scope": 1808,
									"src": "6821:349:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "7763:1287:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "7825:1219:8",
													"nodeType": "YulBlock",
													"src": "7825:1219:8",
													"statements": [
														{
															"nativeSrc": "7839:20:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7839:20:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7854:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7854:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7848:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7848:5:8"
																},
																"nativeSrc": "7848:11:8",
																"nodeType": "YulFunctionCall",
																"src": "7848:11:8"
															},
															"variables": [
																{
																	"name": "m",
																	"nativeSrc": "7843:1:8",
																	"nodeType": "YulTypedName",
																	"src": "7843:1:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7914:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7914:4:8",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "7920:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7920:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7907:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7907:6:8"
																},
																"nativeSrc": "7907:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7907:20:8"
															},
															"nativeSrc": "7907:20:8",
															"nodeType": "YulExpressionStatement",
															"src": "7907:20:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7979:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7979:4:8",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "7985:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "7985:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7972:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7972:6:8"
																},
																"nativeSrc": "7972:16:8",
																"nodeType": "YulFunctionCall",
																"src": "7972:16:8"
															},
															"nativeSrc": "7972:16:8",
															"nodeType": "YulExpressionStatement",
															"src": "7972:16:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8036:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8036:4:8",
																		"type": "",
																		"value": "0x2c"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8046:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8046:2:8",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "from",
																				"nativeSrc": "8050:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8050:4:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8042:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8042:3:8"
																		},
																		"nativeSrc": "8042:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8042:13:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8029:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8029:6:8"
																},
																"nativeSrc": "8029:27:8",
																"nodeType": "YulFunctionCall",
																"src": "8029:27:8"
															},
															"nativeSrc": "8029:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "8029:27:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8193:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8193:4:8",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8199:34:8",
																		"nodeType": "YulLiteral",
																		"src": "8199:34:8",
																		"type": "",
																		"value": "0x23b872dd000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8186:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8186:6:8"
																},
																"nativeSrc": "8186:48:8",
																"nodeType": "YulFunctionCall",
																"src": "8186:48:8"
															},
															"nativeSrc": "8186:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "8186:48:8"
														},
														{
															"body": {
																"nativeSrc": "8695:212:8",
																"nodeType": "YulBlock",
																"src": "8695:212:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8794:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8794:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8800:10:8",
																					"nodeType": "YulLiteral",
																					"src": "8800:10:8",
																					"type": "",
																					"value": "0x7939f424"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8787:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8787:6:8"
																			},
																			"nativeSrc": "8787:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8787:24:8"
																		},
																		"nativeSrc": "8787:24:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8787:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8882:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8882:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8888:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8888:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8875:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8875:6:8"
																			},
																			"nativeSrc": "8875:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8875:18:8"
																		},
																		"nativeSrc": "8875:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8875:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "8559:4:8",
																										"nodeType": "YulLiteral",
																										"src": "8559:4:8",
																										"type": "",
																										"value": "0x00"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8553:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8553:5:8"
																								},
																								"nativeSrc": "8553:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8553:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8566:1:8",
																								"nodeType": "YulLiteral",
																								"src": "8566:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nativeSrc": "8550:2:8",
																							"nodeType": "YulIdentifier",
																							"src": "8550:2:8"
																						},
																						"nativeSrc": "8550:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8550:18:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "8577:14:8",
																									"nodeType": "YulIdentifier",
																									"src": "8577:14:8"
																								},
																								"nativeSrc": "8577:16:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8577:16:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "8570:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "8570:6:8"
																						},
																						"nativeSrc": "8570:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8570:24:8"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nativeSrc": "8547:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8547:2:8"
																				},
																				"nativeSrc": "8547:48:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8547:48:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nativeSrc": "8622:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8622:3:8"
																						},
																						"nativeSrc": "8622:5:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8622:5:8"
																					},
																					{
																						"name": "token",
																						"nativeSrc": "8629:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8629:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8636:1:8",
																						"nodeType": "YulLiteral",
																						"src": "8636:1:8",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8639:4:8",
																						"nodeType": "YulLiteral",
																						"src": "8639:4:8",
																						"type": "",
																						"value": "0x1c"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8645:4:8",
																						"nodeType": "YulLiteral",
																						"src": "8645:4:8",
																						"type": "",
																						"value": "0x64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8651:4:8",
																						"nodeType": "YulLiteral",
																						"src": "8651:4:8",
																						"type": "",
																						"value": "0x00"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8657:4:8",
																						"nodeType": "YulLiteral",
																						"src": "8657:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "call",
																					"nativeSrc": "8617:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8617:4:8"
																				},
																				"nativeSrc": "8617:45:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8617:45:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8275:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8275:3:8"
																		},
																		"nativeSrc": "8275:405:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8275:405:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8251:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8251:6:8"
																},
																"nativeSrc": "8251:443:8",
																"nodeType": "YulFunctionCall",
																"src": "8251:443:8"
															},
															"nativeSrc": "8248:659:8",
															"nodeType": "YulIf",
															"src": "8248:659:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8928:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8928:4:8",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8934:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8934:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8921:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8921:6:8"
																},
																"nativeSrc": "8921:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8921:15:8"
															},
															"nativeSrc": "8921:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8921:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8990:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8990:4:8",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "8996:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8996:1:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8983:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8983:6:8"
																},
																"nativeSrc": "8983:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8983:15:8"
															},
															"nativeSrc": "8983:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8983:15:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1728,
														"isOffset": false,
														"isSlot": false,
														"src": "7920:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1724,
														"isOffset": false,
														"isSlot": false,
														"src": "8050:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1726,
														"isOffset": false,
														"isSlot": false,
														"src": "7985:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1722,
														"isOffset": false,
														"isSlot": false,
														"src": "8629:5:8",
														"valueSize": 1
													}
												],
												"id": 1731,
												"nodeType": "InlineAssembly",
												"src": "7816:1228:8"
											}
										]
									},
									"documentation": {
										"id": 1720,
										"nodeType": "StructuredDocumentation",
										"src": "7459:207:8",
										"text": "@dev Sends `amount` of ERC20 `token` from `from` to `to`.\n Reverts upon failure.\n The `from` account must have at least `amount` approved for\n the current contract to manage."
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "7680:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7705:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "7697:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7697:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7720:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "7712:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7712:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7734:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "7726:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7726:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7746:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "7738:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7738:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7696:57:8"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7763:0:8"
									},
									"scope": 1808,
									"src": "7671:1379:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1746,
										"nodeType": "Block",
										"src": "9390:1948:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "9452:1880:8",
													"nodeType": "YulBlock",
													"src": "9452:1880:8",
													"statements": [
														{
															"nativeSrc": "9466:20:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9466:20:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9481:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9481:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9475:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9475:5:8"
																},
																"nativeSrc": "9475:11:8",
																"nodeType": "YulFunctionCall",
																"src": "9475:11:8"
															},
															"variables": [
																{
																	"name": "m",
																	"nativeSrc": "9470:1:8",
																	"nodeType": "YulTypedName",
																	"src": "9470:1:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9541:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9541:4:8",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "9547:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "9547:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9534:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9534:6:8"
																},
																"nativeSrc": "9534:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9534:16:8"
															},
															"nativeSrc": "9534:16:8",
															"nodeType": "YulExpressionStatement",
															"src": "9534:16:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9598:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9598:4:8",
																		"type": "",
																		"value": "0x2c"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9608:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9608:2:8",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "from",
																				"nativeSrc": "9612:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9612:4:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9604:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9604:3:8"
																		},
																		"nativeSrc": "9604:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9604:13:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9591:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9591:6:8"
																},
																"nativeSrc": "9591:27:8",
																"nodeType": "YulFunctionCall",
																"src": "9591:27:8"
															},
															"nativeSrc": "9591:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "9591:27:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9736:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9736:4:8",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9742:34:8",
																		"nodeType": "YulLiteral",
																		"src": "9742:34:8",
																		"type": "",
																		"value": "0x70a08231000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9729:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9729:6:8"
																},
																"nativeSrc": "9729:48:8",
																"nodeType": "YulFunctionCall",
																"src": "9729:48:8"
															},
															"nativeSrc": "9729:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "9729:48:8"
														},
														{
															"body": {
																"nativeSrc": "10062:212:8",
																"nodeType": "YulBlock",
																"src": "10062:212:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10161:4:8",
																					"nodeType": "YulLiteral",
																					"src": "10161:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10167:10:8",
																					"nodeType": "YulLiteral",
																					"src": "10167:10:8",
																					"type": "",
																					"value": "0x7939f424"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10154:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10154:6:8"
																			},
																			"nativeSrc": "10154:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10154:24:8"
																		},
																		"nativeSrc": "10154:24:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10154:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10249:4:8",
																					"nodeType": "YulLiteral",
																					"src": "10249:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10255:4:8",
																					"nodeType": "YulLiteral",
																					"src": "10255:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10242:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10242:6:8"
																			},
																			"nativeSrc": "10242:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10242:18:8"
																		},
																		"nativeSrc": "10242:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10242:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "9905:14:8",
																							"nodeType": "YulIdentifier",
																							"src": "9905:14:8"
																						},
																						"nativeSrc": "9905:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9905:16:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9923:4:8",
																						"nodeType": "YulLiteral",
																						"src": "9923:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "9902:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9902:2:8"
																				},
																				"nativeSrc": "9902:26:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9902:26:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nativeSrc": "9992:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9992:3:8"
																						},
																						"nativeSrc": "9992:5:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9992:5:8"
																					},
																					{
																						"name": "token",
																						"nativeSrc": "9999:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9999:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10006:4:8",
																						"nodeType": "YulLiteral",
																						"src": "10006:4:8",
																						"type": "",
																						"value": "0x1c"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10012:4:8",
																						"nodeType": "YulLiteral",
																						"src": "10012:4:8",
																						"type": "",
																						"value": "0x24"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10018:4:8",
																						"nodeType": "YulLiteral",
																						"src": "10018:4:8",
																						"type": "",
																						"value": "0x60"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10024:4:8",
																						"nodeType": "YulLiteral",
																						"src": "10024:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "staticcall",
																					"nativeSrc": "9981:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "9981:10:8"
																				},
																				"nativeSrc": "9981:48:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9981:48:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9817:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9817:3:8"
																		},
																		"nativeSrc": "9817:230:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9817:230:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9793:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9793:6:8"
																},
																"nativeSrc": "9793:268:8",
																"nodeType": "YulFunctionCall",
																"src": "9793:268:8"
															},
															"nativeSrc": "9790:484:8",
															"nodeType": "YulIf",
															"src": "9790:484:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10382:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10382:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10388:10:8",
																		"nodeType": "YulLiteral",
																		"src": "10388:10:8",
																		"type": "",
																		"value": "0x23b872dd"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10375:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10375:6:8"
																},
																"nativeSrc": "10375:24:8",
																"nodeType": "YulFunctionCall",
																"src": "10375:24:8"
															},
															"nativeSrc": "10375:24:8",
															"nodeType": "YulExpressionStatement",
															"src": "10375:24:8"
														},
														{
															"nativeSrc": "10501:21:8",
															"nodeType": "YulAssignment",
															"src": "10501:21:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10517:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10517:4:8",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10511:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10511:5:8"
																},
																"nativeSrc": "10511:11:8",
																"nodeType": "YulFunctionCall",
																"src": "10511:11:8"
															},
															"variableNames": [
																{
																	"name": "amount",
																	"nativeSrc": "10501:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10983:212:8",
																"nodeType": "YulBlock",
																"src": "10983:212:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11082:4:8",
																					"nodeType": "YulLiteral",
																					"src": "11082:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11088:10:8",
																					"nodeType": "YulLiteral",
																					"src": "11088:10:8",
																					"type": "",
																					"value": "0x7939f424"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11075:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11075:6:8"
																			},
																			"nativeSrc": "11075:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11075:24:8"
																		},
																		"nativeSrc": "11075:24:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11075:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11170:4:8",
																					"nodeType": "YulLiteral",
																					"src": "11170:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11176:4:8",
																					"nodeType": "YulLiteral",
																					"src": "11176:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11163:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11163:6:8"
																			},
																			"nativeSrc": "11163:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11163:18:8"
																		},
																		"nativeSrc": "11163:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11163:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "10847:4:8",
																										"nodeType": "YulLiteral",
																										"src": "10847:4:8",
																										"type": "",
																										"value": "0x00"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10841:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "10841:5:8"
																								},
																								"nativeSrc": "10841:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10841:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10854:1:8",
																								"nodeType": "YulLiteral",
																								"src": "10854:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nativeSrc": "10838:2:8",
																							"nodeType": "YulIdentifier",
																							"src": "10838:2:8"
																						},
																						"nativeSrc": "10838:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "10838:18:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "10865:14:8",
																									"nodeType": "YulIdentifier",
																									"src": "10865:14:8"
																								},
																								"nativeSrc": "10865:16:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10865:16:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "10858:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "10858:6:8"
																						},
																						"nativeSrc": "10858:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "10858:24:8"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nativeSrc": "10835:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "10835:2:8"
																				},
																				"nativeSrc": "10835:48:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10835:48:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nativeSrc": "10910:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "10910:3:8"
																						},
																						"nativeSrc": "10910:5:8",
																						"nodeType": "YulFunctionCall",
																						"src": "10910:5:8"
																					},
																					{
																						"name": "token",
																						"nativeSrc": "10917:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "10917:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10924:1:8",
																						"nodeType": "YulLiteral",
																						"src": "10924:1:8",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10927:4:8",
																						"nodeType": "YulLiteral",
																						"src": "10927:4:8",
																						"type": "",
																						"value": "0x1c"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10933:4:8",
																						"nodeType": "YulLiteral",
																						"src": "10933:4:8",
																						"type": "",
																						"value": "0x64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10939:4:8",
																						"nodeType": "YulLiteral",
																						"src": "10939:4:8",
																						"type": "",
																						"value": "0x00"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10945:4:8",
																						"nodeType": "YulLiteral",
																						"src": "10945:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "call",
																					"nativeSrc": "10905:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "10905:4:8"
																				},
																				"nativeSrc": "10905:45:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10905:45:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10563:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10563:3:8"
																		},
																		"nativeSrc": "10563:405:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10563:405:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10539:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10539:6:8"
																},
																"nativeSrc": "10539:443:8",
																"nodeType": "YulFunctionCall",
																"src": "10539:443:8"
															},
															"nativeSrc": "10536:659:8",
															"nodeType": "YulIf",
															"src": "10536:659:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11216:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11216:4:8",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11222:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11222:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11209:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11209:6:8"
																},
																"nativeSrc": "11209:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11209:15:8"
															},
															"nativeSrc": "11209:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11209:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11278:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11278:4:8",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "11284:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11284:1:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11271:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11271:6:8"
																},
																"nativeSrc": "11271:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11271:15:8"
															},
															"nativeSrc": "11271:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11271:15:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1743,
														"isOffset": false,
														"isSlot": false,
														"src": "10501:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "9612:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1740,
														"isOffset": false,
														"isSlot": false,
														"src": "9547:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1736,
														"isOffset": false,
														"isSlot": false,
														"src": "10917:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1736,
														"isOffset": false,
														"isSlot": false,
														"src": "9999:5:8",
														"valueSize": 1
													}
												],
												"id": 1745,
												"nodeType": "InlineAssembly",
												"src": "9443:1889:8"
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "9056:205:8",
										"text": "@dev Sends all of ERC20 `token` from `from` to `to`.\n Reverts upon failure.\n The `from` account must have their entire balance approved for\n the current contract to manage."
									},
									"id": 1747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferAllFrom",
									"nameLocation": "9275:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9303:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "9295:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9295:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9318:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "9310:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9310:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9332:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "9324:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9324:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9294:41:8"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9378:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "9370:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9370:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9369:16:8"
									},
									"scope": 1808,
									"src": "9266:2072:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "11528:1115:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "11590:1047:8",
													"nodeType": "YulBlock",
													"src": "11590:1047:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11611:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11611:4:8",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "11617:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "11617:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11604:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11604:6:8"
																},
																"nativeSrc": "11604:16:8",
																"nodeType": "YulFunctionCall",
																"src": "11604:16:8"
															},
															"nativeSrc": "11604:16:8",
															"nodeType": "YulExpressionStatement",
															"src": "11604:16:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11668:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11668:4:8",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "11674:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11674:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11661:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11661:6:8"
																},
																"nativeSrc": "11661:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11661:20:8"
															},
															"nativeSrc": "11661:20:8",
															"nodeType": "YulExpressionStatement",
															"src": "11661:20:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11808:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11808:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11814:34:8",
																		"nodeType": "YulLiteral",
																		"src": "11814:34:8",
																		"type": "",
																		"value": "0xa9059cbb000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11801:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11801:6:8"
																},
																"nativeSrc": "11801:48:8",
																"nodeType": "YulFunctionCall",
																"src": "11801:48:8"
															},
															"nativeSrc": "11801:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "11801:48:8"
														},
														{
															"body": {
																"nativeSrc": "12310:208:8",
																"nodeType": "YulBlock",
																"src": "12310:208:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12405:4:8",
																					"nodeType": "YulLiteral",
																					"src": "12405:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12411:10:8",
																					"nodeType": "YulLiteral",
																					"src": "12411:10:8",
																					"type": "",
																					"value": "0x90b8ec18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12398:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12398:6:8"
																			},
																			"nativeSrc": "12398:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12398:24:8"
																		},
																		"nativeSrc": "12398:24:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12398:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12493:4:8",
																					"nodeType": "YulLiteral",
																					"src": "12493:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12499:4:8",
																					"nodeType": "YulLiteral",
																					"src": "12499:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12486:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12486:6:8"
																			},
																			"nativeSrc": "12486:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12486:18:8"
																		},
																		"nativeSrc": "12486:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12486:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12174:4:8",
																										"nodeType": "YulLiteral",
																										"src": "12174:4:8",
																										"type": "",
																										"value": "0x00"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "12168:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "12168:5:8"
																								},
																								"nativeSrc": "12168:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "12168:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12181:1:8",
																								"nodeType": "YulLiteral",
																								"src": "12181:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nativeSrc": "12165:2:8",
																							"nodeType": "YulIdentifier",
																							"src": "12165:2:8"
																						},
																						"nativeSrc": "12165:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "12165:18:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "12192:14:8",
																									"nodeType": "YulIdentifier",
																									"src": "12192:14:8"
																								},
																								"nativeSrc": "12192:16:8",
																								"nodeType": "YulFunctionCall",
																								"src": "12192:16:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "12185:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "12185:6:8"
																						},
																						"nativeSrc": "12185:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "12185:24:8"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nativeSrc": "12162:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "12162:2:8"
																				},
																				"nativeSrc": "12162:48:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12162:48:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nativeSrc": "12237:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "12237:3:8"
																						},
																						"nativeSrc": "12237:5:8",
																						"nodeType": "YulFunctionCall",
																						"src": "12237:5:8"
																					},
																					{
																						"name": "token",
																						"nativeSrc": "12244:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "12244:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12251:1:8",
																						"nodeType": "YulLiteral",
																						"src": "12251:1:8",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12254:4:8",
																						"nodeType": "YulLiteral",
																						"src": "12254:4:8",
																						"type": "",
																						"value": "0x10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12260:4:8",
																						"nodeType": "YulLiteral",
																						"src": "12260:4:8",
																						"type": "",
																						"value": "0x44"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12266:4:8",
																						"nodeType": "YulLiteral",
																						"src": "12266:4:8",
																						"type": "",
																						"value": "0x00"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12272:4:8",
																						"nodeType": "YulLiteral",
																						"src": "12272:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "call",
																					"nativeSrc": "12232:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "12232:4:8"
																				},
																				"nativeSrc": "12232:45:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12232:45:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11890:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11890:3:8"
																		},
																		"nativeSrc": "11890:405:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11890:405:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11866:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11866:6:8"
																},
																"nativeSrc": "11866:443:8",
																"nodeType": "YulFunctionCall",
																"src": "11866:443:8"
															},
															"nativeSrc": "11863:655:8",
															"nodeType": "YulIf",
															"src": "11863:655:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12619:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12619:4:8",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12625:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12625:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12612:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12612:6:8"
																},
																"nativeSrc": "12612:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12612:15:8"
															},
															"nativeSrc": "12612:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12612:15:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1754,
														"isOffset": false,
														"isSlot": false,
														"src": "11674:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1752,
														"isOffset": false,
														"isSlot": false,
														"src": "11617:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1750,
														"isOffset": false,
														"isSlot": false,
														"src": "12244:5:8",
														"valueSize": 1
													}
												],
												"id": 1757,
												"nodeType": "InlineAssembly",
												"src": "11581:1056:8"
											}
										]
									},
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "11344:105:8",
										"text": "@dev Sends `amount` of ERC20 `token` from the current contract to `to`.\n Reverts upon failure."
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "11463:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "11484:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "11476:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11476:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11499:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "11491:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11491:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11511:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "11503:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11503:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11475:43:8"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11528:0:8"
									},
									"scope": 1808,
									"src": "11454:1189:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1770,
										"nodeType": "Block",
										"src": "12840:1842:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "12902:1774:8",
													"nodeType": "YulBlock",
													"src": "12902:1774:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12923:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12923:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12929:10:8",
																		"nodeType": "YulLiteral",
																		"src": "12929:10:8",
																		"type": "",
																		"value": "0x70a08231"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12916:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12916:6:8"
																},
																"nativeSrc": "12916:24:8",
																"nodeType": "YulFunctionCall",
																"src": "12916:24:8"
															},
															"nativeSrc": "12916:24:8",
															"nodeType": "YulExpressionStatement",
															"src": "12916:24:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13016:4:8",
																		"nodeType": "YulLiteral",
																		"src": "13016:4:8",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nativeSrc": "13022:7:8",
																			"nodeType": "YulIdentifier",
																			"src": "13022:7:8"
																		},
																		"nativeSrc": "13022:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13022:9:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13009:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13009:6:8"
																},
																"nativeSrc": "13009:23:8",
																"nodeType": "YulFunctionCall",
																"src": "13009:23:8"
															},
															"nativeSrc": "13009:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "13009:23:8"
														},
														{
															"body": {
																"nativeSrc": "13363:208:8",
																"nodeType": "YulBlock",
																"src": "13363:208:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13458:4:8",
																					"nodeType": "YulLiteral",
																					"src": "13458:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13464:10:8",
																					"nodeType": "YulLiteral",
																					"src": "13464:10:8",
																					"type": "",
																					"value": "0x90b8ec18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13451:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13451:6:8"
																			},
																			"nativeSrc": "13451:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13451:24:8"
																		},
																		"nativeSrc": "13451:24:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13451:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13546:4:8",
																					"nodeType": "YulLiteral",
																					"src": "13546:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13552:4:8",
																					"nodeType": "YulLiteral",
																					"src": "13552:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13539:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13539:6:8"
																			},
																			"nativeSrc": "13539:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13539:18:8"
																		},
																		"nativeSrc": "13539:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13539:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "13206:14:8",
																							"nodeType": "YulIdentifier",
																							"src": "13206:14:8"
																						},
																						"nativeSrc": "13206:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "13206:16:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13224:4:8",
																						"nodeType": "YulLiteral",
																						"src": "13224:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "13203:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "13203:2:8"
																				},
																				"nativeSrc": "13203:26:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13203:26:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nativeSrc": "13293:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "13293:3:8"
																						},
																						"nativeSrc": "13293:5:8",
																						"nodeType": "YulFunctionCall",
																						"src": "13293:5:8"
																					},
																					{
																						"name": "token",
																						"nativeSrc": "13300:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "13300:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13307:4:8",
																						"nodeType": "YulLiteral",
																						"src": "13307:4:8",
																						"type": "",
																						"value": "0x1c"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13313:4:8",
																						"nodeType": "YulLiteral",
																						"src": "13313:4:8",
																						"type": "",
																						"value": "0x24"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13319:4:8",
																						"nodeType": "YulLiteral",
																						"src": "13319:4:8",
																						"type": "",
																						"value": "0x34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13325:4:8",
																						"nodeType": "YulLiteral",
																						"src": "13325:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "staticcall",
																					"nativeSrc": "13282:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "13282:10:8"
																				},
																				"nativeSrc": "13282:48:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13282:48:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13118:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13118:3:8"
																		},
																		"nativeSrc": "13118:230:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13118:230:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13094:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13094:6:8"
																},
																"nativeSrc": "13094:268:8",
																"nodeType": "YulFunctionCall",
																"src": "13094:268:8"
															},
															"nativeSrc": "13091:480:8",
															"nodeType": "YulIf",
															"src": "13091:480:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13592:4:8",
																		"nodeType": "YulLiteral",
																		"src": "13592:4:8",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "13598:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "13598:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13585:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13585:6:8"
																},
																"nativeSrc": "13585:16:8",
																"nodeType": "YulFunctionCall",
																"src": "13585:16:8"
															},
															"nativeSrc": "13585:16:8",
															"nodeType": "YulExpressionStatement",
															"src": "13585:16:8"
														},
														{
															"nativeSrc": "13731:21:8",
															"nodeType": "YulAssignment",
															"src": "13731:21:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13747:4:8",
																		"nodeType": "YulLiteral",
																		"src": "13747:4:8",
																		"type": "",
																		"value": "0x34"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13741:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "13741:5:8"
																},
																"nativeSrc": "13741:11:8",
																"nodeType": "YulFunctionCall",
																"src": "13741:11:8"
															},
															"variableNames": [
																{
																	"name": "amount",
																	"nativeSrc": "13731:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13731:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13847:4:8",
																		"nodeType": "YulLiteral",
																		"src": "13847:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13853:34:8",
																		"nodeType": "YulLiteral",
																		"src": "13853:34:8",
																		"type": "",
																		"value": "0xa9059cbb000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13840:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13840:6:8"
																},
																"nativeSrc": "13840:48:8",
																"nodeType": "YulFunctionCall",
																"src": "13840:48:8"
															},
															"nativeSrc": "13840:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "13840:48:8"
														},
														{
															"body": {
																"nativeSrc": "14349:208:8",
																"nodeType": "YulBlock",
																"src": "14349:208:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14444:4:8",
																					"nodeType": "YulLiteral",
																					"src": "14444:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14450:10:8",
																					"nodeType": "YulLiteral",
																					"src": "14450:10:8",
																					"type": "",
																					"value": "0x90b8ec18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14437:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14437:6:8"
																			},
																			"nativeSrc": "14437:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14437:24:8"
																		},
																		"nativeSrc": "14437:24:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14437:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14532:4:8",
																					"nodeType": "YulLiteral",
																					"src": "14532:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14538:4:8",
																					"nodeType": "YulLiteral",
																					"src": "14538:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14525:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14525:6:8"
																			},
																			"nativeSrc": "14525:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14525:18:8"
																		},
																		"nativeSrc": "14525:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14525:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "14213:4:8",
																										"nodeType": "YulLiteral",
																										"src": "14213:4:8",
																										"type": "",
																										"value": "0x00"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "14207:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "14207:5:8"
																								},
																								"nativeSrc": "14207:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "14207:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14220:1:8",
																								"nodeType": "YulLiteral",
																								"src": "14220:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nativeSrc": "14204:2:8",
																							"nodeType": "YulIdentifier",
																							"src": "14204:2:8"
																						},
																						"nativeSrc": "14204:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "14204:18:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "14231:14:8",
																									"nodeType": "YulIdentifier",
																									"src": "14231:14:8"
																								},
																								"nativeSrc": "14231:16:8",
																								"nodeType": "YulFunctionCall",
																								"src": "14231:16:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "14224:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "14224:6:8"
																						},
																						"nativeSrc": "14224:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "14224:24:8"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nativeSrc": "14201:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "14201:2:8"
																				},
																				"nativeSrc": "14201:48:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14201:48:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nativeSrc": "14276:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "14276:3:8"
																						},
																						"nativeSrc": "14276:5:8",
																						"nodeType": "YulFunctionCall",
																						"src": "14276:5:8"
																					},
																					{
																						"name": "token",
																						"nativeSrc": "14283:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "14283:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14290:1:8",
																						"nodeType": "YulLiteral",
																						"src": "14290:1:8",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14293:4:8",
																						"nodeType": "YulLiteral",
																						"src": "14293:4:8",
																						"type": "",
																						"value": "0x10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14299:4:8",
																						"nodeType": "YulLiteral",
																						"src": "14299:4:8",
																						"type": "",
																						"value": "0x44"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14305:4:8",
																						"nodeType": "YulLiteral",
																						"src": "14305:4:8",
																						"type": "",
																						"value": "0x00"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14311:4:8",
																						"nodeType": "YulLiteral",
																						"src": "14311:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "call",
																					"nativeSrc": "14271:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "14271:4:8"
																				},
																				"nativeSrc": "14271:45:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14271:45:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13929:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13929:3:8"
																		},
																		"nativeSrc": "13929:405:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13929:405:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13905:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13905:6:8"
																},
																"nativeSrc": "13905:443:8",
																"nodeType": "YulFunctionCall",
																"src": "13905:443:8"
															},
															"nativeSrc": "13902:655:8",
															"nodeType": "YulIf",
															"src": "13902:655:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14658:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14658:4:8",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14664:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14664:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14651:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14651:6:8"
																},
																"nativeSrc": "14651:15:8",
																"nodeType": "YulFunctionCall",
																"src": "14651:15:8"
															},
															"nativeSrc": "14651:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "14651:15:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1767,
														"isOffset": false,
														"isSlot": false,
														"src": "13731:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1764,
														"isOffset": false,
														"isSlot": false,
														"src": "13598:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1762,
														"isOffset": false,
														"isSlot": false,
														"src": "13300:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1762,
														"isOffset": false,
														"isSlot": false,
														"src": "14283:5:8",
														"valueSize": 1
													}
												],
												"id": 1769,
												"nodeType": "InlineAssembly",
												"src": "12893:1783:8"
											}
										]
									},
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "12649:100:8",
										"text": "@dev Sends all of ERC20 `token` from the current contract to `to`.\n Reverts upon failure."
									},
									"id": 1771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferAll",
									"nameLocation": "12763:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "12787:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "12779:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12779:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12802:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "12794:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12794:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12778:27:8"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12832:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "12824:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12824:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12823:16:8"
									},
									"scope": 1808,
									"src": "12754:1928:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "14889:1113:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "14951:1045:8",
													"nodeType": "YulBlock",
													"src": "14951:1045:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14972:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14972:4:8",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "14978:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "14978:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14965:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14965:6:8"
																},
																"nativeSrc": "14965:16:8",
																"nodeType": "YulFunctionCall",
																"src": "14965:16:8"
															},
															"nativeSrc": "14965:16:8",
															"nodeType": "YulExpressionStatement",
															"src": "14965:16:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15029:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15029:4:8",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "15035:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15035:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15022:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15022:6:8"
																},
																"nativeSrc": "15022:20:8",
																"nodeType": "YulFunctionCall",
																"src": "15022:20:8"
															},
															"nativeSrc": "15022:20:8",
															"nodeType": "YulExpressionStatement",
															"src": "15022:20:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15168:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15168:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15174:34:8",
																		"nodeType": "YulLiteral",
																		"src": "15174:34:8",
																		"type": "",
																		"value": "0x095ea7b3000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15161:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15161:6:8"
																},
																"nativeSrc": "15161:48:8",
																"nodeType": "YulFunctionCall",
																"src": "15161:48:8"
															},
															"nativeSrc": "15161:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "15161:48:8"
														},
														{
															"body": {
																"nativeSrc": "15670:207:8",
																"nodeType": "YulBlock",
																"src": "15670:207:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15764:4:8",
																					"nodeType": "YulLiteral",
																					"src": "15764:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15770:10:8",
																					"nodeType": "YulLiteral",
																					"src": "15770:10:8",
																					"type": "",
																					"value": "0x3e3f8f73"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "15757:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15757:6:8"
																			},
																			"nativeSrc": "15757:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15757:24:8"
																		},
																		"nativeSrc": "15757:24:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15757:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15852:4:8",
																					"nodeType": "YulLiteral",
																					"src": "15852:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15858:4:8",
																					"nodeType": "YulLiteral",
																					"src": "15858:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15845:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15845:6:8"
																			},
																			"nativeSrc": "15845:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15845:18:8"
																		},
																		"nativeSrc": "15845:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15845:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "15534:4:8",
																										"nodeType": "YulLiteral",
																										"src": "15534:4:8",
																										"type": "",
																										"value": "0x00"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "15528:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "15528:5:8"
																								},
																								"nativeSrc": "15528:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "15528:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15541:1:8",
																								"nodeType": "YulLiteral",
																								"src": "15541:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nativeSrc": "15525:2:8",
																							"nodeType": "YulIdentifier",
																							"src": "15525:2:8"
																						},
																						"nativeSrc": "15525:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "15525:18:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "15552:14:8",
																									"nodeType": "YulIdentifier",
																									"src": "15552:14:8"
																								},
																								"nativeSrc": "15552:16:8",
																								"nodeType": "YulFunctionCall",
																								"src": "15552:16:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "15545:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "15545:6:8"
																						},
																						"nativeSrc": "15545:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "15545:24:8"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nativeSrc": "15522:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "15522:2:8"
																				},
																				"nativeSrc": "15522:48:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15522:48:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nativeSrc": "15597:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "15597:3:8"
																						},
																						"nativeSrc": "15597:5:8",
																						"nodeType": "YulFunctionCall",
																						"src": "15597:5:8"
																					},
																					{
																						"name": "token",
																						"nativeSrc": "15604:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "15604:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15611:1:8",
																						"nodeType": "YulLiteral",
																						"src": "15611:1:8",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15614:4:8",
																						"nodeType": "YulLiteral",
																						"src": "15614:4:8",
																						"type": "",
																						"value": "0x10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15620:4:8",
																						"nodeType": "YulLiteral",
																						"src": "15620:4:8",
																						"type": "",
																						"value": "0x44"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15626:4:8",
																						"nodeType": "YulLiteral",
																						"src": "15626:4:8",
																						"type": "",
																						"value": "0x00"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15632:4:8",
																						"nodeType": "YulLiteral",
																						"src": "15632:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "call",
																					"nativeSrc": "15592:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "15592:4:8"
																				},
																				"nativeSrc": "15592:45:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15592:45:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15250:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15250:3:8"
																		},
																		"nativeSrc": "15250:405:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15250:405:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15226:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15226:6:8"
																},
																"nativeSrc": "15226:443:8",
																"nodeType": "YulFunctionCall",
																"src": "15226:443:8"
															},
															"nativeSrc": "15223:654:8",
															"nodeType": "YulIf",
															"src": "15223:654:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15978:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15978:4:8",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15984:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15984:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15971:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15971:6:8"
																},
																"nativeSrc": "15971:15:8",
																"nodeType": "YulFunctionCall",
																"src": "15971:15:8"
															},
															"nativeSrc": "15971:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "15971:15:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1778,
														"isOffset": false,
														"isSlot": false,
														"src": "15035:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1776,
														"isOffset": false,
														"isSlot": false,
														"src": "14978:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1774,
														"isOffset": false,
														"isSlot": false,
														"src": "15604:5:8",
														"valueSize": 1
													}
												],
												"id": 1781,
												"nodeType": "InlineAssembly",
												"src": "14942:1054:8"
											}
										]
									},
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "14688:123:8",
										"text": "@dev Sets `amount` of ERC20 `token` for `to` to manage on behalf of the current contract.\n Reverts upon failure."
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "14825:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14845:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "14837:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14837:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14860:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "14852:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14852:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14872:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "14864:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14864:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14836:43:8"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14889:0:8"
									},
									"scope": 1808,
									"src": "14816:1186:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "16395:1777:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16457:1709:8",
													"nodeType": "YulBlock",
													"src": "16457:1709:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16478:4:8",
																		"nodeType": "YulLiteral",
																		"src": "16478:4:8",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "16484:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "16484:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16471:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16471:6:8"
																},
																"nativeSrc": "16471:16:8",
																"nodeType": "YulFunctionCall",
																"src": "16471:16:8"
															},
															"nativeSrc": "16471:16:8",
															"nodeType": "YulExpressionStatement",
															"src": "16471:16:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16535:4:8",
																		"nodeType": "YulLiteral",
																		"src": "16535:4:8",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "16541:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16541:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16528:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16528:6:8"
																},
																"nativeSrc": "16528:20:8",
																"nodeType": "YulFunctionCall",
																"src": "16528:20:8"
															},
															"nativeSrc": "16528:20:8",
															"nodeType": "YulExpressionStatement",
															"src": "16528:20:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16674:4:8",
																		"nodeType": "YulLiteral",
																		"src": "16674:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16680:34:8",
																		"nodeType": "YulLiteral",
																		"src": "16680:34:8",
																		"type": "",
																		"value": "0x095ea7b3000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16667:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16667:6:8"
																},
																"nativeSrc": "16667:48:8",
																"nodeType": "YulFunctionCall",
																"src": "16667:48:8"
															},
															"nativeSrc": "16667:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "16667:48:8"
														},
														{
															"body": {
																"nativeSrc": "17176:871:8",
																"nodeType": "YulBlock",
																"src": "17176:871:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17201:4:8",
																					"nodeType": "YulLiteral",
																					"src": "17201:4:8",
																					"type": "",
																					"value": "0x34"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17207:1:8",
																					"nodeType": "YulLiteral",
																					"src": "17207:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "17194:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "17194:6:8"
																			},
																			"nativeSrc": "17194:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17194:15:8"
																		},
																		"nativeSrc": "17194:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "17194:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17262:4:8",
																					"nodeType": "YulLiteral",
																					"src": "17262:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17268:34:8",
																					"nodeType": "YulLiteral",
																					"src": "17268:34:8",
																					"type": "",
																					"value": "0x095ea7b3000000000000000000000000"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "17255:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "17255:6:8"
																			},
																			"nativeSrc": "17255:48:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17255:48:8"
																		},
																		"nativeSrc": "17255:48:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "17255:48:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "gas",
																								"nativeSrc": "17453:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "17453:3:8"
																							},
																							"nativeSrc": "17453:5:8",
																							"nodeType": "YulFunctionCall",
																							"src": "17453:5:8"
																						},
																						{
																							"name": "token",
																							"nativeSrc": "17460:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "17460:5:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "17467:1:8",
																							"nodeType": "YulLiteral",
																							"src": "17467:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "17470:4:8",
																							"nodeType": "YulLiteral",
																							"src": "17470:4:8",
																							"type": "",
																							"value": "0x10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "17476:4:8",
																							"nodeType": "YulLiteral",
																							"src": "17476:4:8",
																							"type": "",
																							"value": "0x44"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "17482:4:8",
																							"nodeType": "YulLiteral",
																							"src": "17482:4:8",
																							"type": "",
																							"value": "0x00"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "17488:4:8",
																							"nodeType": "YulLiteral",
																							"src": "17488:4:8",
																							"type": "",
																							"value": "0x00"
																						}
																					],
																					"functionName": {
																						"name": "call",
																						"nativeSrc": "17448:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "17448:4:8"
																					},
																					"nativeSrc": "17448:45:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17448:45:8"
																				}
																			],
																			"functionName": {
																				"name": "pop",
																				"nativeSrc": "17444:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "17444:3:8"
																			},
																			"nativeSrc": "17444:50:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17444:50:8"
																		},
																		"nativeSrc": "17444:50:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "17444:50:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17518:4:8",
																					"nodeType": "YulLiteral",
																					"src": "17518:4:8",
																					"type": "",
																					"value": "0x34"
																				},
																				{
																					"name": "amount",
																					"nativeSrc": "17524:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "17524:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "17511:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "17511:6:8"
																			},
																			"nativeSrc": "17511:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17511:20:8"
																		},
																		"nativeSrc": "17511:20:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "17511:20:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "17806:227:8",
																			"nodeType": "YulBlock",
																			"src": "17806:227:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "17908:4:8",
																								"nodeType": "YulLiteral",
																								"src": "17908:4:8",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "17914:10:8",
																								"nodeType": "YulLiteral",
																								"src": "17914:10:8",
																								"type": "",
																								"value": "0x3e3f8f73"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "17901:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "17901:6:8"
																						},
																						"nativeSrc": "17901:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "17901:24:8"
																					},
																					"nativeSrc": "17901:24:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "17901:24:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "18004:4:8",
																								"nodeType": "YulLiteral",
																								"src": "18004:4:8",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "18010:4:8",
																								"nodeType": "YulLiteral",
																								"src": "18010:4:8",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "17997:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "17997:6:8"
																						},
																						"nativeSrc": "17997:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "17997:18:8"
																					},
																					"nativeSrc": "17997:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "17997:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "17658:4:8",
																													"nodeType": "YulLiteral",
																													"src": "17658:4:8",
																													"type": "",
																													"value": "0x00"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nativeSrc": "17652:5:8",
																												"nodeType": "YulIdentifier",
																												"src": "17652:5:8"
																											},
																											"nativeSrc": "17652:11:8",
																											"nodeType": "YulFunctionCall",
																											"src": "17652:11:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "17665:1:8",
																											"nodeType": "YulLiteral",
																											"src": "17665:1:8",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "eq",
																										"nativeSrc": "17649:2:8",
																										"nodeType": "YulIdentifier",
																										"src": "17649:2:8"
																									},
																									"nativeSrc": "17649:18:8",
																									"nodeType": "YulFunctionCall",
																									"src": "17649:18:8"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "returndatasize",
																												"nativeSrc": "17676:14:8",
																												"nodeType": "YulIdentifier",
																												"src": "17676:14:8"
																											},
																											"nativeSrc": "17676:16:8",
																											"nodeType": "YulFunctionCall",
																											"src": "17676:16:8"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "17669:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "17669:6:8"
																									},
																									"nativeSrc": "17669:24:8",
																									"nodeType": "YulFunctionCall",
																									"src": "17669:24:8"
																								}
																							],
																							"functionName": {
																								"name": "or",
																								"nativeSrc": "17646:2:8",
																								"nodeType": "YulIdentifier",
																								"src": "17646:2:8"
																							},
																							"nativeSrc": "17646:48:8",
																							"nodeType": "YulFunctionCall",
																							"src": "17646:48:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "gas",
																										"nativeSrc": "17725:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "17725:3:8"
																									},
																									"nativeSrc": "17725:5:8",
																									"nodeType": "YulFunctionCall",
																									"src": "17725:5:8"
																								},
																								{
																									"name": "token",
																									"nativeSrc": "17732:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "17732:5:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17739:1:8",
																									"nodeType": "YulLiteral",
																									"src": "17739:1:8",
																									"type": "",
																									"value": "0"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17742:4:8",
																									"nodeType": "YulLiteral",
																									"src": "17742:4:8",
																									"type": "",
																									"value": "0x10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17748:4:8",
																									"nodeType": "YulLiteral",
																									"src": "17748:4:8",
																									"type": "",
																									"value": "0x44"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17754:4:8",
																									"nodeType": "YulLiteral",
																									"src": "17754:4:8",
																									"type": "",
																									"value": "0x00"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17760:4:8",
																									"nodeType": "YulLiteral",
																									"src": "17760:4:8",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "call",
																								"nativeSrc": "17720:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "17720:4:8"
																							},
																							"nativeSrc": "17720:45:8",
																							"nodeType": "YulFunctionCall",
																							"src": "17720:45:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "17617:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "17617:3:8"
																					},
																					"nativeSrc": "17617:170:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17617:170:8"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "17589:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "17589:6:8"
																			},
																			"nativeSrc": "17589:216:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17589:216:8"
																		},
																		"nativeSrc": "17586:447:8",
																		"nodeType": "YulIf",
																		"src": "17586:447:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "17040:4:8",
																										"nodeType": "YulLiteral",
																										"src": "17040:4:8",
																										"type": "",
																										"value": "0x00"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17034:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "17034:5:8"
																								},
																								"nativeSrc": "17034:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "17034:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "17047:1:8",
																								"nodeType": "YulLiteral",
																								"src": "17047:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nativeSrc": "17031:2:8",
																							"nodeType": "YulIdentifier",
																							"src": "17031:2:8"
																						},
																						"nativeSrc": "17031:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "17031:18:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "17058:14:8",
																									"nodeType": "YulIdentifier",
																									"src": "17058:14:8"
																								},
																								"nativeSrc": "17058:16:8",
																								"nodeType": "YulFunctionCall",
																								"src": "17058:16:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "17051:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "17051:6:8"
																						},
																						"nativeSrc": "17051:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "17051:24:8"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nativeSrc": "17028:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "17028:2:8"
																				},
																				"nativeSrc": "17028:48:8",
																				"nodeType": "YulFunctionCall",
																				"src": "17028:48:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nativeSrc": "17103:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "17103:3:8"
																						},
																						"nativeSrc": "17103:5:8",
																						"nodeType": "YulFunctionCall",
																						"src": "17103:5:8"
																					},
																					{
																						"name": "token",
																						"nativeSrc": "17110:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "17110:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17117:1:8",
																						"nodeType": "YulLiteral",
																						"src": "17117:1:8",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17120:4:8",
																						"nodeType": "YulLiteral",
																						"src": "17120:4:8",
																						"type": "",
																						"value": "0x10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17126:4:8",
																						"nodeType": "YulLiteral",
																						"src": "17126:4:8",
																						"type": "",
																						"value": "0x44"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17132:4:8",
																						"nodeType": "YulLiteral",
																						"src": "17132:4:8",
																						"type": "",
																						"value": "0x00"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17138:4:8",
																						"nodeType": "YulLiteral",
																						"src": "17138:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "call",
																					"nativeSrc": "17098:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "17098:4:8"
																				},
																				"nativeSrc": "17098:45:8",
																				"nodeType": "YulFunctionCall",
																				"src": "17098:45:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16756:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16756:3:8"
																		},
																		"nativeSrc": "16756:405:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16756:405:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16732:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16732:6:8"
																},
																"nativeSrc": "16732:443:8",
																"nodeType": "YulFunctionCall",
																"src": "16732:443:8"
															},
															"nativeSrc": "16729:1318:8",
															"nodeType": "YulIf",
															"src": "16729:1318:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18148:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18148:4:8",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18154:1:8",
																		"nodeType": "YulLiteral",
																		"src": "18154:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18141:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18141:6:8"
																},
																"nativeSrc": "18141:15:8",
																"nodeType": "YulFunctionCall",
																"src": "18141:15:8"
															},
															"nativeSrc": "18141:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "18141:15:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1790,
														"isOffset": false,
														"isSlot": false,
														"src": "16541:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1790,
														"isOffset": false,
														"isSlot": false,
														"src": "17524:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1788,
														"isOffset": false,
														"isSlot": false,
														"src": "16484:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1786,
														"isOffset": false,
														"isSlot": false,
														"src": "17110:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1786,
														"isOffset": false,
														"isSlot": false,
														"src": "17460:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1786,
														"isOffset": false,
														"isSlot": false,
														"src": "17732:5:8",
														"valueSize": 1
													}
												],
												"id": 1793,
												"nodeType": "InlineAssembly",
												"src": "16448:1718:8"
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "16008:300:8",
										"text": "@dev Sets `amount` of ERC20 `token` for `to` to manage on behalf of the current contract.\n If the initial attempt to approve fails, attempts to reset the approved amount to zero,\n then retries the approval again (some tokens, e.g. USDT, requires this).\n Reverts upon failure."
									},
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApproveWithRetry",
									"nameLocation": "16322:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16351:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "16343:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16343:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16366:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "16358:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16378:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "16370:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16370:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16342:43:8"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16395:0:8"
									},
									"scope": 1808,
									"src": "16313:1859:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "18389:632:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "18451:564:8",
													"nodeType": "YulBlock",
													"src": "18451:564:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18472:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18472:4:8",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "account",
																		"nativeSrc": "18478:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "18478:7:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18465:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18465:6:8"
																},
																"nativeSrc": "18465:21:8",
																"nodeType": "YulFunctionCall",
																"src": "18465:21:8"
															},
															"nativeSrc": "18465:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "18465:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18607:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18607:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18613:34:8",
																		"nodeType": "YulLiteral",
																		"src": "18613:34:8",
																		"type": "",
																		"value": "0x70a08231000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18600:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18600:6:8"
																},
																"nativeSrc": "18600:48:8",
																"nodeType": "YulFunctionCall",
																"src": "18600:48:8"
															},
															"nativeSrc": "18600:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "18600:48:8"
														},
														{
															"nativeSrc": "18661:344:8",
															"nodeType": "YulAssignment",
															"src": "18661:344:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18718:4:8",
																				"nodeType": "YulLiteral",
																				"src": "18718:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "18712:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "18712:5:8"
																		},
																		"nativeSrc": "18712:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18712:11:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "18837:14:8",
																							"nodeType": "YulIdentifier",
																							"src": "18837:14:8"
																						},
																						"nativeSrc": "18837:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "18837:16:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18855:4:8",
																						"nodeType": "YulLiteral",
																						"src": "18855:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "18834:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "18834:2:8"
																				},
																				"nativeSrc": "18834:26:8",
																				"nodeType": "YulFunctionCall",
																				"src": "18834:26:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nativeSrc": "18928:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "18928:3:8"
																						},
																						"nativeSrc": "18928:5:8",
																						"nodeType": "YulFunctionCall",
																						"src": "18928:5:8"
																					},
																					{
																						"name": "token",
																						"nativeSrc": "18935:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "18935:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18942:4:8",
																						"nodeType": "YulLiteral",
																						"src": "18942:4:8",
																						"type": "",
																						"value": "0x10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18948:4:8",
																						"nodeType": "YulLiteral",
																						"src": "18948:4:8",
																						"type": "",
																						"value": "0x24"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18954:4:8",
																						"nodeType": "YulLiteral",
																						"src": "18954:4:8",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18960:4:8",
																						"nodeType": "YulLiteral",
																						"src": "18960:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "staticcall",
																					"nativeSrc": "18917:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "18917:10:8"
																				},
																				"nativeSrc": "18917:48:8",
																				"nodeType": "YulFunctionCall",
																				"src": "18917:48:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18745:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18745:3:8"
																		},
																		"nativeSrc": "18745:242:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18745:242:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18687:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18687:3:8"
																},
																"nativeSrc": "18687:318:8",
																"nodeType": "YulFunctionCall",
																"src": "18687:318:8"
															},
															"variableNames": [
																{
																	"name": "amount",
																	"nativeSrc": "18661:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18661:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1800,
														"isOffset": false,
														"isSlot": false,
														"src": "18478:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1803,
														"isOffset": false,
														"isSlot": false,
														"src": "18661:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1798,
														"isOffset": false,
														"isSlot": false,
														"src": "18935:5:8",
														"valueSize": 1
													}
												],
												"id": 1805,
												"nodeType": "InlineAssembly",
												"src": "18442:573:8"
											}
										]
									},
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "18178:116:8",
										"text": "@dev Returns the amount of ERC20 `token` owned by `account`.\n Returns zero if the `token` does not exist."
									},
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "18308:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18326:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "18318:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18318:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18341:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "18333:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18333:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18317:32:8"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18381:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "18373:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18373:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18372:16:8"
									},
									"scope": 1808,
									"src": "18299:722:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1809,
							"src": "596:18427:8",
							"usedErrors": [
								1656,
								1659,
								1662,
								1665
							],
							"usedEvents": []
						}
					],
					"src": "32:18992:8"
				},
				"id": 8
			},
			"src/YeeterStrategy.sol": {
				"ast": {
					"absolutePath": "src/YeeterStrategy.sol",
					"exportedSymbols": {
						"BaseStrategy": [
							1650
						],
						"IAllo": [
							359
						],
						"IRegistry": [
							552
						],
						"YeeterStrategy": [
							2043
						]
					},
					"id": 2044,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1810,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/interfaces/IAllo.sol",
							"file": "allo/contracts/core/interfaces/IAllo.sol",
							"id": 1812,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2044,
							"sourceUnit": 360,
							"src": "192:63:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1811,
										"name": "IAllo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 359,
										"src": "200:5:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
							"file": "allo/contracts/core/interfaces/IRegistry.sol",
							"id": 1814,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2044,
							"sourceUnit": 553,
							"src": "256:71:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1813,
										"name": "IRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 552,
										"src": "264:9:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/allo-v2/contracts/strategies/BaseStrategy.sol",
							"file": "allo/contracts/strategies/BaseStrategy.sol",
							"id": 1816,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2044,
							"sourceUnit": 1651,
							"src": "347:72:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1815,
										"name": "BaseStrategy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1650,
										"src": "355:12:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1817,
										"name": "BaseStrategy",
										"nameLocations": [
											"448:12:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1650,
										"src": "448:12:9"
									},
									"id": 1818,
									"nodeType": "InheritanceSpecifier",
									"src": "448:12:9"
								}
							],
							"canonicalName": "YeeterStrategy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2043,
							"linearizedBaseContracts": [
								2043,
								1650,
								814,
								1044,
								832,
								721
							],
							"name": "YeeterStrategy",
							"nameLocation": "430:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "fb765715",
									"id": 1820,
									"name": "INPUT_LENGTH_MISMATCH",
									"nameLocation": "473:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "494:2:9"
									},
									"src": "467:30:9"
								},
								{
									"errorSelector": "15694268",
									"id": 1822,
									"name": "NOOP",
									"nameLocation": "508:4:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:9"
									},
									"src": "502:13:9"
								},
								{
									"body": {
										"id": 1833,
										"nodeType": "Block",
										"src": "596:2:9",
										"statements": []
									},
									"id": 1834,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1829,
													"name": "_allo",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1824,
													"src": "582:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1830,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1826,
													"src": "589:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1831,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1828,
												"name": "BaseStrategy",
												"nameLocations": [
													"569:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1650,
												"src": "569:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "569:26:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "_allo",
												"nameLocation": "541:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "533:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "562:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "548:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1825,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "548:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:36:9"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "596:0:9"
									},
									"scope": 2043,
									"src": "521:77:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										691
									],
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "687:87:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1843,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "717:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1842,
														"name": "__BaseStrategy_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "697:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "697:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1845,
												"nodeType": "ExpressionStatement",
												"src": "697:28:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1847,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "752:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1848,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1838,
															"src": "761:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1846,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "740:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (uint256,bytes memory)"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "740:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1850,
												"nodeType": "EmitStatement",
												"src": "735:32:9"
											}
										]
									},
									"functionSelector": "edd146cc",
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "613:10:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1840,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "678:8:9"
									},
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "632:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "624:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "654:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "641:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1837,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "641:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:37:9"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "687:0:9"
									},
									"scope": 2043,
									"src": "604:170:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "1070:61:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1867,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "1096:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1868,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "1104:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1869,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "1116:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1866,
														"name": "_transferAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "1080:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1080:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1871,
												"nodeType": "ExpressionStatement",
												"src": "1080:44:9"
											}
										]
									},
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "780:177:9",
										"text": "@notice Withdraw funds stuck on contract\n @param _token Token address\n @param _recipient Address to send the funds to\n @param _amount Amount to withdraw"
									},
									"functionSelector": "d9caed12",
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1862,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1058:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1062:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1058:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1864,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1861,
												"name": "onlyPoolManager",
												"nameLocations": [
													"1042:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1113,
												"src": "1042:15:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1042:27:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "971:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "988:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "980:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "1004:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "996:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1024:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "1016:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:53:9"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1070:0:9"
									},
									"scope": 2043,
									"src": "962:169:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1876,
										"nodeType": "Block",
										"src": "1164:2:9",
										"statements": []
									},
									"id": 1877,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:2:9"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:0:9"
									},
									"scope": 2043,
									"src": "1137:29:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1544
									],
									"body": {
										"id": 1972,
										"nodeType": "Block",
										"src": "1444:913:9",
										"statements": [
											{
												"assignments": [
													1893,
													1896,
													1898
												],
												"declarations": [
													{
														"constant": false,
														"id": 1893,
														"mutability": "mutable",
														"name": "_recipientIds",
														"nameLocation": "1499:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1972,
														"src": "1482:30:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1482:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1892,
															"nodeType": "ArrayTypeName",
															"src": "1482:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1896,
														"mutability": "mutable",
														"name": "_amounts",
														"nameLocation": "1531:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1972,
														"src": "1514:25:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1894,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1514:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1895,
															"nodeType": "ArrayTypeName",
															"src": "1514:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1898,
														"mutability": "mutable",
														"name": "_token",
														"nameLocation": "1549:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1972,
														"src": "1541:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1897,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1541:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1912,
												"initialValue": {
													"arguments": [
														{
															"id": 1901,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "1582:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"baseExpression": {
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1590:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1902,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1590:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1590:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
																		"typeString": "type(address[] memory)"
																	}
																},
																{
																	"baseExpression": {
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1601:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1905,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1601:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1601:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "type(uint256[] memory)"
																	}
																},
																{
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1612:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1908,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1612:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1910,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1589:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_address_$_$",
																"typeString": "tuple(type(address[] memory),type(uint256[] memory),type(address))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_address_$_$",
																"typeString": "tuple(type(address[] memory),type(uint256[] memory),type(address))"
															}
														],
														"expression": {
															"id": 1899,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1571:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1575:6:9",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1571:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1571:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_payable_$",
														"typeString": "tuple(address[] memory,uint256[] memory,address payable)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1481:140:9"
											},
											{
												"assignments": [
													1914
												],
												"declarations": [
													{
														"constant": false,
														"id": 1914,
														"mutability": "mutable",
														"name": "payoutLength",
														"nameLocation": "1640:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1972,
														"src": "1632:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1913,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1632:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1917,
												"initialValue": {
													"expression": {
														"id": 1915,
														"name": "_recipientIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "1655:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1669:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1655:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1632:43:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1918,
														"name": "payoutLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "1731:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1747:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1731:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1925,
												"nodeType": "IfStatement",
												"src": "1727:78:9",
												"trueBody": {
													"id": 1924,
													"nodeType": "Block",
													"src": "1750:55:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1921,
																	"name": "INPUT_LENGTH_MISMATCH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1820,
																	"src": "1771:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1771:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1923,
															"nodeType": "RevertStatement",
															"src": "1764:30:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1926,
														"name": "payoutLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "1876:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1927,
															"name": "_amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "1892:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1901:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1892:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1876:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1934,
												"nodeType": "IfStatement",
												"src": "1872:92:9",
												"trueBody": {
													"id": 1933,
													"nodeType": "Block",
													"src": "1909:55:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1930,
																	"name": "INPUT_LENGTH_MISMATCH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1820,
																	"src": "1930:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1930:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1932,
															"nodeType": "RevertStatement",
															"src": "1923:30:9"
														}
													]
												}
											},
											{
												"body": {
													"id": 1970,
													"nodeType": "Block",
													"src": "2056:295:9",
													"statements": [
														{
															"assignments": [
																1942
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1942,
																	"mutability": "mutable",
																	"name": "_amount",
																	"nameLocation": "2078:7:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1970,
																	"src": "2070:15:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1941,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2070:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1946,
															"initialValue": {
																"baseExpression": {
																	"id": 1943,
																	"name": "_amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "2088:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1945,
																"indexExpression": {
																	"id": 1944,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1936,
																	"src": "2097:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2088:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2070:29:9"
														},
														{
															"assignments": [
																1948
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1948,
																	"mutability": "mutable",
																	"name": "_recipientId",
																	"nameLocation": "2121:12:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1970,
																	"src": "2113:20:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1947,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2113:7:9",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1952,
															"initialValue": {
																"baseExpression": {
																	"id": 1949,
																	"name": "_recipientIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "2136:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1951,
																"indexExpression": {
																	"id": 1950,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1936,
																	"src": "2150:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2136:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2113:39:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1954,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "2183:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1955,
																		"name": "_recipientId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1948,
																		"src": "2191:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1956,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "2205:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1953,
																	"name": "_transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "2167:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2167:46:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1958,
															"nodeType": "ExpressionStatement",
															"src": "2167:46:9"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1960,
																		"name": "_recipientId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1948,
																		"src": "2242:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1961,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "2256:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1962,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "2265:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1963,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1882,
																		"src": "2273:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1959,
																	"name": "Allocated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "2232:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address,address)"
																	}
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2232:49:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1965,
															"nodeType": "EmitStatement",
															"src": "2227:54:9"
														},
														{
															"id": 1969,
															"nodeType": "UncheckedBlock",
															"src": "2295:46:9",
															"statements": [
																{
																	"expression": {
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "2323:3:9",
																		"subExpression": {
																			"id": 1966,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1936,
																			"src": "2325:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1968,
																	"nodeType": "ExpressionStatement",
																	"src": "2323:3:9"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1938,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "2037:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1939,
														"name": "payoutLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "2041:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2037:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1971,
												"initializationExpression": {
													"assignments": [
														1936
													],
													"declarations": [
														{
															"constant": false,
															"id": 1936,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2034:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1971,
															"src": "2026:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1935,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2026:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1937,
													"nodeType": "VariableDeclarationStatement",
													"src": "2026:9:9"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "2021:330:9"
											}
										]
									},
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "1172:160:9",
										"text": "@notice Allocate Yeeter funds to recipients\n @param _data Array of recipientAddress , Array of amounts and the token address to allocate the funds to"
									},
									"id": 1973,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1886,
													"name": "_sender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1882,
													"src": "1435:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1887,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1885,
												"name": "onlyPoolManager",
												"nameLocations": [
													"1419:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1113,
												"src": "1419:15:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1419:24:9"
										}
									],
									"name": "_allocate",
									"nameLocation": "1346:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1884,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1410:8:9"
									},
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1369:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "1356:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1879,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1356:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "1384:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "1376:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1355:37:9"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1444:0:9"
									},
									"scope": 2043,
									"src": "1337:1020:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1555
									],
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "2484:30:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1984,
														"name": "NOOP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "2501:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2501:6:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 1986,
												"nodeType": "RevertStatement",
												"src": "2494:13:9"
											}
										]
									},
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distribute",
									"nameLocation": "2405:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1982,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2475:8:9"
									},
									"parameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "2417:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1974,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2417:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1975,
													"nodeType": "ArrayTypeName",
													"src": "2417:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "2435:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1977,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2435:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "2449:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2416:41:9"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2484:0:9"
									},
									"scope": 2043,
									"src": "2396:118:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1575
									],
									"body": {
										"id": 2000,
										"nodeType": "Block",
										"src": "2606:30:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1997,
														"name": "NOOP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "2623:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2623:6:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 1999,
												"nodeType": "RevertStatement",
												"src": "2616:13:9"
											}
										]
									},
									"id": 2001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRecipientStatus",
									"nameLocation": "2529:19:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1992,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2580:8:9"
									},
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "2549:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2549:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2548:9:9"
									},
									"returnParameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "2598:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$566",
													"typeString": "enum IStrategy.Status"
												},
												"typeName": {
													"id": 1994,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1993,
														"name": "Status",
														"nameLocations": [
															"2598:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 566,
														"src": "2598:6:9"
													},
													"referencedDeclaration": 566,
													"src": "2598:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$566",
														"typeString": "enum IStrategy.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2597:8:9"
									},
									"scope": 2043,
									"src": "2520:116:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1526
									],
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "2724:30:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2009,
														"name": "NOOP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "2741:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2741:6:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 2011,
												"nodeType": "RevertStatement",
												"src": "2734:13:9"
											}
										]
									},
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isValidAllocator",
									"nameLocation": "2651:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2005,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2700:8:9"
									},
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "2669:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:9:9"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "2718:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2718:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:6:9"
									},
									"scope": 2043,
									"src": "2642:112:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1536
									],
									"body": {
										"id": 2026,
										"nodeType": "Block",
										"src": "2855:30:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2023,
														"name": "NOOP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "2872:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2872:6:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 2025,
												"nodeType": "RevertStatement",
												"src": "2865:13:9"
											}
										]
									},
									"id": 2027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_registerRecipient",
									"nameLocation": "2769:18:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2019,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2828:8:9"
									},
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "2788:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2014,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2788:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "2802:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:23:9"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "2846:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:9:9"
									},
									"scope": 2043,
									"src": "2760:125:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1566
									],
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "2996:30:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2038,
														"name": "NOOP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "3013:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3013:6:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 2040,
												"nodeType": "RevertStatement",
												"src": "3006:13:9"
											}
										]
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPayout",
									"nameLocation": "2900:10:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2033,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2956:8:9"
									},
									"parameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "2911:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2911:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "2920:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2030,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2920:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2910:23:9"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "2974:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PayoutSummary_$572_memory_ptr",
													"typeString": "struct IStrategy.PayoutSummary"
												},
												"typeName": {
													"id": 2035,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2034,
														"name": "PayoutSummary",
														"nameLocations": [
															"2974:13:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 572,
														"src": "2974:13:9"
													},
													"referencedDeclaration": 572,
													"src": "2974:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PayoutSummary_$572_storage_ptr",
														"typeString": "struct IStrategy.PayoutSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2973:22:9"
									},
									"scope": 2043,
									"src": "2891:135:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2044,
							"src": "421:2607:9",
							"usedErrors": [
								727,
								730,
								733,
								736,
								739,
								742,
								745,
								748,
								751,
								754,
								757,
								760,
								763,
								766,
								769,
								772,
								775,
								778,
								781,
								784,
								787,
								790,
								793,
								796,
								799,
								804,
								807,
								810,
								813,
								843,
								1820,
								1822
							],
							"usedEvents": [
								579,
								588,
								599,
								610,
								615
							]
						}
					],
					"src": "32:2997:9"
				},
				"id": 9
			}
		}
	}
}